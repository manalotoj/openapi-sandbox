swagger: '2.0'
info:
  version: ''
  title: EMS Rest API.
  description: ' https://userdocs.cority.com/articles/#!fordevelopers/tools'
host: api.enviance.com
basePath: /
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: Authenticate
    description: Authentication and Session APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/authenticate
  - name: Command
    description: Command Log APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/command
  - name: ComplianceModel
    description: Compliance Model APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/compliancemodel-1
  - name: Document
    description: Document APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/document-2
  - name: Document21
    description: Document APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/document-2
  - name: Event
    description: Event APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/event-1
  - name: Integration_EQL
    description: EQL APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/eql-1
  - name: Integration_ScimIdentity
    description: Scim Identity APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/scimidentity
  - name: Messages
    description: Message APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/messages
  - name: NonNumericData
    description: Non-Numeric Data APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/nonnumericdata-1
  - name: NumericData
    description: Numeric Data APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/numericdata-1
  - name: NumericData_calc
    description: Numeric Data Calculations APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/numericdatacalc
  - name: Reports
    description: Report APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/reports
  - name: Setup_EnvianceApp
    description: Enviance App APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/envianceapp
  - name: Setup_FormTemplate
    description: Form Template Management API and Data Type
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/formtemplate-1
  - name: Setup_TagScheme
    description: Tag Scheme APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/tagscheme-1
  - name: Setup_Tags
    description: Tag APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/tags
  - name: Setup_UserGroups
    description: User Group APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/task-2
  - name: Setup_WorkflowRole
    description: Workflow Role Management API and Data Type
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/workflowrole-2
  - name: Setup_WorkflowType
    description: Workflow Type APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/workflowtype-2
  - name: Task
    description: Task APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/task-2
  - name: Workflow
    description: Workflow APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/workflow-1
  - name: Workflow21
    description: Workflow APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/workflow-1
  - name: workflowPermissions
    description: Workflow APIs and Data Types
    externalDocs:
      url: https://userdocs.cority.com/articles/#!fordevelopers/workflowpermissions
securityDefinitions:
  Bearer:
    type: apiKey
    description: |-
      **Enviance \<SessionId\>**. 
      Obtain SessionId by POST /ver2/AuthenticationService.svc/sessions first
    name: Authorization
    in: header
  Basic:
    type: basic
    description: Supported, but not recommended
security:
  - Bearer: []
  - Basic: []
paths:
  /ver2/AuthenticationService.svc/sessions:
    post:
      description: "Creates a new session by authenticating via username and password.\n\n**Security:** All users.\n\n**SDK API (create):** `envianceSdk.authentication.authenticate(userName, password, onsuccess, onerror)`\n\n```\nPOST /ver2/AuthenticationService.svc/sessions HTTP/1.1\r\nContent-Type: application/json; charset=UTF-8\r\n \r\n{\r\n  userName: \"username\",\r\n  password: \"pass111\"\r\n}\r\n\n```\n"
      operationId: Authenticate_authenticate
      produces:
        - application/json
      parameters:
        - name: authenticateInfo
          in: body
          description: Login information.
          required: true
          schema:
            $ref: '#/definitions/Authenticate_authenticateInfo'
      responses:
        '201':
          description: The id string (GUID) for the newly created session.
          schema:
            type: string
      security: []
      tags:
        - Authenticate
  /ver2/AuthenticationService.svc/sessions/cert:
    patch:
      description: "Creates a new session by authenticating via encrypted username and certification id.\n\n**Security:** All users.\n\n**SDK API:**  `envianceSdk.authentication.authenticateByCert(encryptedUserName, certUniqueId, onsuccess, onerror)`\n\n```\nPATCH /ver2/AuthenticationService.svc/sessions HTTP/1.1\r\nContent-Type: application/json; charset=UTF-8\r\n \r\n{\r\n  encryptedUserName: \"username\",\r\n  certUniqueId: \"abcd23456789\",\r\n}\r\n\n```\n"
      operationId: Authenticate_authenticateByCert
      produces:
        - application/json
      parameters:
        - in: body
          name: authenticateByCertInfo
          description: Login information.
          required: true
          schema:
            $ref: '#/definitions/Authenticate_authenticateByCertInfo'
      responses:
        '201':
          description: The id string (GUID) for the newly created session.
          schema:
            type: string
      security: []
      tags:
        - Authenticate
  /ver2/AuthenticationService.svc/sessions/long:
    post:
      description: |-
        Creates long-living session from current (source session). It does not close source session, so user still in source session (getCurrentSession() should return same value).
        Second call of createLongLivingSession() should reuse longSession if it already exists.
        **Security:** All users.

        **SDK API:**  `envianceSdk.authentication.createLongLivingSession(onsuccess, onerror)`  
        null
      operationId: Authenticate_createLongLivingSession
      produces:
        - application/json
      responses:
        '200':
          description: The id string (GUID) for the newly created session.
          schema:
            type: string
      security: []
      tags:
        - Authenticate
  /ver2/AuthenticationService.svc/currentSession:
    get:
      description: "Gets information about the current session. The current session is determined using the session id specified in the Authorization header.\n\n**Security:** All users.\n\n**SDK API:**  `envianceSdk.authentication.getCurrentSession(onsuccess, onerror)`\n\n```\nGET /ver2/AuthenticationService.svc/currentsession HTTP/1.1\r\n\n```\n"
      operationId: Authenticate_getCurrentSession
      produces:
        - application/json
        - application/xml
      responses:
        '200':
          description: An instance of the sessionInfo data structure.
          schema:
            $ref: '#/definitions/Authenticate_sessionInfo'
      tags:
        - Authenticate
    delete:
      description: "Ends the current session, logging off the User. The current session is determined using the session id specified in the Authorization header.\n\n**Security:** All users.\n\n**SDK API:**  `envianceSdk.authentication.endCurrentSession(onsuccess, onerror)`\n\n```\nDELETE /ver2/AuthenticationService.svc/currentsession HTTP/1.1\r\n\n```\n"
      operationId: Authenticate_endCurrentSession
      produces:
        - application/json
        - application/xml
      responses:
        '204':
          description: Current session ended.
      security: []
      tags:
        - Authenticate
  /ver2/CommandService.svc/commands/{commandId}:
    get:
      description: "Returns information about a previously submitted command (any API which is asynchronous).\n\n**Security:** All users.\n\n**SDK API (create):**  `envianceSdk.commands.getCommand (commandId, onsuccess, onerror)`\n\n```\nGET /ver2/CommandService.svc/commands/08fc5438-a0d8-4bf9-9141-12dd98e7ce80/ HTTP/1.1\r\n\r\n//RESPONSE\r\n{\r\n  \"id\": \"08fc5438-a0d8-4bf9-9141-12dd98e7ce80\",\r\n  \"description\": \"Data batch processed.\",\r\n  \"issued\": \"2012-12-01T08:00:00\",\r\n  \"startedProcessing\": \"2012-12-01T08:01:00\",\r\n  \"finishedProcessing\": \"2012-12-01T08:02:00\",\r\n  \"status\": \"Succeeded\",\r\n  \"objects\": [\"/Facility A/Unit X/Parameter Z\"],\r\n  \"user\": \"JSmith\",\r\n  \"errorInfo\": {\r\n    \"error\": \"Requirement with Tag 'GZB_AVG_SORTED' could not be found in the system.\",\r\n    \"details\": [\r\n      { \"key\": \"Tag\", \"value\": \"GZB_AVG_SORTED\" },\r\n      { \"key\": \"Complete Date\", \"value\": \"2012-02-08T09:50:00\" },\r\n      { \"key\": \"Value\", \"value\": \"18.00803565979\" }\r\n    ]\r\n  }\r\n}\r\n\n```\n"
      operationId: Command_getCommand
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: commandId
          description: The id string (GUID) for a previously submitted command.
          required: true
          type: string
      responses:
        '200':
          description: An instance of the commandInfo structure.
          schema:
            $ref: '#/definitions/Command_commandInfo'
      tags:
        - Command
    delete:
      description: "Deletes information about a previously submitted command. *Deletions are permanent*.\n\n**Security:** All users.\n\n**SDK API (create):**  `envianceSdk.commands.deleteCommand(commandId, onsuccess, onerror)`\n\n```\nDELETE /ver2/CommandService.svc/commands/08fc5438-a0d8-4bf9-9141-12dd98e7ce80/ HTTP/1.1\r\n\n```\n"
      operationId: Command_deleteCommand
      parameters:
        - name: commandId
          in: path
          description: The id string (GUID) for a previously submitted command.
          required: true
          type: string
      responses:
        '204':
          description: Command deleted.
      tags:
        - Command
  /ver2/ComplianceService.svc/locations:
    post:
      description: "Creates a new Location object in the Compliance Model, optionally by copying the structure from another Location to the new Location. Supported object types are Division, Facility (Program), Unit (Element), and Point of Interest. This API does not support historical custom fields (those with Track Value History enabled).\n\n**Security:** User with permission to Compliance Objects.\n\n**SDK API (create):**  `envianceSdk.compliance.createLocation (locationInfo, onsuccess, onerror)`\n\n**SDK API (create async):**  `envianceSdk.compliance.createLocationAsync (locationInfo, onsuccess, onerror)` \n\n**SDK API (copy):**  `envianceSdk.compliance.copyLocation(locationInfo, copyFrom, onsuccess, onerror)`\n\n**SDK API (copy async):**  `envianceSdk.compliance.copyLocationAsync (locationInfo, copyFrom, onsuccess, onerror)`\n\n```\n//EXAMPLE (CREATE)\r\n\r\nPOST /ver2/ComplianceService.svc/locations HTTP 1.1\r\nContent-Type: application/json; charset=utf-8\r\n\r\n{\r\n  \"locationInfo\": {\r\n    \"name\": \"Toy Manufacturing\",\r\n    \"type\": \"Facility\",\r\n    \"parentPath\": \"/Manufacturing Division/Toys/\",\r\n    \"timeZone\": { \"name\": \"Pacific Time (US & Canada) (UTC-08:00) (With DST)\" },\r\n    \"activeDate\": \"2012-01-01T00:00:00\",\r\n    \"fieldTemplate\": \"Manufacturing Facility\",\r\n    \"fieldValues\": [\r\n      {\"name\": \"Aspect\",\r\n      \"values\": [\"Air pollution control waste\"]},\r\n      {\"name\": \"Start Date\",\r\n      \"values\": [\"2012-09-19T20:00:00\"]},\r\n      {\"name\": \"Type\",\r\n      \"values\": [\"Spill\", \"Near Miss\"]},\r\n      {\"name\": \"Category\",\r\n      \"values\": [\"Cat1\", \"Cat1.1\", \"Cat1.1.1\"]}\r\n    ],\r\n  \"documents\": [\"/Folder A/Document.doc\"]\r\n  }\r\n}\r\n\r\n//EXAMPLE (COPY)\r\nPOST /ver2/ComplianceService.svc/locations HTTP 1.1\r\nContent-Type: application/json; charset=utf-8\r\n \r\n{\r\n  \"locationInfo\": {\r\n  \"name\": \"Toy Manufacturing\",\r\n  \"type\": \"Facility\",\r\n  \"parentPath\": \"/Manufacturing Division/Toys/\",\r\n  \"timeZone\": { \"name\": \"Pacific Time (US & Canada) (UTC-08:00) (With DST)\" },\r\n  \"activeDate\": \"2012-01-01T00:00:00\",\r\n  \"fieldTemplate\": \"Manufacturing Facility\",\r\n  \"fieldValues\": [\r\n    {\"name\": \"Aspect\",\r\n    \"values\": [\"Air pollution control waste\"]},\r\n    {\"name\": \"Start Date\",\r\n    \"values\": [\"2012-09-19T20:00:00\"]},\r\n    {\"name\": \"Type\",\r\n    \"values\": [\"Spill\", \"Near Miss\"]},\r\n    {\"name\": \"Category\",\r\n    \"values\": [\"Cat1\", \"Cat1.1\", \"Cat1.1.1\"]}\r\n  ],\r\n  \"documents\": [\"/Folder A/Document.doc\"]\r\n  },\r\n  \"copyFrom\": \"/Manufacturing Division/Books\"\r\n}\r\n\n```\n"
      operationId: ComplianceModel_createLocation
      produces:
        - application/json
      parameters:
        - name: LocationCreateInfo
          in: body
          description: A LocationCreateInfo structure.
          required: true
          schema:
            $ref: '#/definitions/ComplianceModel_locationCreateInfo'
      responses:
        '200':
          description: The id for the queued command.
          schema:
            type: string
      tags:
        - ComplianceModel
  /ver2/ComplianceService.svc/locations/{locationIdOrPath}:
    patch:
      description: "Updates (and potentially moves) an existing Location object in the Compliance Model. Specifying a new parent path moves the Location underneath another parent Location. Updating the Custom Field Template of a Location object, if that object currently has no Template, adds the Template to the object. When switching from one Template to another Template, those values that belong to fields common to both Templates are kept, any values for fields not in the new Template are removed permanently. Setting the Template to null permanently removes all Custom Field values. This API does not support historical custom fields (those with Track Value History enabled).\n\n**Security:** User with permission to Compliance Objects.\n\n**SDK API:**  `envianceSdk.compliance.updateLocation (locationIdOrPath, locationInfo, onsuccess, onerror)`\n\n**SDK API (async):**  `envianceSdk.compliance.updateLocationAsync (locationIdOrPath, locationInfo, onsuccess, onerror)`\n\n```\nPATCH /ver2/ComplianceService.svc/locations/06cc9d1c-731b-4031-b471-de3336b0166d HTTP 1.1\r\nContent-Type: application/json; charset=utf-8\r\n \r\n{\r\n  \"locationInfo\": {\r\n  \"name\": \"Toy Manufacturing\",\r\n  \"fieldValues\": [\r\n    {\"name\": \"Aspect\", \"values\": [\"Air pollution control waste\"]},\r\n    {\"name\": \"Start Date\", \"values\": [\"2012-09-19T20:00:00\"]},\r\n    {\"name\": \"Type\", \"values\": [\"Spill\", \"Near Miss\"]},\r\n    {\"name\": \"Category\", \"values\": [\"Cat1\", \"Cat1.1\", \"Cat1.1.1\"]}\r\n  ],\r\n  \"documents\": [\"/Folder A/Document.doc\"]\r\n  }\r\n}\r\n\r\n//EXAMPLE with MOVE\r\nPATCH /ver2/ComplianceService.svc/locations/06cc9d1c-731b-4031-b471-de3336b0166d HTTP 1.1\r\nContent-Type: application/json; charset=utf-8\r\n \r\n{\r\n  \"locationInfo\": {\r\n  \"name\": \"Toy Manufacturing\",\r\n  \"parentPath\": \"/New Manufacturing Division/Toys/\"\r\n  }\r\n}\r\n\n```\n"
      operationId: ComplianceModel_updateLocation
      produces:
        - application/json
      parameters:
        - in: path
          name: locationIdOrPath
          description: Either an id string (GUID) or a path string uniquely identifying the Location object in the Compliance Model. Any string that matches the pattern of a GUID is interpreted as the id string and not the path of the Location. A path string must be URL encoded.
          required: true
          type: string
        - name: locationInfo
          in: body
          description: A locationInfo structure. Some properties of this structure are ignored during this operation.
          required: false
          schema:
            $ref: '#/definitions/ComplianceModel_locationInfo'
      responses:
        '200':
          description: The id for the queued command.
          schema:
            type: string
      tags:
        - ComplianceModel
    get:
      description: "Gets information about the specified Location object in the Compliance Model. Supported object types are Division, Facility (Program), Unit (Element), and Point of Interest. This API does not support historical custom fields (those with Track Value History enabled).\n\n**Security:** User with permission to Compliance Objects.\n\n**SDK API:** `envianceSdk.compliance.getLocation (locationIdOrPath, onsuccess, onerror)`\n\n```\nGET /ver2/ComplianceService.svc/locations/06cc9d1c-731b-4031-b471-de3336b0166d HTTP 1.1\r\n\r\n//RESPONSE\r\n{\r\n  \"id\": \"06cc9d1c-731b-4031-b471-de3336b0166d\",\r\n  \"name\": \"Toy Manufacturing\",\r\n  \"type\": \"Facility\",\r\n  \"parentPath\": \"/Manufacturing Division/Toys/\",\r\n  \"timeZone\": \"USA Pacific\",\r\n  \"activeDate\": \"2012-01-01T00:00:00\",\r\n  \"fieldTemplate\": \"Manufacturing Facility\",\r\n  \"fieldValues\": [\r\n    {\"name\": \"Aspect\", \"values\": [\"Air pollution control waste\"]},\r\n    {\"name\": \"Start Date\", \"values\": [\"2012-09-19T20:00:00\"]},\r\n    {\"name\": \"Type\", \"values\": [\"Spill\", \"Near Miss\"]},\r\n    {\"name\": \"Category\", \"values\": [\"Cat1\", \"Cat1.1\", \"Cat1.1.1\"]}\r\n  ],\r\n  \"documents\": [\"/Folder A/Document.doc\"]\r\n}\r\n\n```\n"
      operationId: ComplianceModel_getLocation
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: locationIdOrPath
          description: Either an id string (GUID) or a path string uniquely identifying the Location object in the Compliance Model. Any string that matches the pattern of a GUID is interpreted as the id string and not the path of the Location. A path string must be URL encoded.
          required: true
          type: string
      responses:
        '200':
          description: An instance of the locationInfo structure.
      tags:
        - ComplianceModel
    delete:
      description: |
        Deletes a Location, including all Locations, Requirements, numeric data, Tasks, Workflows, Events, etc underneath it. *Deletions are permanent*. If 'waitForCompletion' flag is included, transaction will wait until operation is complete; 'waitForCompletion' flag is ignored for Async method.

        **Security:** User with permission to Compliance Objects.

        **SDK API:** `envianceSdk.compliance.deleteLocation(locationIdOrPath, waitForCompletion, onsuccess, onerror)`

        **SDK API (async):** `envianceSdk.compliance.deleteLocationAsync (locationIdOrPath, waitForCompletion, onsuccess, onerror)` 

        ```
        DELETE /ver2/ComplianceService.svc/locations/06cc9d1c-731b-4031-b471-de3336b0166d HTTP 1.1
        ```
      operationId: ComplianceModel_deleteLocation
      parameters:
        - name: locationIdOrPath
          in: path
          description: Either an id string (GUID) or a path string uniquely identifying the Location object in the Compliance Model. Any string that matches the pattern of a GUID is interpreted as the id string and not the path of the Location. A path string must be URL encoded.
          required: true
          type: string
      responses:
        '204':
          description: Compliance Object deleted
      tags:
        - ComplianceModel
  /ver2/ComplianceService.svc/locations/{locationIdOrPath}/overrides:
    get:
      summary: Gets Overrides Info for the specified Location object in the Compliance Model. Supported object types are Division, Facility (Program), Unit (Element), and Point of Interest.overridesInfo
      description: |-
        **Security:** Allowed for Users with Manage Workflows right or User in Workflow Managers role of WF, or User with Manage Workflows

        **SDK API:** 'envianceSdk.compliance.getOverrides (locationIdOrPath, onsuccess, onerror)'
        null
      operationId: ComplianceModel_getOverrides
      parameters:
        - in: path
          name: locationIdOrPath
          description: Either an id string (GUID) or a path string uniquely identifying the Location object in the Compliance Model. Any string that matches the pattern of a GUID is interpreted as the id string and not the path of the Location. A path string must be URL encoded.
          required: true
          type: string
      responses:
        '200':
          description: An instance of the overridesInfo structure.
          schema:
            $ref: '#/definitions/ComplianceModel_overridesInfo'
      tags:
        - ComplianceModel
    patch:
      summary: Updates specified Role and policies overrides for specified compliance object.
      description: |-
        **Security:** Allowed for Users with Manage Workflows right or User in Workflow Managers role of WF, or User with Manage Workflows on any objects associated with the workflow.

        **SDK API:**  'envianceSdk.workflows.updateOverrides (locationIdOrPath, overridesInfo, onsuccess, onerror)'
        null
      operationId: ComplianceModel_updateOverrides
      produces:
        - application/json
      parameters:
        - in: path
          name: locationIdOrPath
          description: Either an id string (GUID) or a path string uniquely identifying the Location object in the Compliance Model. Any string that matches the pattern of a GUID is interpreted as the id string and not the path of the Location. A path string must be URL encoded.
          required: true
          type: string
        - name: overridesInfo
          in: body
          description: An overridesInfo structure
          schema:
            $ref: '#/definitions/ComplianceModel_overridesInfo'
      responses:
        '200':
          description: Ok.
      tags:
        - ComplianceModel
    delete:
      summary: Deletes specified Role and policies overrides of specified compliance object.
      description: |-
        **Security:** Allowed for Users with Manage Workflows right or User in Workflow Managers role of WF, or User with Manage Workflows on any objects associated with the workflow.

        **SDK API:**  'envianceSdk.workflows.deleteOverrides (locationIdOrPath, overridesInfo, onsuccess, onerror)'
        null
      operationId: ComplianceModel_deleteOverrides
      parameters:
        - in: path
          name: locationIdOrPath
          description: Either an id string (GUID) or a path string uniquely identifying the Location object in the Compliance Model. Any string that matches the pattern of a GUID is interpreted as the id string and not the path of the Location. A path string must be URL encoded.
          required: true
          type: string
        - name: overridesInfo
          in: body
          description: An overridesInfo structure
          schema:
            $ref: '#/definitions/ComplianceModel_overridesInfo'
      responses:
        '200':
          description: Ok.
      tags:
        - ComplianceModel
  /ver2/DocumentService.svc/documents:
    post:
      description: "Creates a new Document, alternately by copying an existing Document. When creating a Document, the Document will be created in the specified parent folder. If a value is not specified, the Document will be created in the root Folder of Document Manager. The new Document will inherit the security permissions of its parent Folder.\n\n**Security:** Requires Edit permissions on the parent Folder, or the Manage Documents right.\n\n**SDK API (create):**  `envianceSdk.documents.createDocumentBinary (fileInput, documentInfo, onsuccess, onerror)`\n\n**SDK API (create):**  `envianceSdk.documents.createDocument(documentInfo, onsuccess, onerror)`\n \n**SDK API (copy):**  `envianceSdk.documents.copyDocument (documentInfo, copyFrom, onsuccess, onerror)`\n\n```\nPOST /ver2/DocumentService.svc/documents/ HTTP/1.1\r\n \r\n{\r\n  \"documentInfo\": {\r\n    \"name\": \"Quarterly Rundown Checklist\",\r\n    \"fileName\": \"Checklist.doc\",\r\n    \"description\": \"The quarterly rundown checklist.\",\r\n    \"folder\": \"/Site Z/\",\r\n      \"content\": \" TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQsIHNlZCBkbyBlaXVzbW9kIHRlbXBvciBpbmNpZGlkdW50IHV0IGxhYm9yZSBldCBkb2xvcmUgbWFnbmEgYWxpcXVhLiBVdCBlbmltIGFkIG1pbmltIHZlbmlhbSwgcXVpcyBub3N0cnVkIGV4ZXJjaXRhdGlvbiB1bGxhbWNvIGxhYm9yaXMgbmlzaSB1dCBhbGlxdWlwIGV4IGVhIGNvbW1vZG8gY29uc2VxdWF0LiBEdWlzIGF1dGUgaXJ1cmUgZG9sb3IgaW4gcmVwcmVoZW5kZXJpdCBpbiB2b2x1cHRhdGUgdmVsaXQgZXNzZSBjaWxsdW0gZG9sb3JlIGV1IGZ1Z2lhdCBudWxsYSBwYXJpYXR1ci4gRXhjZXB0ZXVyIHNpbnQgb2NjYWVjYXQgY3VwaWRhdGF0IG5vbiBwcm9pZGVudCwgc3VudCBpbiBjdWxwYSBxdWkgb2ZmaWNpYSBkZXNlcnVudCBtb2xsaXQgYW5pbSBpZCBlc3QgbGFib3J1bS4=\",\r\n    \"objects\": [\"/Facility A/Unit X/Parameter Z\"],\r\n    \"tasks\": [\"b3d15bf6-995e-43d3-a240-6fd6f9626748\"],\r\n    \"workflows\": [\"d66ded7e-5355-488a-a3b7-c243acb83527\", \"ABC123\"]\r\n  }\r\n}\r\n\n```\n"
      operationId: Document_createCopyDocument
      produces:
        - application/json
      parameters:
        - name: documentCreate
          in: body
          description: Create Document body info
          required: true
          schema:
            $ref: '#/definitions/Document_documentCreate'
      responses:
        '200':
          description: The id string (GUID) for the new Document.
          schema:
            type: string
      tags:
        - Document
  /ver2/DocumentService.svc/documents/{documentIdOrPath}:
    post:
      description: "Updates the binary content of a document.\n\n**Security:** Requires Edit permissions on the parent Folder, or the Manage Documents right.\n\n**SDK API:**  `envianceSdk.documents.updateDocumentBinary (fileInput, documentIdOrPath, documentInfo, updateExistingVersion, onsuccess, onerror)`\n\n**SDK API:**  `envianceSdk.documents.updateDocument(documentIdOrPath, documentInfo, onsuccess, onerror)`\n\n```\nPOST /ver2/DocumentService.svc/documents/ HTTP/1.1\r\n \r\n{\r\n  \"documentInfo\": {\r\n    \"name\": \"Quarterly Rundown Checklist\",\r\n    \"fileName\": \"Checklist.doc\",\r\n    \"description\": \"The quarterly rundown checklist.\",\r\n    \"folder\": \"/Site Z/\",\r\n      \"content\": \" TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQsIHNlZCBkbyBlaXVzbW9kIHRlbXBvciBpbmNpZGlkdW50IHV0IGxhYm9yZSBldCBkb2xvcmUgbWFnbmEgYWxpcXVhLiBVdCBlbmltIGFkIG1pbmltIHZlbmlhbSwgcXVpcyBub3N0cnVkIGV4ZXJjaXRhdGlvbiB1bGxhbWNvIGxhYm9yaXMgbmlzaSB1dCBhbGlxdWlwIGV4IGVhIGNvbW1vZG8gY29uc2VxdWF0LiBEdWlzIGF1dGUgaXJ1cmUgZG9sb3IgaW4gcmVwcmVoZW5kZXJpdCBpbiB2b2x1cHRhdGUgdmVsaXQgZXNzZSBjaWxsdW0gZG9sb3JlIGV1IGZ1Z2lhdCBudWxsYSBwYXJpYXR1ci4gRXhjZXB0ZXVyIHNpbnQgb2NjYWVjYXQgY3VwaWRhdGF0IG5vbiBwcm9pZGVudCwgc3VudCBpbiBjdWxwYSBxdWkgb2ZmaWNpYSBkZXNlcnVudCBtb2xsaXQgYW5pbSBpZCBlc3QgbGFib3J1bS4=\",\r\n    \"objects\": [\"/Facility A/Unit X/Parameter Z\"],\r\n    \"tasks\": [\"b3d15bf6-995e-43d3-a240-6fd6f9626748\"],\r\n    \"workflows\": [\"d66ded7e-5355-488a-a3b7-c243acb83527\", \"ABC123\"]\r\n  }\r\n}\r\n\n```\n"
      operationId: Document_updateDocumentBinary
      produces:
        - application/json
      parameters:
        - name: documentIdOrPath
          in: path
          description: The id string (GUID) or path of the Document. Any string that matches the pattern of a GUID is interpreted as the id string, and not the path. A path string must be URL encoded.
          required: true
          type: string
        - name: documentInfo
          in: body
          description: A DocumentInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Document_documentInfo'
      responses:
        '200':
          description: Document updated.
          schema:
            type: string
      tags:
        - Document
    patch:
      description: "Updates the properties and content of a Document. Updating the parent Folder of a Document effectively moves that Document to the new parent folder. When  updating a Document, if the value specified for parent Folder is different from the current parent Folder of the Document, the Document will be moved to the specified location.\n\n**Security:** Requires Edit permissions on the parent Folder, or the Manage Documents right.\n\n**SDK API:**  `envianceSdk.documents.updateDocument(documentIdOrPath, documentInfo, onsuccess, onerror)`\n\n```\n//EXAMPLE (Update)\r\nPATCH /ver2/DocumentService.svc/documents/60f7b719-d430-4bd6-b489-60079795dc9a HTTP/1.1\r\n \r\n{\r\n  \"documentInfo\": {\r\n    \"name\": \"Checklist_Done.doc\",\r\n    \"content\": \"TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQsIHNlZCBkbyBlaXVzbW9kIHRlbXBvciBpbmNpZGlkdW50IHV0IGxhYm9yZSBldCBkb2xvcmUgbWFnbmEgYWxpcXVhLiBVdCBlbmltIGFkIG1pbmltIHZlbmlhbSwgcXVpcyBub3N0cnVkIGV4ZXJjaXRhdGlvbiB1bGxhbWNvIGxhYm9yaXMgbmlzaSB1dCBhbGlxdWlwIGV4IGVhIGNvbW1vZG8gY29uc2VxdWF0LiBEdWlzIGF1dGUgaXJ1cmUgZG9sb3IgaW4gcmVwcmVoZW5kZXJpdCBpbiB2b2x1cHRhdGUgdmVsaXQgZXNzZSBjaWxsdW0gZG9sb3JlIGV1IGZ1Z2lhdCBudWxsYSBwYXJpYXR1ci4gRXhjZXB0ZXVyIHNpbnQgb2NjYWVjYXQgY3VwaWRhdGF0IG5vbiBwcm9pZGVudCwgc3VudCBpbiBjdWxwYSBxdWkgb2ZmaWNpYSBkZXNlcnVudCBtb2xsaXQgYW5pbSBpZCBlc3QgbGFib3J1bS4=\"\r\n  }\r\n}\r\n\r\n//EXAMPLE (Move)\r\n\r\nPATCH /ver2/DocumentService.svc/documents/60f7b719-d430-4bd6-b489-60079795dc9a HTTP/1.1\r\n \r\n{\r\n  \"documentInfo\": {\r\n    \"folder\": \"/Facility A Docs/Checklists_Old/\"\r\n  }\r\n}\r\n\n```\n"
      operationId: Document_updateDocument
      produces:
        - application/json
      parameters:
        - name: documentIdOrPath
          in: path
          description: The id string (GUID) or path of the Document. Any string that matches the pattern of a GUID is interpreted as the id string, and not the path. A path string must be URL encoded.
          required: true
          type: string
        - name: documentInfo
          in: body
          description: A documentInfo structure. Some properties of this structure are ignored during this operation.
          required: true
          schema:
            $ref: '#/definitions/Document_documentInfo'
      responses:
        '200':
          description: The id string (GUID) for the updated Document.
          schema:
            type: string
      tags:
        - Document
    get:
      description: "Retrieves information about a Document. \n\n**Security:** Requires Edit permissions on the parent Folder, or the Manage Documents right.\n\n**SDK API:**  `envianceSdk.documents.getDocument(documentIdOrPath, onsuccess, onerror)`\n\n**SDK API:**  `envianceSdk.documents.getDocumentContentBinary (documentIdOrPath, onsuccess, onerror)`\n\n```\nGET /ver2/DocumentService.svc/documents/%2FFacility%20A%20Docs%2FChecklists%2FChecklist.doc HTTP/1.1\r\n\r\n//RESPONSE\r\n{\r\n  \"id\": \"60f7b719-d430-4bd6-b489-60079795dc9a\",\r\n  \"name\": \"Checklist.doc\",\r\n  \"description\": \"My checklist.\",\r\n  \"folder\": \"/Site X/Checklists\",\r\n  \"contentUrl\": \"https://go.enviance.com/Documents/DocumentDownload.aspx?docID=60f7b719-d430-4bd6-b489-60079795dc9a\",\r\n  \"version\": 10,\r\n  \"objects\": [\"/Division X/Facility 1\", \"52fbb610-0fa5-4873-9f2b-53cdb0bb00f2\"],\r\n  \"tasks\": [\"51c6d230-9546-4e68-9664-63749d4daf57\", \"2244248e-e583-4345-8460-fecbc7c32059\"],\r\n  \"workflows\": [\"4e66b342-da0e-43a5-8215-7be26d882249\", \"ABC123\"]\r\n}\r\n\n```\n"
      operationId: Document_getDocument
      produces:
        - application/json
        - application/xml
      parameters:
        - name: documentIdOrPath
          in: path
          description: The id string (GUID) or path of the Document. Any string that matches the pattern of a GUID is interpreted as the id string, and not the path. A path string must be URL encoded.
          required: true
          type: string
        - name: content
          in: query
          type: string
          description: It should be just specified like `?content` if requires to Download the content of a Document.
          required: false
      responses:
        '200':
          description: An instance of the documentInfo structure, representing the latest version of the Document.
      tags:
        - Document
    delete:
      description: "Deletes an existing Document, including all of its versions and their content. *Deletions are permanent*.\n\n**Security:** Requires Edit permissions on the parent Folder, or the Manage Documents right.\n\n**SDK API:**  `envianceSdk.documents.deleteDocument(documentIdOrPath, onsuccess, onerror)`\n\n```\nDELETE /ver2/DocumentService.svc/documents/%2FFacility%20A%20Docs%2FChecklists%2FChecklist.doc HTTP/1.1\r\n\n```\n"
      operationId: Document_deleteDocument
      parameters:
        - name: documentIdOrPath
          in: path
          description: The id string (GUID) or path of the Document. Any string that matches the pattern of a GUID is interpreted as the id string, and not the path. A path string must be URL encoded.
          required: true
          type: string
      responses:
        '204':
          description: Document deleted.
      tags:
        - Document
  /ver2/DocumentService.svc/folders:
    post:
      description: "Creates a new Document Folder, potentially with Documents and sub-Folders copied from another existing Folder. When creating a Folder, the Folder will be created in the specified parent Folder. If a value is not specified, the Folder will be created in the root Folder of Document Manager. The new Folder will inherit the security permissions of its parent Folder.\n\n**Security:** Requires Edit permissions on the parent Folder, or the Manage Documents right.\n\n**SDK API (create):**  `envianceSdk.documents.createDocumentFolder(documentFolderInfo, onsuccess, onerror)`\n\n**SDK API (copy):**  `envianceSdk.documents.copyDocumentFolder(documentFolderInfo, copyFrom, onsuccess, onerror)`\n\n```\nPOST /ver2/DocumentService.svc/folders/ HTTP/1.1\r\n \r\n{\r\n  \"documentFolderInfo\": {\r\n    \"name\": \"Checklists\",\r\n    \"description\": \"All site checklists.\",\r\n    \"parentFolder\": \"/Site X/\"\r\n  },\r\n  \"copyFrom\": \"/Site Y/Checklists/\"\r\n}\r\n\n```\n"
      operationId: Document_createCopyDocumentFolder
      produces:
        - application/json
      parameters:
        - name: documentFolderInfo
          in: body
          description: A documentFolderInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Document_documentFolderInfo'
      responses:
        '200':
          description: The id string (GUID) for the new Folder.
          schema:
            type: string
      tags:
        - Document
  /ver2/DocumentService.svc/folders/{documentFolderIdOrPath}:
    patch:
      description: "Updates the properties of a Document Folder, potentially moving it to a new Folder. Updating the parent Folder of a Folder effectively moves that Folder to the new parent folder. When updating a Folder, if the value specified for parentFolder is different from the current parent Folder of the Folder being updated, the Folder will be moved to the specified location.\n\n**Security:** Requires Edit permissions on the parent Folder, or the Manage Documents right.\n\n**SDK API:**  `envianceSdk.documents.updateDocumentFolder(documentFolderIdOrPath, documentFolderInfo, onsuccess, onerror)`\n\n```\nPATCH /ver2/DocumentService.svc/folders/f261b753-8d7a-4a73-9aa1-8e1adadbb878 HTTP/1.1\r\n \r\n{\r\n  \"name\": \"Checklists2\",\r\n  \"parentFolder\": \"/Site Z/\"\r\n}\r\n\n```\n"
      operationId: Document_update
      produces:
        - application/json
      parameters:
        - name: documentFolderIdOrPath
          in: path
          description: The id string (GUID) or path of the Folder. Any string that matches the pattern of a GUID is interpreted as the id string, and not the path. A path string must be URL encoded.
          required: true
          type: string
        - name: documentFolderInfo
          in: body
          description: A documentFolderInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Document_documentFolderInfo'
      responses:
        '200':
          description: Document Folder updated.
          schema:
            type: string
      tags:
        - Document
    get:
      description: "Retrieves information about a Document Folder.\n\n**Security:** Requires Edit permissions on the parent Folder, or the Manage Documents right.\n\n**SDK API:**  `envianceSdk.documents.getDocumentFolder(documentFolderIdOrPath, onsuccess, onerror)`\n\n```\nGET /ver2/DocumentService.svc/folders/%2FSite%20X%2FChecklists HTTP/1.1\r\n\r\n//RESPONSE\r\n{\r\n  \"name\": \"Checklists\",\r\n  \"description\": \"All site checklists.\",\r\n  \"parentFolder\": \"/Site X/\"\r\n}\r\n\n```\n"
      operationId: Document_get
      produces:
        - application/json
        - application/xml
      parameters:
        - name: documentFolderIdOrPath
          in: path
          description: The id string (GUID) or path of the Folder. Any string that matches the pattern of a GUID is interpreted as the id string, and not the path. A path string must be URL encoded.
          required: true
          type: string
      responses:
        '200':
          description: An instance of the documentFolderInfo structure.
          schema:
            $ref: '#/definitions/Document_documentFolderInfo'
      tags:
        - Document
    delete:
      description: "Deletes an existing Document Folder, including all of its sub-Folders, Documents, their versions and their content. *Deletions are permanent*.\n\n**Security:** Requires Edit permissions on the parent Folder, or the Manage Documents right.\n\n**SDK API:**  `envianceSdk.documents.deleteDocumentFolder(documentFolderIdOrPath, onsuccess, onerror)`\n\n```\nDELETE /ver2/DocumentService.svc/folders/f261b753-8d7a-4a73-9aa1-8e1adadbb878 HTTP/1.1\r\n\n```\n"
      operationId: Document_delete
      parameters:
        - name: documentFolderIdOrPath
          in: path
          description: The id string (GUID) or path of the Folder. Any string that matches the pattern of a GUID is interpreted as the id string, and not the path. A path string must be URL encoded.
          required: true
          type: string
      responses:
        '204':
          description: Document deleted.
      tags:
        - Document
  /ver21/DocumentService.svc/documents:
    post:
      description: |-
        Creates a new Document, alternately by copying an existing Document. When creating a Document, the Document will be created in the specified parent folder. If a value is not specified, the Document will be created in the root Folder of Document Manager. The new Document will inherit the security permissions of its parent Folder.

        **Security:** Requires Edit permissions on the parent Folder, or the Manage Documents right.

        **SDK API (create):**  `envianceSdk.documents.createDocumentBinary21 (fileInput, documentInfo, onsuccess, onerror)`

        **SDK API (create):**  `envianceSdk.documents.createDocument21(documentInfo, onsuccess, onerror)`
         
        **SDK API (copy):**  `envianceSdk.documents.copyDocument21 (documentInfo, copyFrom, onsuccess, onerror)`
        null
      operationId: Document21_createCopyDocument21
      produces:
        - application/json
      parameters:
        - name: documentCreate
          in: body
          description: Create Document body info
          required: true
          schema:
            $ref: '#/definitions/Document21_documentCreate'
      responses:
        '200':
          description: The id string (GUID) for the new Document.
          schema:
            type: string
      tags:
        - Document21
  /ver21/DocumentService.svc/documents/{documentIdOrPath}:
    post:
      description: |-
        Updates the binary content of a document.

        **Security:** Requires Edit permissions on the parent Folder, or the Manage Documents right.

        **SDK API:**  `envianceSdk.documents.updateDocumentBinary21 (fileInput, documentIdOrPath, documentInfo, updateExistingVersion, onsuccess, onerror)`

        **SDK API:**  `envianceSdk.documents.updateDocument21(documentIdOrPath, documentInfo, onsuccess, onerror)`
        null
      operationId: Document21_updateDocumentBinary21
      produces:
        - application/json
      parameters:
        - name: documentIdOrPath
          in: path
          description: The id string (GUID) or path of the Document. Any string that matches the pattern of a GUID is interpreted as the id string, and not the path. A path string must be URL encoded.
          required: true
          type: string
        - name: documentInfo
          in: body
          description: A DocumentInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Document21_documentInfo'
      responses:
        '200':
          description: Document updated.
          schema:
            type: string
      tags:
        - Document21
    patch:
      description: |-
        Updates the properties and content of a Document. Updating the parent Folder of a Document effectively moves that Document to the new parent folder. When  updating a Document, if the value specified for parent Folder is different from the current parent Folder of the Document, the Document will be moved to the specified location.

        **Security:** Requires Edit permissions on the parent Folder, or the Manage Documents right.

        **SDK API:**  `envianceSdk.documents.updateDocument21(documentIdOrPath, documentInfo, onsuccess, onerror)`
        null
      operationId: Document21_updateDocument21
      produces:
        - application/json
      parameters:
        - name: documentIdOrPath
          in: path
          description: The id string (GUID) or path of the Document. Any string that matches the pattern of a GUID is interpreted as the id string, and not the path. A path string must be URL encoded.
          required: true
          type: string
        - name: documentInfo
          in: body
          description: A documentInfo structure. Some properties of this structure are ignored during this operation.
          required: true
          schema:
            $ref: '#/definitions/Document21_documentInfo'
      responses:
        '200':
          description: The id string (GUID) for the updated Document.
          schema:
            type: string
      tags:
        - Document21
    get:
      description: |-
        Retrieves information about a Document. 

        **Security:** Requires Edit permissions on the parent Folder, or the Manage Documents right.

        **SDK API:**  `envianceSdk.documents.getDocument(documentIdOrPath, onsuccess, onerror)`

        **SDK API:**  `envianceSdk.documents.getDocumentContentBinary (documentIdOrPath, onsuccess, onerror)`
        null
      operationId: Document21_getDocument
      produces:
        - application/json
        - application/xml
      parameters:
        - name: documentIdOrPath
          in: path
          description: The id string (GUID) or path of the Document. Any string that matches the pattern of a GUID is interpreted as the id string, and not the path. A path string must be URL encoded.
          required: true
          type: string
        - name: content
          in: query
          type: string
          description: It should be just specified like `?content` if requires to Download the content of a Document.
          required: false
      responses:
        '200':
          description: An instance of the documentInfo structure, representing the latest version of the Document.
      tags:
        - Document21
  /ver2/PackageService.svc/packages:
    post:
      description: "Creates a new Enviance App (package), optionally with content copied from another existing Enviance App.\n\n**Security:** Requires Manage Enviance Apps system right.\n\n**SDK API:**  `envianceSdk.packages.createPackage(packageInfo, onsuccess, onerror)`\n\n **SDK API:**  `envianceSdk.packages.copyPackage(packageInfo, copyFrom, onsuccess, onerror)`\n\n```\n//EXAMPLE (Create)\r\n\r\nPOST /ver2/PackageService.svc/packages/ HTTP/1.1\r\n \r\n{\r\n  \"packageInfo\": {\r\n    \"name\": \"Incident Tracker\",\r\n    \"description\": \"Incident tracking and management.\",\r\n    \"content\": \"UEsDBBQABgAIAAAAIQCMGvGG3QEAAFMIAAATAAgCW0NvbnRlbnRfVHlwZXNdLnhtbCCiBAIooAACAAAAAAAAAAAAAAAAAAAAAAAA�\"\r\n    \"displayPage\": \"/index.html\",\r\n    \"iconSrc\": \"/imgs/icon.png\",\r\n    \"isLocked\": \"false\"\r\n  }\r\n}\r\n\r\n//EXAMPLE (Copy)\r\n\r\nPOST /ver2/PackageService.svc/packages/ HTTP/1.1\r\n \r\n{\r\n  \"packageInfo\": {\r\n    \"name\": \"Incident Tracker\",\r\n    \"description\": \"Incident tracking and management.\",\r\n    \"displayPage\": \"/index.html\",\r\n    \"iconSrc\": \"/imgs/icon.png\",\r\n    \"isLocked\": \"false\"\r\n  },\r\n  \"copyFrom\": \"Incident Management\"\r\n}\r\n\n```\n"
      operationId: Setup_EnvianceApp_createCopyPackage
      produces:
        - application/json
      parameters:
        - name: packageInfo
          in: body
          description: A packageCreateInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Setup_EnvianceApp_packageCreateInfo'
      responses:
        '200':
          description: The id string (GUID) for the new Enviance App.
          schema:
            type: string
      tags:
        - Setup_EnvianceApp
  /ver2/PackageService.svc/packages/{packageIdOrName}:
    patch:
      description: "Updates an existing Enviance App (package).\n\n**Security:** Requires Manage Enviance Apps system right.\n\n**SDK API:**  `envianceSdk.packages.updatePackage(packageIdOrName, packageInfo, onsuccess, onerror)`\n\n```\nPATCH /ver2/PackageService.svc/packages/bdba60aa-cb36-43bf-ba2e-7532c49968d0 HTTP/1.1\r\n \r\n{\r\n  \"packageInfo\": {\r\n    \"name\": \"Incident Tracker\",\r\n    \"description\": \"Incident tracking and management.\",\r\n    \"content\": \"UEsDBBQABgAIAAAAIQCMGvGG3QEAAFMIAAATAAgCW0NvbnRlbnRfVHlwZXNdLnhtbCCiBAIooAACAAAAAAAAAAAAAAAAAAAAAAAA�\"\r\n    \"displayPage\": \"/index.html\",\r\n    \"iconSrc\": \"/imgs/icon.png\",\r\n    \"isLocked\": \"true\"\r\n  }\r\n}\r\n{\r\n  \"id\": \"4657bd77-fced-42be-a491-d63a59c42a4c\",\r\n  \"name\": \"Incident Tracker\",\r\n  \"description\": \"Incident tracking and management.\",\r\n  \"displayPage\": \"/index.html\",\r\n  \"iconSrc\": \"/imgs/icon.png\",\r\n  \"isLocked\": \"false\",\r\n  \"created\": \"2011-02-02T08:44\",\r\n  \"createdBy\": \"JSmith\",\r\n  \"lastModified\": \"2012-12-03T21:35\"\r\n}\r\n\n```\n"
      operationId: Setup_EnvianceApp_updatePackage
      produces:
        - application/json
      parameters:
        - name: packageIdOrName
          in: path
          description: The id string (GUID) or name of the Enviance App. Any string that matches the pattern of a GUID is interpreted as the id and not the name. A name string must be URL encoded.
          required: true
          type: string
        - name: packageInfo
          in: body
          description: A packageInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Setup_EnvianceApp_packageInfo'
      responses:
        '200':
          description: The id string (GUID) for the updated Enviance App.
          schema:
            type: string
      tags:
        - Setup_EnvianceApp
    get:
      description: "Retrieves information about an Enviance App (package) or Download the contents of an Enviance App as a zip file.\n\n**Security:** Requires Manage Enviance Apps system right.\n\n**SDK API:**  `envianceSdk.packages.getPackage(packageIdOrName, onsuccess, onerror)`\n\n**SDK API:**  `envianceSdk.utilities.uri.toPackageDownload(packageIdOrName)` - Returns an Url to download a package.\n\n```\nGET /ver2/PackageService.svc/packages/Incident%20Tracker HTTP/1.1\r\n\r\n//RESPONSE\r\n{\r\n  \"id\": \"4657bd77-fced-42be-a491-d63a59c42a4c\",\r\n  \"name\": \"Incident Tracker\",\r\n  \"description\": \"Incident tracking and management.\",\r\n  \"displayPage\": \"/index.html\",\r\n  \"iconSrc\": \"/imgs/icon.png\",\r\n  \"isLocked\": \"false\",\r\n  \"created\": \"2011-02-02T08:44\",\r\n  \"createdBy\": \"JSmith\",\r\n  \"lastModified\": \"2012-12-03T21:35\"\r\n}\r\n\n```\n"
      operationId: Setup_EnvianceApp_getPackage
      produces:
        - application/json
        - application/octet-stream
      parameters:
        - name: packageIdOrName
          in: path
          description: The id string (GUID) or name of the Enviance App. Any string that matches the pattern of a GUID is interpreted as the id and not the name. A name string must be URL encoded.
          required: true
          type: string
        - name: content
          in: query
          type: string
          description: It should be just specified like `?content` if requires to Download the contents of an Enviance App as a zip file.
          required: false
      responses:
        '200':
          description: An instance of the packageInfo structure, representing the Enviance App properties and metadata or The Enviance App content in a zip file.
          schema:
            $ref: '#/definitions/Setup_EnvianceApp_packageInfoResponse'
      tags:
        - Setup_EnvianceApp
    delete:
      description: "Deletes an existing Enviance App (package), including all of its Items, Permissions and Settings, etc. *Deletions are permanent*.\n\n**Security:** Requires Manage Enviance Apps system right.\n\n**SDK API:**  `envianceSdk.packages.deletePackage(packageIdOrName, onsuccess, onerror)`\n\n```\nDELETE /ver2/PackageService.svc/Incident%20Manager HTTP/1.1\r\n\n```\n"
      operationId: Setup_EnvianceApp_delete
      parameters:
        - name: packageIdOrName
          in: path
          description: The id string (GUID) or name of the Enviance App. Any string that matches the pattern of a GUID is interpreted as the id and not the name. A name string must be URL encoded.
          required: true
          type: string
      responses:
        '204':
          description: Package deleted.
      tags:
        - Setup_EnvianceApp
  /ver2/PackageService.svc/packages/{packageIdOrName}/items/:
    post:
      description: "Creates a new Enviance App (Package) Item, optionally with content copied from another existing Enviance App Item within the same App.\n\n**Security:** Requires Manage Enviance Apps system right.\n\n**SDK API:**  `envianceSdk.packages.createPackageItem(packageIdOrName,\npackageItemInfo, onsuccess, onerror)`\n\n**SDK API:**  `envianceSdk.packages.copyPackageItem(packageIdOrName, packageItemInfo, copyFrom, onsuccess, onerror)`\n\n```\n//EXAMPLE (Create)\r\n\r\nPOST /ver2/PackageService.svc/packages/ HTTP/1.1\r\n \r\n{\r\n  \"packageInfo\": {\r\n    \"name\": \"Incident Tracker\",\r\n    \"description\": \"Incident tracking and management.\",\r\n    \"content\": \"UEsDBBQABgAIAAAAIQCMGvGG3QEAAFMIAAATAAgCW0NvbnRlbnRfVHlwZXNdLnhtbCCiBAIooAACAAAAAAAAAAAAAAAAAAAAAAAA�\"\r\n    \"displayPage\": \"/index.html\",\r\n    \"iconSrc\": \"/imgs/icon.png\",\r\n    \"isLocked\": \"false\"\r\n  }\r\n}\r\n\r\n//EXAMPLE (Copy)\r\n\r\nPOST /ver2/PackageService.svc/packages/ HTTP/1.1\r\n \r\n{\r\n  \"packageInfo\": {\r\n    \"name\": \"Incident Tracker\",\r\n    \"description\": \"Incident tracking and management.\",\r\n    \"displayPage\": \"/index.html\",\r\n    \"iconSrc\": \"/imgs/icon.png\",\r\n    \"isLocked\": \"false\"\r\n  },\r\n  \"copyFrom\": \"Incident Management\"\r\n}\r\n\n```\n"
      operationId: Setup_EnvianceApp_createCopyPackageItem
      produces:
        - application/json
      parameters:
        - name: packageIdOrName
          in: path
          description: The id string (GUID) or name of the Enviance App. Any string that matches the pattern of a GUID is interpreted as the id and not the name. A name string must be URL encoded.
          required: true
          type: string
        - name: packageItemInfo
          in: body
          description: A packageItemCreateInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Setup_EnvianceApp_packageItemCreateInfo'
      responses:
        '200':
          description: The id string (GUID) for the new Enviance App Item.
          schema:
            type: string
      tags:
        - Setup_EnvianceApp
  /ver2/PackageService.svc/packages/{packageIdOrName}/items/{packageItemIdOrPath}:
    patch:
      description: "Updates and/or moves an existing Enviance App Item. A \"move\" of an Item is simply a change in its path.\n\n**Security:** Requires Manage Enviance Apps system right.\n\n**SDK API:**  `envianceSdk.packages.updatePackageItem(packageIdOrName, packageItemIdOrPath, packageItemInfo, onsuccess, onerror)`\n\n```\nPATCH /ver2/PackageService.svc/packages/bdba60aa-cb36-43bf-ba2e-7532c49968d0 HTTP/1.1\r\n \r\n{\r\n  \"packageInfo\": {\r\n    \"name\": \"Incident Tracker\",\r\n    \"description\": \"Incident tracking and management.\",\r\n    \"content\": \"UEsDBBQABgAIAAAAIQCMGvGG3QEAAFMIAAATAAgCW0NvbnRlbnRfVHlwZXNdLnhtbCCiBAIooAACAAAAAAAAAAAAAAAAAAAAAAAA�\"\r\n    \"displayPage\": \"/index.html\",\r\n    \"iconSrc\": \"/imgs/icon.png\",\r\n    \"isLocked\": \"true\"\r\n  }\r\n}\r\n{\r\n  \"id\": \"4657bd77-fced-42be-a491-d63a59c42a4c\",\r\n  \"name\": \"Incident Tracker\",\r\n  \"description\": \"Incident tracking and management.\",\r\n  \"displayPage\": \"/index.html\",\r\n  \"iconSrc\": \"/imgs/icon.png\",\r\n  \"isLocked\": \"false\",\r\n  \"created\": \"2011-02-02T08:44\",\r\n  \"createdBy\": \"JSmith\",\r\n  \"lastModified\": \"2012-12-03T21:35\"\r\n}\r\n\n```\n"
      operationId: Setup_EnvianceApp_updatePackageItem
      produces:
        - application/json
      parameters:
        - name: packageIdOrName
          in: path
          description: The id string (GUID) or name of the Enviance App. Any string that matches the pattern of a GUID is interpreted as the id and not the name. A name string must be URL encoded.
          required: true
          type: string
        - name: packageItemIdOrPath
          in: path
          description: The id string (GUID) or name of the Enviance App Item. Any string that matches the pattern of a GUID is interpreted as the id and not the name. A name string must be URL encoded.
          required: true
          type: string
        - name: packageItemInfo
          in: body
          description: A packageItemInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Setup_EnvianceApp_packageItemInfo'
      responses:
        '200':
          description: The id string (GUID) for the updated Enviance App Item.
          schema:
            type: string
      tags:
        - Setup_EnvianceApp
    get:
      description: "Retrieves information about an Enviance App Item, including its content.\n\n**Security:** Requires Manage Enviance Apps system right.\n\n**SDK API:**  `envianceSdk.packages.getPackageItem(packageIdOrName, packageItemIdOrPath, onsuccess, onerror)`\n\n```\nGET /ver2/PackageService.svc/packages/Incident%20Tracker HTTP/1.1\r\n\r\n//RESPONSE\r\n{\r\n  \"id\": \"4657bd77-fced-42be-a491-d63a59c42a4c\",\r\n  \"name\": \"Incident Tracker\",\r\n  \"description\": \"Incident tracking and management.\",\r\n  \"displayPage\": \"/index.html\",\r\n  \"iconSrc\": \"/imgs/icon.png\",\r\n  \"isLocked\": \"false\",\r\n  \"created\": \"2011-02-02T08:44\",\r\n  \"createdBy\": \"JSmith\",\r\n  \"lastModified\": \"2012-12-03T21:35\"\r\n}\r\n\n```\n"
      operationId: Setup_EnvianceApp_getPackageItem
      produces:
        - application/json
        - application/xml
      parameters:
        - name: packageIdOrName
          in: path
          description: The id string (GUID) or name of the Enviance App. Any string that matches the pattern of a GUID is interpreted as the id and not the name. A name string must be URL encoded.
          required: true
          type: string
        - name: packageItemIdOrPath
          in: path
          description: The id string (GUID) or name of the Enviance App Item. Any string that matches the pattern of a GUID is interpreted as the id and not the name. A name string must be URL encoded.
          required: true
          type: string
      responses:
        '200':
          description: An instance of the PackageItemInfo structure, representing the Enviance App Item properties and content.
          schema:
            $ref: '#/definitions/Setup_EnvianceApp_packageInfo'
      tags:
        - Setup_EnvianceApp
    delete:
      description: "Deletes an existing Enviance App (Package) Item, including all of its Content, Permissions and settings, etc.\n\n**Security:** Requires Manage Enviance Apps system right.\n\n**SDK API:**  `envianceSdk.packages.deletePackageItem(packageIdOrName, packageItemIdOrPath, onsuccess, onerror)`\n\n```\nDELETE /ver2/PackageService.svc/Incident%20Manager HTTP/1.1\r\n\n```\n"
      operationId: Setup_EnvianceApp_deletePackageItem
      parameters:
        - name: packageIdOrName
          in: path
          description: The id string (GUID) or name of the Enviance App. Any string that matches the pattern of a GUID is interpreted as the id and not the name. A name string must be URL encoded.
          required: true
          type: string
        - name: packageItemIdOrPath
          in: path
          description: The id string (GUID) or name of the Enviance App Item. Any string that matches the pattern of a GUID is interpreted as the id and not the name. A name string must be URL encoded.
          required: true
          type: string
      responses:
        '204':
          description: Package deleted.
      tags:
        - Setup_EnvianceApp
  /ver2/PackageService.svc/packages/{packageIdOrName}/data/{key}:
    get:
      description: "Retrieves an existing Enviance App (Package) data key-value pair, using the specified unique key. If user does not have permissions to retrieve data it returns empty string. No Errors thrown.\n\n**Security:** Requires Manage Enviance Apps system right.\n\n**SDK API:**  `envianceSdk.packages.getPackageAppData(packageIdOrName, key, onsuccess, onerror)`\n\n```\nGET /ver2/PackageService.svc/packages/Incident%20Tracker HTTP/1.1\r\n\r\n//RESPONSE\r\n{\r\n  \"id\": \"4657bd77-fced-42be-a491-d63a59c42a4c\",\r\n  \"name\": \"Incident Tracker\",\r\n  \"description\": \"Incident tracking and management.\",\r\n  \"displayPage\": \"/index.html\",\r\n  \"iconSrc\": \"/imgs/icon.png\",\r\n  \"isLocked\": \"false\",\r\n  \"created\": \"2011-02-02T08:44\",\r\n  \"createdBy\": \"JSmith\",\r\n  \"lastModified\": \"2012-12-03T21:35\"\r\n}\r\n\n```\n"
      operationId: Setup_EnvianceApp_getPackageAppData
      produces:
        - application/json
        - text/plain; charset=utf-8
      parameters:
        - name: packageIdOrName
          in: path
          description: The id string (GUID) or name of the Enviance App. Any string that matches the pattern of a GUID is interpreted as the id and not the name. A name string must be URL encoded.
          required: true
          type: string
        - name: key
          in: path
          description: The unique key for the data value, URL encoded.
          required: true
          type: string
        - name: dtype
          in: query
          description: The type of data. `json` for JSON object, otherwise - string.
          required: false
          type: string
          enum:
            - json
      responses:
        '200':
          description: The string data (typically JSON) stored with the key.
      tags:
        - Setup_EnvianceApp
    put:
      description: |-
        Saves an Enviance App (package) data key-value pair, associated with a specified unique key. Keys must be unique for a single Enviance App, but can be non-unique across Enviance Apps. If the key specified already exists, any data currently saved with that key will be overwritten. If user does not have permissions to retrieve data then it throws Error.

        **Security:** Requires Manage Enviance Apps system right.

        **SDK API:**  `envianceSdk.packages.savePackageAppData(packageIdOrName, key, value, onsuccess, onerror)`
        null
      operationId: Setup_EnvianceApp_savePackageAppData
      parameters:
        - name: packageIdOrName
          in: path
          description: The id string (GUID) or name of the Enviance App. Any string that matches the pattern of a GUID is interpreted as the id and not the name. A name string must be URL encoded.
          required: true
          type: string
        - name: key
          in: path
          description: The unique key for the data value, URL encoded.
          required: true
          type: string
        - name: value
          in: body
          description: The body is a simple JSON object that can hold any string or JSON object literal.
          required: true
          schema:
            type: string
        - name: dtype
          in: query
          description: The type of data. `json` for JSON object, otherwise - string.
          required: false
          type: string
          enum:
            - json
      responses:
        '204':
          description: None
      tags:
        - Setup_EnvianceApp
    delete:
      description: "Deletes an Enviance App (Package) data key-value pair, using the specified unique key. *Deletions are permanent*. If user does not have permissions to retrieve data it returns empty string. No Errors thrown.\n\n**Security:** Requires Manage Enviance Apps system right.\n\n**SDK API:**  `envianceSdk.packages.deletePackageAppData(packageIdOrName, key, onsuccess, onerror)`\n\n```\nDELETE /ver2/PackageService.svc/Incident%20Manager HTTP/1.1\r\n\n```\n"
      operationId: Setup_EnvianceApp_deleteAppData
      parameters:
        - name: packageIdOrName
          in: path
          description: The id string (GUID) or name of the Enviance App. Any string that matches the pattern of a GUID is interpreted as the id and not the name. A name string must be URL encoded.
          required: true
          type: string
        - name: key
          in: path
          description: The unique key for the data value. A key string should be URL encoded.
          required: true
          type: string
      responses:
        '200':
          description: None
      tags:
        - Setup_EnvianceApp
  /ver2/EqlService.svc/dataview:
    post:
      description: |-
        Save EQL query as a data view.

        **SDK API:** `envianceSdk.eql.createDataView(info, onsuccess, onerror)`
        null
      operationId: Integration_EQL_createDataView
      parameters:
        - name: info
          in: body
          description: data view saving info
          required: true
          schema:
            $ref: '#/definitions/Integration_EQL_eqlDataViewInfo'
      responses:
        '200':
          description: The id string (GUID) for the created DataView.
          schema:
            type: string
      tags:
        - Integration_EQL
  /ver2/EqlService.svc/dataview/{idOrName}:
    patch:
      description: |-
        Update a data view info

        **SDK API:** `envianceSdk.eql.updateDataView(idOrName, info, onsuccess, onerror)`
        null
      operationId: Integration_EQL_updateDataView
      parameters:
        - name: idOrName
          in: path
          description: The id string (GUID) or name of the DataView. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name. A name string must be URL encoded.
          required: true
          type: string
        - name: info
          in: body
          description: data view update info
          required: true
          schema:
            $ref: '#/definitions/Integration_EQL_eqlDataViewInfo'
      responses:
        '200':
          description: No data in result.
      tags:
        - Integration_EQL
    delete:
      description: |-
        Delete existing data view.

        **SDK API:** `envianceSdk.eql.deleteDataView(idOrName, onsuccess, onerror)`
        null
      operationId: Integration_EQL_deleteDataView
      parameters:
        - name: idOrName
          in: path
          description: The id string (GUID) or name of the DataView. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name. A name string must be URL encoded.
          required: true
          type: string
      responses:
        '200':
          description: No data in result.
      tags:
        - Integration_EQL
    get:
      description: |-
        Get information about existing data view.

        **SDK API:** `envianceSdk.eql.getDataView(idOrName, onsuccess, onerror)`
        null
      operationId: Integration_EQL_getDataView
      parameters:
        - name: idOrName
          in: path
          description: The id string (GUID) or name of the DataView. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name. A name string must be URL encoded.
          required: true
          type: string
      responses:
        '200':
          description: data view info.
          schema:
            $ref: '#/definitions/Integration_EQL_eqlDataViewFullInfo'
      tags:
        - Integration_EQL
  /ver2/EqlService.svc/query:
    post:
      description: "Executes an EQL query batch, returning the results in one or more tables of row/column format.\n\n**SDK API:**  `envianceSdk.eql.execute(eql, page, pageSize, format, onsuccess, onerror) \n{\r\n \"eql\": \"select top 1 * from WorkflowType\", \r\n \"page\": 1, \r\n \"pagesize\": 100, \r\n \"format\": \"Json\" \r\n }\r\n\n```\n"
      operationId: Integration_EQL_executeEqlAsync
      produces:
        - application/json
      parameters:
        - name: info
          in: body
          description: eql execution parameter info
          required: true
          schema:
            $ref: '#/definitions/Integration_EQL_eqlExecutionInfo'
      responses:
        '200':
          description: The id string (GUID) for the newly created WorkerCommandLog.
          schema:
            type: string
          examples:
            application/text: 5f8e1695-8f8a-465c-bca1-2e67fc467d79
      tags:
        - Integration_EQL
  /ver2/EventService.svc/eventlogs/{eventLogIdOrTag}/events:
    post:
      description: |-
        Creates a new Event in the specified Event Log. Events can only be created for manual Event Logs. Attempting to create an Event on an  automatic Event Log will result in an error.

        **Security:** All users.

        **SDK API:**  `envianceSdk.events.createEvent(eventLogIdOrTag, eventInfo, onsuccess, onerror)`
        null
      operationId: Event_create
      produces:
        - application/json
      parameters:
        - name: eventLogIdOrTag
          in: path
          description: The id string (GUID) or unique tag of the Event Log. Any string that matches the pattern of a GUID is interpreted as the parent id string, and not the parent tag. A tag string must be URL encoded.
          required: true
          type: string
        - name: eventInfo
          in: body
          description: An eventInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Event_eventInfo'
      responses:
        '200':
          description: The id string of the new Event.
          schema:
            type: string
      tags:
        - Event
  /ver2/EventService.svc/eventlogs/{eventLogIdOrTag}/events/{eventIdOrTag}:
    patch:
      description: |-
        Updates an existing Event.

        **Security:** All users.

        **SDK API:**  `envianceSdk.events.updateEvent(eventLogIdOrTag, eventIdOrTag, eventInfo, onsuccess, onerror)`
        null
      operationId: Event_update
      produces:
        - application/json
      parameters:
        - name: eventLogIdOrTag
          in: path
          description: The id string (GUID) or unique tag of the Event Log. Any string that matches the pattern of a GUID is interpreted as the parent id string, and not the parent tag. A tag string must be URL encoded.
          required: true
          type: string
        - name: eventIdOrTag
          in: path
          description: The id string (GUID) or unique tag of the Event. Any string that matches the pattern of a GUID is interpreted as the id string, and not the tag. A tag string must be URL encoded.
          required: true
          type: string
        - name: eventInfo
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Event_eventInfo'
      responses:
        '200':
          description: The id string (GUID) for the updated Event.
          schema:
            type: string
      tags:
        - Event
    get:
      description: |-
        Gets information about an Event.

        **Security:** All users.

        **SDK API:**  `envianceSdk.events.getEvent(eventLogIdOrTag, eventIdOrTag, onsuccess, onerror)`
        null
      operationId: Event_getEvent
      produces:
        - application/json
        - application/xml
      parameters:
        - name: eventLogIdOrTag
          in: path
          description: The id string (GUID) or unique tag of the Event Log. Any string that matches the pattern of a GUID is interpreted as the parent id string, and not the parent tag. A tag string must be URL encoded.
          required: true
          type: string
        - name: eventIdOrTag
          in: path
          description: The id string (GUID) or unique tag of the Event. Any string that matches the pattern of a GUID is interpreted as the id string, and not the tag. A tag string must be URL encoded.
          required: true
          type: string
      responses:
        '200':
          description: An instance of EventInfo structure.
          schema:
            $ref: '#/definitions/Event_eventInfo'
      tags:
        - Event
    delete:
      description: |-
        Deletes an existing Event. Events can only be deleted from manual Event Logs. Attempting to delete an Event from an automatic Event Log will result in an error. *Deletions are permanent*.

        **Security:** All users.

        **SDK API:**  `envianceSdk.events.deleteEvent(eventLogIdOrTag, eventIdOrTag, onsuccess, onerror)`
        null
      operationId: Event_deleteEvent
      parameters:
        - name: eventLogIdOrTag
          in: path
          description: The id string (GUID) or unique tag of the Event Log. Any string that matches the pattern of a GUID is interpreted as the parent id string, and not the parent tag. A tag string must be URL encoded.
          required: true
          type: string
        - name: eventIdOrTag
          in: path
          description: The id string (GUID) or unique tag of the Event. Any string that matches the pattern of a GUID is interpreted as the id string, and not the tag. A tag string must be URL encoded.
          required: true
          type: string
      responses:
        '204':
          description: Event deleted.
      tags:
        - Event
  /Ver2/FormTemplateService.svc/formtemplates:
    post:
      tags:
        - Setup_FormTemplate
      summary: Create Form Template
      description: "Create form template in enviance system\n\n** SDK API:**  'envianceSdk.formtemplates.createFormTemplate (formTemplateInfo, onsuccess, onerror)'\n\n** SDK API:**  'envianceSdk.formtemplates.createFormTemplateAsync (formTemplateInfo, onsuccess, onerror)'\n\n```\nPOST /formtemplates HTTP/1.1\r\nContent-Type: application/json; charset=UTF-8\r\n\r\n{\r\n  \"formTemplateInfo\" : {\r\n    \"name\": \"Form Template REST API Demo - t222\",\r\n    \"description\": \"Desc\",\r\n    \"version\": 10,\r\n    \r\n    \"udfs\": [\r\n        {\r\n            \"idOrName\": \"de137d17-dec2-45da-aef5-f48f2a6a522a\",\r\n            \"order\": 1,\r\n            \"scripts\": [],\r\n            \"validation\": [\r\n                {\r\n                    \"length\" : 11,\r\n                    \"regEx\": \"rer\",\r\n                    \"requiredValidationScope\": \"SaveStepData\",\r\n                    \"lengthValidationScope\": \"Transition\",\r\n                    \"regExValidationScope\": \"SaveStepData\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"idOrName\": \"MyField1\",\r\n            \"order\": 2,\r\n            \"scripts\": [],\r\n            \"validation\": [\r\n                {\r\n                    \"length\" : 20,\r\n                    \"regEx\": \"rer\",\r\n                    \"requiredValidationScope\": \"SaveStepData\",\r\n                    \"lengthValidationScope\": \"Transition\",\r\n                    \"regExValidationScope\": \"SaveStepData\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n  }\r\n}\r\n\n```\n"
      operationId: Setup_FormTemplate_CreateFormTemplate
      consumes:
        - application/json
      produces:
        - application/text
      parameters:
        - name: formTemplateInfo
          in: body
          description: Form Template object
          required: true
          schema:
            $ref: '#/definitions/Setup_FormTemplate_FormTemplateRequestInfo'
      responses:
        '200':
          description: Successful operation. Returns CommandLog ID
          schema:
            type: string
            format: GUID
          examples:
            application/text: 5f8e1695-8f8a-465c-bca1-2e67fc467d79
        '400':
          description: Invalid input
        '403':
          description: Unauthorized request
  /Ver2/FormTemplateService.svc/formtemplates/copy:
    post:
      tags:
        - Setup_FormTemplate
      summary: Copy form template
      description: "Create form template in enviance system\n\n** SDK API:**  'envianceSdk.formtemplates.copyFormTemplate (sourceTemplateIdOrName, newTemplateName, onsuccess, onerror)'\n\n```\nPOST /formtemplates/copy HTTP/1.1\r\nContent-Type: application/json; charset=UTF-8\r\n\r\n{\r\n  \"sourceTemplateIdOrName\" :\"Form Template REST API Demo - t222\",\r\n  \"newTemplateName\" : \"Form Template REST API Demo - t222 - COPY\"\r\n}\r\n\n```\n"
      operationId: Setup_FormTemplate_copyFormTemplate
      consumes:
        - application/json
      produces:
        - application/text
      parameters:
        - in: body
          name: body
          description: Id or Name of the source form template name
          required: true
          schema:
            $ref: '#/definitions/Setup_FormTemplate_FormTemplateCopyInfo'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
        '403':
          description: Unauthorized request
  /Ver2/FormTemplateService.svc/formtemplates/{formtemplateIdOrName}:
    get:
      tags:
        - Setup_FormTemplate
      summary: Get form template
      description: "Get information about form template from enviance system.\n\n** SDK API:**  envianceSdk.formtemplates.getFormTemplate (formtemplateIdOrName, onsuccess, onerror)\n\n```\nGET /formtemplates/9ca22677-2670-41a9-bafd-3b2825592863 HTTP/1.1\r\n\r\n//RESPONSE\r\n{\r\n    \"id\": \"ecdb1461-3e4d-488b-ae9f-94de6a8fd1c3\",\r\n    \"name\": \"Form Template TEST1\",\r\n    \"description\": \"Desc\",\r\n    \"versionId\": \"784bc71e-a396-456c-b808-01985d0d7f68\",\r\n    \"version\": 1,\r\n    \"versionComment\": \"\",\r\n    \"udfs\": [\r\n        {\r\n            \"id\": \"de137d17-dec2-45da-aef5-f48f2a6a522a\",\r\n            \"name\": \"MyField1\",\r\n            \"type\": \"Text\",\r\n            \"valueEntryMethod\": \"Text\",\r\n            \"order\": 0,\r\n            \"scripts\": [],\r\n            \"validation\": [\r\n                {\r\n                    \"length\": 11,\r\n                    \"regEx\": \"rer\",\r\n                    \"requiredValidationScope\": \"SaveStepData\",\r\n                    \"lengthValidationScope\": \"Transition\",\r\n                    \"rangeValidationScope\": \"None\",\r\n                    \"regExValidationScope\": \"SaveStepData\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\n```\n"
      operationId: Setup_FormTemplate_getFormTemplate
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: formtemplateIdOrName
          in: path
          description: ID or Name of form template to return
          required: true
          type: string
          format: GUID
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Setup_FormTemplate_FormTemplateInfo'
        '400':
          description: Invalid input
        '403':
          description: Unauthorized request
    put:
      tags:
        - Setup_FormTemplate
      summary: Update form template (current version)
      description: "Update form template information within enviance system.\n\n** SDK API:**  'envianceSdk.formtemplates.updateFormTemplate (formtemplateIdOrName, formTemplateInfo, onsuccess, onerror)'\n\n** SDK API:**  'envianceSdk.formtemplates.updateFormTemplateAsync (formtemplateIdOrName, formTemplateInfo, onsuccess, onerror)'\n\n```\nPUT /formtemplates/9ca22677-2670-41a9-bafd-3b2825592863 HTTP/1.1TY\r\nContent-Type: application/json; charset=UTF-8\r\n\r\n{\r\n  \"formTemplateInfo\" :{\r\n    \"name\": \"Form Template REST API Demo Update 1\",\r\n    \"description\": \"Update Desc\",\r\n    \"version\": 20,\r\n    \"versionComment\": \"Version 9 Created from REST API\",\r\n    \"udfs\": [\r\n        {\r\n            \"idOrName\": \"de137d17-dec2-45da-aef5-f48f2a6a522a\",\r\n            \"order\": 0,\r\n            \"scripts\": [],\r\n            \"validation\": [\r\n                {\r\n                    \"length\": 20,\r\n                    \"regEx\": \"rer\",\r\n                    \"requiredValidationScope\": \"SaveStepData\",\r\n                    \"lengthValidationScope\": \"Transition\",\r\n                    \"regExValidationScope\": \"SaveStepData\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"idOrName\": \"7c5f4f2a-10e3-4a14-a283-89ae089d9644\",\r\n            \"order\": 1,\r\n            \"scripts\": [],\r\n            \"validation\": [\r\n                {\r\n                    \"regEx\": \"\",\r\n                    \"min\": 1,\r\n                    \"max\": 10,\r\n                    \"requiredValidationScope\": \"SaveStepData\",\r\n                    \"rangeValidationScope\": \"Transition\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n  }\r\n}\r\n\n```\n"
      operationId: Setup_FormTemplate_updateFormTemplate
      consumes:
        - application/json
      produces:
        - application/text
      parameters:
        - name: formtemplateIdOrName
          in: path
          description: ID or Name of form template to update
          required: true
          type: string
          format: GUID
        - name: formTemplateInfo
          in: body
          description: Form Template object
          required: true
          schema:
            $ref: '#/definitions/Setup_FormTemplate_FormTemplateRequestInfo'
      responses:
        '200':
          description: Successful operation. Returns CommandLog ID
          schema:
            type: string
            format: GUID
          examples:
            application/text: 5f8e1695-8f8a-765c-bca1-2e67fc467d79
        '400':
          description: Invalid input
        '403':
          description: Unauthorized request
    delete:
      tags:
        - Setup_FormTemplate
      summary: Delete form template
      description: "Deletes form template within enviance system. *Deletions are permanent.*\n\n** SDK API:**  'envianceSdk.formtemplates.deleteFormTemplate (formtemplateIdOrName, onsuccess, onerror)'\n\n```\nDELETE /formtemplates/9ca22677-2670-41a9-bafd-3b2825592863 HTTP/1.1\r\n\n```\n"
      operationId: Setup_FormTemplate_deleteWorkflowRole
      consumes:
        - application/json
      produces:
        - application/text
      parameters:
        - name: formtemplateIdOrName
          in: path
          description: ID or Name of form template to delete
          required: true
          type: string
          format: GUID
      responses:
        '204':
          description: Successful operation
        '400':
          description: Invalid input
        '403':
          description: Unauthorized request
  /Ver2/FormTemplateService.svc/formtemplates/{formTemplateIdOrName}/version/{versionIdOrNumber}:
    get:
      tags:
        - Setup_FormTemplate
      summary: Get form template version
      description: "Get information about form template version from enviance system.\n\n** SDK API:**  envianceSdk.formtemplates.getFormTemplateVersion (formTemplateIdOrName, versionIdOrNumber, onsuccess, onerror)\n\n```\nGET /formtemplates/9ca22677-2670-41a9-bafd-3b2825592863 HTTP/1.1\r\n\r\n//RESPONSE\r\n{\r\n    \"id\": \"ecdb1461-3e4d-488b-ae9f-94de6a8fd1c3\",\r\n    \"name\": \"Form Template TEST1\",\r\n    \"description\": \"Desc\",\r\n    \"versionId\": \"784bc71e-a396-456c-b808-01985d0d7f68\",\r\n    \"version\": 1,\r\n    \"versionComment\": \"\",\r\n    \"udfs\": [\r\n        {\r\n            \"id\": \"de137d17-dec2-45da-aef5-f48f2a6a522a\",\r\n            \"name\": \"MyField1\",\r\n            \"type\": \"Text\",\r\n            \"valueEntryMethod\": \"Text\",\r\n            \"order\": 0,\r\n            \"scripts\": [],\r\n            \"validation\": [\r\n                {\r\n                    \"length\": 11,\r\n                    \"regEx\": \"rer\",\r\n                    \"requiredValidationScope\": \"SaveStepData\",\r\n                    \"lengthValidationScope\": \"Transition\",\r\n                    \"rangeValidationScope\": \"None\",\r\n                    \"regExValidationScope\": \"SaveStepData\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\n```\n"
      operationId: Setup_FormTemplate_getFormTemplateVersion
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: formTemplateIdOrName
          in: path
          description: ID or Name of form template to return
          required: true
          type: string
          format: GUID
        - name: versionIdOrNumber
          in: path
          description: ID or Number of form template version to return
          required: true
          type: string
          format: GUID
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Setup_FormTemplate_FormTemplateInfo'
        '400':
          description: Invalid input
        '403':
          description: Unauthorized request
    delete:
      tags:
        - Setup_FormTemplate
      summary: Delete form template
      description: "Deletes form template within enviance system. *Deletions are permanent.*\n\n** SDK API:**  'envianceSdk.formtemplates.deleteFormTemplateVersion (formTemplateIdOrName, versionIdOrNumber, onsuccess, onerror)'\n\n```\nDELETE /formtemplates/9ca22677-2670-41a9-bafd-3b2825592863 HTTP/1.1\r\n\n```\n"
      operationId: Setup_FormTemplate_deleteFormTemplateVersion
      consumes:
        - application/json
      produces:
        - application/text
      parameters:
        - name: formTemplateIdOrName
          in: path
          description: ID or Name of form template to delete
          required: true
          type: string
        - name: versionIdOrNumber
          in: path
          description: ID or Number of form template version to delete
          required: true
          type: string
      responses:
        '204':
          description: Successful operation
        '400':
          description: Invalid input
        '403':
          description: Unauthorized request
  /Ver2/FormTemplateService.svc/formtemplates/{formTemplateIdOrName}/versions:
    get:
      tags:
        - Setup_FormTemplate
      summary: Get form template version
      description: "Get information about form template versions from enviance system.\n\n** SDK API:**  envianceSdk.formtemplates.getFormTemplateVersions (formTemplateIdOrName, onsuccess, onerror)\n\n```\nGET /formtemplates/9ca22677-2670-41a9-bafd-3b2825592863/versions HTTP/1.1\r\n\n```\n"
      operationId: Setup_FormTemplate_getFormTemplateVersions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: formTemplateIdOrName
          in: path
          description: ID or Name of form template for which all version needs to be return
          required: true
          type: string
          format: GUID
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Setup_FormTemplate_FormTemplateVersions'
        '400':
          description: Invalid input
        '403':
          description: Unauthorized request
  /Ver2/FormTemplateService.svc/formtemplates/{formTemplateIdOrName}/newversion:
    patch:
      tags:
        - Setup_FormTemplate
      summary: Update form template (Create new version)
      description: |-
        Update form template by creating new versions within enviance system.

        ** SDK API:**  envianceSdk.formtemplates.updateFormTemplateCreateNewVersion (formTemplateIdOrName, formTemplateInfo, onsuccess, onerror)
        null
      operationId: Setup_FormTemplate_updateFormTemplateCreateNewVersion
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: formTemplateIdOrName
          in: path
          description: ID or Name of form template for which new version needs to be created
          required: true
          type: string
          format: GUID
        - name: formTemplateInfo
          in: body
          description: Form Template object
          required: true
          schema:
            $ref: '#/definitions/Setup_FormTemplate_FormTemplateRequestInfo'
      responses:
        '200':
          description: Successful operation
          schema:
            type: string
            format: GUID
          examples:
            application/text: 5f8e1695-8f8a-465c-bca1-2e67fc467d79
        '400':
          description: Invalid input
        '403':
          description: Unauthorized request
  /Ver2/FormTemplateService.svc/formtemplates/{formTemplateIdOrName}/revert/{versionIdOrNumber}:
    patch:
      tags:
        - Setup_FormTemplate
      summary: Update form template version (Revert to specific version)
      description: |-
        Revert the current form template version to specified version within enviance system.

        ** SDK API:**  envianceSdk.formtemplates.updateFormTemplateCreateNewVersion (formTemplateIdOrName, formTemplateInfo, onsuccess, onerror)
        null
      operationId: Setup_FormTemplate_revertToVersion
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: formTemplateIdOrName
          in: path
          description: ID or Name of form template for which new version needs to be created
          required: true
          type: string
        - name: versionIdOrNumber
          in: path
          description: ID or Number of form template version to return
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            type: string
            format: GUID
          examples:
            application/text: 5f8e1695-8f8a-465c-bca1-2e67fc467d79
        '400':
          description: Invalid input
        '403':
          description: Unauthorized request
  /ver2/MessageService.svc/messages:
    post:
      description: "Queues a message for delivery to the Enviance Inbox for a specified recipient, as well as optionally to the recipient e-mail address.\n\n**Security:** All users\n\n**SDK API:**  `envianceSdk.messages.createMessage(messageInfo, onsuccess, onerror) `\n\n```\nPOST /ver2/MessageService.svc/messages/ HTTP/1.1\r\n \r\n{\r\n  \"messageInfo\": {\r\n    \"id\": \"d8ac14f5-c4b1-4db2-b0fc-15452f71737d\",\r\n    \"recipientId\": \"d2148a6f-4989-4a61-9c27-855a110f8c68\",\r\n    \"sentById\": \"21e1f9b6-fc7c-4257-85f1-01d097762d09\",\r\n    \"sentOn\": \"2013-06-14T14:07:52\",\r\n    \"subject\": \"Report Completion Notification: \\\"Emergency Checklist Report\\\"\",\r\n    \"body\": \"This is to notify you that the \\\"Emergency Checklist Report\\\" is complete.\",\r\n    \"type\": \"EmailNotification\",\r\n    \"archived\": false,\r\n    \"read\": false,\r\n    \"sendByEmail\": true\r\n  }\r\n}\r\n\n```\n"
      operationId: Messages_createMessage
      produces:
        - application/json
      parameters:
        - name: messageInfo
          in: body
          description: A messageInfo structure
          required: true
          schema:
            $ref: '#/definitions/Messages_messageInfo'
      responses:
        '202':
          description: Accepted
      tags:
        - Messages
  /ver2/MessageService.svc/messages/{messageId}:
    get:
      description: "Gets a message from the Enviance User Inbox. A User may only retrieve messages from his own Inbox. Getting a message through this API does NOT mark the message as *read*.\n\n**SDK API:**  `envianceSdk.messages.getMessage(messageId, onsuccess, onerror)`\n\n```\nGET /ver2/MessageService.svc/messages/d8ac14f5-c4b1-4db2-b0fc-15452f71737d HTTP/1.1\r\n\r\n//RESPONSE\r\n{\r\n  \"id\": \"d8ac14f5-c4b1-4db2-b0fc-15452f71737d\",\r\n  \"recipientId\": \"d2148a6f-4989-4a61-9c27-855a110f8c68\",\r\n  \"sentById\": \"21e1f9b6-fc7c-4257-85f1-01d097762d09\",\r\n  \"sentOn\": \"2013-06-14T14:07:52\",\r\n  \"subject\": \"Report Completion Notification: \\\"Emergency Checklist Report\\\"\",\r\n  \"body\": \"This is to notify you that the \\\"Emergency Checklist Report\\\" is complete.\",\r\n  \"type\": \"EmailNotification\",\r\n  \"archived\": false,\r\n  \"read\": false\r\n}\r\n\n```\n"
      operationId: Messages_getMessage
      produces:
        - application/json
        - application/xml
      parameters:
        - name: messageId
          in: path
          description: The id string (GUID) uniquely identifying the message.
          required: true
          type: string
      responses:
        '200':
          description: An instance of messageInfo structure
          schema:
            $ref: '#/definitions/Messages_messageInfo'
      tags:
        - Messages
    delete:
      description: "Deletes a message from the User's Enviance Inbox.\n\n**SDK API:**  `envianceSdk.messages.deleteMessage(messageId, onsuccess, onerror)`\n\n```\nDELETE /ver2/MessageService.svc/messages/d8ac14f5-c4b1-4db2-b0fc-15452f71737d HTTP/1.1\r\n\n```\n"
      operationId: Messages_deleteMessage
      parameters:
        - name: messageId
          in: path
          description: The id string (GUID) uniquely identifying the message.
          required: true
          type: string
      responses:
        '204':
          description: Deleted
      tags:
        - Messages
  /ver2/DataService.svc/nonnumericdata/enterdatacommands:
    post:
      description: |-
        Processes a set of one or more non-numeric Data Points. Entering Data
        Points is an asynchronous process. Upon successfully receiving and
        queueing the data, a command id is returned. With this command id, the
        Get Command API can be used to track completion or failure of the data
        entry command.

        **SDK API:**  `envianceSdk.data.enterNonNumericData(nonNumericDataPoints, collector, onsuccess, onerror)`
        null
      operationId: NonNumericData_nonNumericDataPoints
      produces:
        - application/json
      parameters:
        - name: enterNonNumericDataPoints
          in: body
          description: enterNonNumericDataPointInfo structure.
          required: true
          schema:
            $ref: '#/definitions/NonNumericData_enterNonNumericDataPointInfo'
      responses:
        '200':
          description: The id for the queued command.
          schema:
            type: string
      tags:
        - NonNumericData
  /ver2/DataService.svc/nonnumericdata/deletedatacommands:
    post:
      description: |-
        Deletes Non-Numeric Data Points for one Non-Numeric Requirement. Deleting Non-Numeric Data Points is an synchronous process. Deletions  of non-numeric datapoints in the Management System are *permanent*.

        **SDK API:** `envianceSdk.data.deleteNonNumericData(requirementIdOrPath, nonNumericDataPoints, onsuccess, onerror)`
        null
      operationId: NonNumericData_deleteNonNumericData
      parameters:
        - name: DeleteNonNumericDataInfo
          in: body
          description: A deleteNonNumericDataInfo structure.
          required: true
          schema:
            $ref: '#/definitions/NonNumericData_deleteNonNumericDataInfo'
      responses:
        '200':
          description: Non-numeric datapoints deleted.
          schema:
            type: string
      tags:
        - NonNumericData
  /ver2/DataService.svc/numericdata/enterdatacommands:
    post:
      description: |-
        Processes a set of one or more numeric Data Points. Entering Data Points is an asynchronous process. Upon successfully receiving and queueing the data, a command id is returned. With this command id, the Get Command API can be used to track completion or failure of the data entry command.

        **SDK API:**  `envianceSdk.data.enterNumericData (numericDataPoints, collector, onsuccess, onerror)`
        null
      operationId: NumericData_enterNumericData
      produces:
        - application/json
      parameters:
        - name: numericDataPoints
          in: body
          description: An array of numericDataPointInfo instances.
          required: true
          schema:
            $ref: '#/definitions/NumericData_numericDataPointInfo'
      responses:
        '200':
          description: The id for the queued command.
          schema:
            type: string
      tags:
        - NumericData
  /ver2/DataService.svc/numericdata/deletedatacommands:
    post:
      description: |-
        Deletes all Data Points for a set of one or more Parameters, within a specified date range. Deleting Data Points is an asynchronous process. Upon successfully receiving and queueing the data, a command id is returned. With this command id, the Get Command API can be used to track completion or failure of the data entry command. *Deletions are permanent*.

        **SDK API:**  `envianceSdk.data.deleteNumericData(numericDataRanges, onsuccess, onerror)`
        null
      operationId: NumericData_deleteNumericData
      parameters:
        - name: numericDataRangeInfo
          in: body
          description: An array of numericDataRangeInfo.
          required: true
          schema:
            $ref: '#/definitions/NumericData_numericDataRangeInfo'
      responses:
        '200':
          description: The id for the queued command.
          schema:
            type: string
      tags:
        - NumericData
  /ver2/DataService.svc/numericdata/uploadexcelcommands:
    post:
      description: |-
        Upload Excel template with Ajax and Base64 Encoding. First parameter pass HttpFileInput html control or filecontent as Base64 encoded string. Use any one (just one) input control on Rest API Test Tool to specify .xls-file to upload file and specify its id in first parameter: 'fileinput1' or 'fileinput2'.

        **SDK API:**  `envianceSdk.data.uploadExcelData (fileinputOrContent, containerIdOrPath, onsuccess, onerror)`

        **SDK API:**  `envianceSdk.data.uploadExcelDataBinary (fileinput, containerIdOrPath, onsuccess, onerror)`
        null
      operationId: NumericData_uploadexcelcommands
      produces:
        - application/json
      parameters:
        - name: containerIdOrPath
          in: body
          description: id or path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ok
          schema:
            type: string
      tags:
        - NumericData
  /ver2/DataService.svc/numericdata/exceldata:
    post:
      description: |-
        Download Excel template.

        **SDK API:** `envianceSdk.data.downloadExcelData (options, onsuccess, onerror)`
        null
      operationId: NumericData_downloadExcelData
      produces:
        - application/json
      parameters:
        - name: options
          in: body
          description: An array of options
          required: true
          schema:
            $ref: '#/definitions/NumericData_downloadExcelDataOptions'
      responses:
        '200':
          description: ok
          schema:
            type: string
      tags:
        - NumericData
  /ver2/DataService.svc/calculations/calculationranges:
    post:
      description: |-
        Calculates start and end dates (range) based on complex constraints. For example, finding start and end of current, previous or next year range.

        **SDK API:**  `envianceSdk.data.getCalculationRanges (options, onsuccess, onerror)`
        null
      operationId: NumericData_calc_calculationranges
      parameters:
        - name: options
          in: body
          description: 'calc period options: start, end, intervalType, factor, limit, timezones'
          required: true
          schema:
            $ref: '#/definitions/NumericData_calc_RangeOptions'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/NumericData_calc_RangeResult'
      tags:
        - NumericData_calc
  /ver2/DataService.svc/calculations/calculationperiods:
    post:
      description: |-
        Calculates list of date periods withing given date range, based on complex criteria and interval.

        **SDK API:**  `envianceSdk.data.getCalculationPeriods (options, onsuccess, onerror)`
        null
      operationId: NumericData_calc_calculationperiods
      produces:
        - application/json
      parameters:
        - name: options
          in: body
          description: 'calc period options: start, end, intervalType, factor, limit, timezones'
          required: true
          schema:
            $ref: '#/definitions/NumericData_calc_PeriodOptions'
      responses:
        '200':
          description: ok
          schema:
            $ref: '#/definitions/NumericData_calc_PeriodResults'
      tags:
        - NumericData_calc
  /ver2/ReportService.svc/reports/executereportcommands:
    post:
      description: |-
        Executes an AdHoc Report configured in the System. Custom Reports are not supported (use EQL instead). Executing Reports is an asynchronous process. Upon successfully receiving and queueing the data, a command id is returned. With this command id, the Get Command API can be used to track completion or failure of the data entry command. To download the result of the Report execution, execute a GET request with the URI value in the result property of the CommandInfo structure that is returned.

        **SDK API:**  `envianceSdk.reports.execute (reportExecutionInfo, onsuccess, onerror)`
        null
      operationId: Reports_executeReport
      produces:
        - application/json
      parameters:
        - name: reportExecutionInfo
          in: body
          description: An instance of the ReportExecutionInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Reports_reportExecutionInfo'
      responses:
        '200':
          description: The id string (GUID) for the queued command.
          schema:
            type: string
      tags:
        - Reports
  /ver2/ScimIdentityService.svc/scim/v1/ServiceProviderConfigs:
    get:
      summary: Retrieve the Service Provider's configuration.
      description: |-
        Retrieve the Service Provider's configuration.

        ** Example:** 
        GET /ScimIdentityService.svc/scim/v1/ServiceProviderConfigs HTTP/1.1
        null
      responses:
        '200':
          description: Returns Enviance configuration details for SCIM API, including which operations are supported.
      tags:
        - Integration_ScimIdentity
  /ver2/ScimIdentityService.svc/scim/v1/schemas:
    get:
      summary: Retrieve a resource's schema
      description: |-
        Retrieve a resource's schema.

        ** Example:** 
        GET /ScimIdentityService.svc/scim/v1/schemas HTTP/1.1
        null
      responses:
        '200':
          description: Returns Enviance configuration details for how resources (User and Group) are formatted.
      tags:
        - Integration_ScimIdentity
  /ver2/ScimIdentityService.svc/scim/v1/schemas/users:
    get:
      summary: Retrieve a user's schema
      description: |-
        Retrieve a user's schema.

        ** Example:** 
        GET /ScimIdentityService.svc/scim/v1/schemas/users HTTP/1.1
        null
      responses:
        '200':
          description: Returns Enviance configuration details for how resources users are formatted.
      tags:
        - Integration_ScimIdentity
  /ver2/ScimIdentityService.svc/scim/v1/schemas/groups:
    get:
      summary: Retrieve a group's schema
      description: |-
        Retrieve a group's schema

        ** Example:** 
        GET /ScimIdentityService.svc/scim/v1/schemas/groups HTTP/1.1
        null
      responses:
        '200':
          description: Returns Enviance configuration details for how groups are formatted.
      tags:
        - Integration_ScimIdentity
  /ver2/ScimIdentityService.svc/scim/v1/Users:
    post:
      summary: Create a new user.
      description: |-
        Create a new user in Enviance system.

        ** SDK API:**  envianceSdk.scim.createUser(user, onsuccess, onerror)

        ** Example:**
        POST /ScimIdentityService.svc/scim/v1/Users HTTP/1.1
        Content-Type: application/json; charset=UTF-8
        null
      operationId: Integration_ScimIdentity_createUser
      produces:
        - application/json
      parameters:
        - name: user
          in: body
          description: A user structure
          required: true
          schema:
            $ref: '#/definitions/Integration_ScimIdentity_user'
      x-examples:
        application/json: |-
          // EXAMPLE (CREATE)
          POST /ScimIdentityService.svc/scim/v1/Users HTTP/1.1
          Content-Type: application/json; charset=UTF-8

          {
            "schemas": ["urn:scim:schemas:core:1.0", "urn:scim:schemas:enviance:user"],
            "userName": "scimuser",
            "password":"1111",
            "name": {
              "givenName": "Scim",
              "familyName": "User"
            },
            "emails": [
              {"type": "work", "primary": "true", "value": "scimuser@enviance.com"}
            ],
            "timezone": "America/New_York",
            "preferredLanguage": "en_US",
            "active" : true,
            "urn:scim:schemas:enviance:user": {
              "emailDelivery": "HTML Email",
              "receiveInformation": true,
              "commandFailureNotification": "Inbox",
              "companyName": "Enviance, Inc",
              "mustChangePasswordAtNextLogin": "false",
              "canNotChangePassword": "true",
              "NotExpirePassword": "false",
              "userRights": [
                {"name": "Manage Groups", "granted": true}
              ],
              "properties" : [
                {"propertyName" : "supervisorusername", "type": "supervisorusername", "propertyValue" : "someUsername"},
                {"propertyName" : "name2", "type": "name2", "propertyValue" : "val2"}
              ],              
              "comments": "This is a full Scim User"
            }
          }
      responses:
        '201':
          description: An instance of the user structure with metadata.
          schema:
            $ref: '#/definitions/Integration_ScimIdentity_user'
          examples:
            application/json: |-
              {  
                "userName":"scimuser",
                "timezone":"America/New_York",
                "userType":"HomeUser",
                "active":true,
                "addresses":[  
                  {  
                     "country":null,
                     "formatted":"",
                     "locality":"",
                     "postalCode":"",
                     "primary":true,
                     "region":null,
                     "streetAddress":"",
                     "type":"work"
                  }
                ],
                "displayName":"Scim User",
                "emails":[  
                  {  
                     "primary":true,
                     "type":"work",
                     "value":"scimuser@enviance.com"
                  }
                ],
                "name":{  
                  "formatted":"Scim User",
                  "familyName":"User",
                  "givenName":"Scim"
                },
                "phoneNumbers":[  
                  {  
                     "type":"work",
                     "value":""
                  },
                  {  
                    "type":"fax",
                    "value":""
                  },
                  {  
                    "type":"mobile",
                    "value":""
                  }
                ],
                "preferredLanguage":"en_US",
                "title":"",
                "urn:scim:schemas:enviance:user":{  
                  "userRights":[  
                  {  
                    "name":"Manage Groups",
                    "granted":true
                  }
                  ],
                  "properties" : [
                    {
                      "propertyName" : "name1", 
                      "type": "name1", 
                      "propertyValue" : "val1"
                    },
                    {
                      "propertyName" : "name2", 
                      "type": "name2", 
                      "propertyValue" : "val2"
                    }
                  ],                  
                  "expires":"12/31/9999 12:00:00 AM",
                  "emailDelivery":"HTML Email",
                  "receiveInformation":true,
                  "commandFailureNotification":"Inbox",
                  "reportCompletionNotification":"Inbox",
                  "companyName":"Enviance, Inc",
                  "mustChangePasswordAtNextLogin":false,
                  "canNotChangePassword":true,
                  "notExpirePassword":false,
                  "comments":"This is a full Scim User"
                },
                "id":"0af39038-50b6-44a8-8660-be7249c190cc",
                "externalId":"",
                "meta":{  
                "created":"1/6/2017 9:39:22 PM",
                "version":"-1670530483",
                "location":"https://api.enviance.com/ver2/ScimIdentityService.svc/scim/v1/Users/0af39038-50b6-44a8-8660-be7249c190cc"
                },
                "schemas":[  
                  "urn:scim:schemas:core:1.0",
                  "urn:scim:schemas:enviance:user"
                ]
              }
      tags:
        - Integration_ScimIdentity
  /ver2/ScimIdentityService.svc/scim/v1/Users/{id}:
    get:
      summary: Gets information about user.
      description: |-
        Gets information about user.

        ** Example:** 
        GET /ScimIdentityService.svc/scim/v1/Users/9ca22677-2670-41a9-bafd-3b2825592863 HTTP/1.1

        ** SDK API:**  envianceSdk.scim.getUser(id, onsuccess, onerror)
        null
      operationId: Integration_ScimIdentity_getUser
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: An id string (GUID), uniquely identifying the User. Any string that matches the pattern of a GUID is interpreted as the id string
          required: true
          type: string
      responses:
        '200':
          description: An instance of the user structure.
          schema:
            $ref: '#/definitions/Integration_ScimIdentity_user'
          examples:
            application/json: |-
              {  
                "userName":"scimuser",
                "timezone":"America/New_York",
                "userType":"HomeUser",
                "active":true,
                "addresses":[  
                  {  
                     "country":null,
                     "formatted":"",
                     "locality":"",
                     "postalCode":"",
                     "primary":true,
                     "region":null,
                     "streetAddress":"",
                     "type":"work"
                  }
                ],
                "displayName":"Scim User",
                "emails":[  
                  {  
                     "primary":true,
                     "type":"work",
                     "value":"scimuser@enviance.com"
                  }
                ],
                "name":{  
                  "formatted":"Scim User",
                  "familyName":"User",
                  "givenName":"Scim"
                },
                "phoneNumbers":[  
                  {  
                     "type":"work",
                     "value":""
                  },
                  {  
                    "type":"fax",
                    "value":""
                  },
                  {  
                    "type":"mobile",
                    "value":""
                  }
                ],
                "preferredLanguage":"en_US",
                "title":"",
                "urn:scim:schemas:enviance:user":{  
                  "userRights":[  
                  {  
                    "name":"Manage Groups",
                    "granted":true
                  }
                  ],
                  "expires":"12/31/9999 12:00:00 AM",
                  "emailDelivery":"HTML Email",
                  "receiveInformation":true,
                  "commandFailureNotification":"Inbox",
                  "reportCompletionNotification":"Inbox",
                  "companyName":"Enviance, Inc",
                  "mustChangePasswordAtNextLogin":false,
                  "canNotChangePassword":true,
                  "notExpirePassword":false,
                  "comments":"This is a full Scim User",
                  "properties" : [
                    {"propertyName" : "supervisorusername", "type": "supervisorusername", "propertyValue" : "someUsername"},
                    {"propertyName" : "name2", "type": "name2", "propertyValue" : "val2"}
                  ]
                },
                "id":"0af39038-50b6-44a8-8660-be7249c190cc",
                "externalId":"",
                "meta":{  
                "created":"1/6/2017 9:39:22 PM",
                "version":"-1670530483",
                "location":"https://api.enviance.com/ver2/ScimIdentityService.svc/scim/v1/Users/0af39038-50b6-44a8-8660-be7249c190cc"
                },
                "schemas":[  
                  "urn:scim:schemas:core:1.0",
                  "urn:scim:schemas:enviance:user"
                ]
              }
      tags:
        - Integration_ScimIdentity
    patch:
      summary: Updates an existing user.
      description: |-
        Partially updates an existing user. This operation allows sending only those attributes requiring modification, reducing network and processing overhead. Attributes may be deleted, replaced, merged, or added in a single request.

         ** Example:** 
         PATCH  /ScimIdentityService.svc/scim/v1/Users/7ef9655e-916b-414f-8c88-5753fa731558 HTTP/1.1
         Content-Type: application/json; charset=UTF-8
         
         ** SDK API:**  envianceSdk.scim.partialUpdateUser (user, id, onsuccess, onerror)
        null
      operationId: Integration_ScimIdentity_partialUpdateUser
      produces:
        - application/text
      parameters:
        - name: id
          in: path
          description: An id string (GUID), uniquely identifying the User. Any string that matches the pattern of a GUID is interpreted as the id string.
          required: true
          type: string
        - name: user
          in: body
          description: A user structure
          required: true
          schema:
            $ref: '#/definitions/Integration_ScimIdentity_user'
      x-examples:
        application/json: |-
          { 
            "schemas": ["urn:scim:schemas:core:1.0"],
            "timezone" : "America/Los_Angeles",
            "externalId" : "apple"
          }
      responses:
        '200':
          description: An instance of the user structure
          schema:
            $ref: '#/definitions/Integration_ScimIdentity_user'
          examples:
            application/json: |-
              {  
                "userName":"scimuser",
                "timezone":"America/Los_Angeles",
                "userType":"HomeUser",
                "active":true,
                "addresses":[  
                  {  
                     "country":null,
                     "formatted":"",
                     "locality":"",
                     "postalCode":"",
                     "primary":true,
                     "region":null,
                     "streetAddress":"",
                     "type":"work"
                  }
                ],
                "displayName":"Scim User",
                "emails":[  
                  {  
                     "primary":true,
                     "type":"work",
                     "value":"scimuser@enviance.com"
                  }
                ],
                "name":{  
                  "formatted":"Scim User",
                  "familyName":"User",
                  "givenName":"Scim"
                },
                "phoneNumbers":[  
                  {  
                     "type":"work",
                     "value":""
                  },
                  {  
                    "type":"fax",
                    "value":""
                  },
                  {  
                    "type":"mobile",
                    "value":""
                  }
                ],
                "preferredLanguage":"en_US",
                "title":"",
                "urn:scim:schemas:enviance:user":{  
                  "userRights":[  
                  {  
                    "name":"Manage Groups",
                    "granted":true
                  }
                  ],
                  "expires":"12/31/9999 12:00:00 AM",
                  "emailDelivery":"HTML Email",
                  "receiveInformation":true,
                  "commandFailureNotification":"Inbox",
                  "reportCompletionNotification":"Inbox",
                  "companyName":"Enviance, Inc",
                  "mustChangePasswordAtNextLogin":false,
                  "canNotChangePassword":true,
                  "notExpirePassword":false,
                  "comments":"This is a full Scim User",
                  "properties" : [
                    {"propertyName" : "supervisorusername", "type": "supervisorusername", "propertyValue" : "someUsername"},
                    {"propertyName" : "name2", "type": "name2", "propertyValue" : "val2"}
                  ]
                },
                "id":"0af39038-50b6-44a8-8660-be7249c190cc",
                "externalId":"apple",
                "meta":{  
                "created":"1/6/2017 9:39:22 PM",
                "version":"-1670530483",
                "location":"https://api.enviance.com/ver2/ScimIdentityService.svc/scim/v1/Users/0af39038-50b6-44a8-8660-be7249c190cc"
                },
                "schemas":[  
                  "urn:scim:schemas:core:1.0",
                  "urn:scim:schemas:enviance:user"
                ]
              }
      tags:
        - Integration_ScimIdentity
    put:
      summary: Updates an existing user.
      description: |-
        Updates an existing user. PUT performs a full update.

        ** Example:**
        PUT /ScimIdentityService.svc/scim/v1/Users/7ef9655e-916b-414f-8c88-5753fa731558 HTTP/1.1
        Content-Type: application/json; charset=UTF-8

        ** SDK API:**  envianceSdk.scim.fullUpdateUser (user, id, onsuccess, onerror)
        null
      operationId: Integration_ScimIdentity_fullUpdateUser
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: An id string (GUID), uniquely identifying the User. Any string that matches the pattern of a GUID is interpreted as the id string.
          required: true
          type: string
        - name: user
          in: body
          description: A user structure
          required: true
          schema:
            $ref: '#/definitions/Integration_ScimIdentity_user'
      x-examples:
        application/json: |-
          // EXAMPLE
          PUT /ScimIdentityService.svc/scim/v1/Users/7ef9655e-916b-414f-8c88-5753fa731558 HTTP/1.1
          Content-Type: application/json; charset=UTF-8

          {
            "schemas": ["urn:scim:schemas:core:1.0", "urn:scim:schemas:enviance:user"],
            "userName": "scimuser",
            "password":"1111",
            "name": {
              "givenName": "Scim",
              "familyName": "User"
            },
            "emails": [
              {"type": "work", "primary": "true", "value": "scimuser@enviance.com"}
            ],
            "timezone": "America/New_York",
            "preferredLanguage": "en_US",
            "active" : true,
            "urn:scim:schemas:enviance:user": {
              "emailDelivery": "HTML Email",
              "receiveInformation": true,
              "commandFailureNotification": "Inbox",
              "companyName": "Enviance, Inc",
              "mustChangePasswordAtNextLogin": "false",
              "canNotChangePassword": "true",
              "NotExpirePassword": "false",
              "userRights": [
                {"name": "Manage Groups", "granted": true}
              ],
              "properties" : [
                {"propertyName" : "supervisorusername", "type": "supervisorusername", "propertyValue" : "someUsername"},
                {"propertyName" : "name2", "type": "name2", "propertyValue" : "val2"}
              ],              
              "comments": "This is a full Scim User"
            }
          }
      responses:
        '200':
          description: An instance of the user structure with metadata.
          schema:
            $ref: '#/definitions/Integration_ScimIdentity_user'
          examples:
            application/json: |-
              {  
                "userName":"scimuser",
                "timezone":"America/New_York",
                "userType":"HomeUser",
                "active":true,
                "addresses":[  
                  {  
                     "country":null,
                     "formatted":"",
                     "locality":"",
                     "postalCode":"",
                     "primary":true,
                     "region":null,
                     "streetAddress":"",
                     "type":"work"
                  }
                ],
                "displayName":"Scim User",
                "emails":[  
                  {  
                     "primary":true,
                     "type":"work",
                     "value":"scimuser@enviance.com"
                  }
                ],
                "name":{  
                  "formatted":"Scim User",
                  "familyName":"User",
                  "givenName":"Scim"
                },
                "phoneNumbers":[  
                  {  
                     "type":"work",
                     "value":""
                  },
                  {  
                    "type":"fax",
                    "value":""
                  },
                  {  
                    "type":"mobile",
                    "value":""
                  }
                ],
                "preferredLanguage":"en_US",
                "title":"",
                "urn:scim:schemas:enviance:user":{  
                  "userRights":[  
                  {  
                    "name":"Manage Groups",
                    "granted":true
                  }
                  ],
                  "properties" : [
                    {
                      "propertyName" : "name1", 
                      "type": "name1", 
                      "propertyValue" : "val1"
                    },
                    {
                      "propertyName" : "name2", 
                      "type": "name2", 
                      "propertyValue" : "val2"
                    }
                  ],
                  "expires":"12/31/9999 12:00:00 AM",
                  "emailDelivery":"HTML Email",
                  "receiveInformation":true,
                  "commandFailureNotification":"Inbox",
                  "reportCompletionNotification":"Inbox",
                  "companyName":"Enviance, Inc",
                  "mustChangePasswordAtNextLogin":false,
                  "canNotChangePassword":true,
                  "notExpirePassword":false,
                  "comments":"This is a full Scim User"
                },
                "id":"0af39038-50b6-44a8-8660-be7249c190cc",
                "externalId":"",
                "meta":{  
                "created":"1/6/2017 9:39:22 PM",
                "version":"-1670530483",
                "location":"https://api.enviance.com/ver2/ScimIdentityService.svc/scim/v1/Users/0af39038-50b6-44a8-8660-be7249c190cc"
                },
                "schemas":[  
                  "urn:scim:schemas:core:1.0",
                  "urn:scim:schemas:enviance:user"
                ]
              }
      tags:
        - Integration_ScimIdentity
    delete:
      summary: Deletes an existing user.
      description: |-
        Deletes an existing user. User deletions are _not_ _permanent_.

        ** Example:** 
        DELETE /ScimIdentityService.svc/scim/v1/Users/7ef9655e-916b-414f-8c88-5753fa731558 HTTP/1.1

        ** SDK API:**  envianceSdk.scim.deleteUser (id, onsuccess, onerror)
        null
      operationId: Integration_ScimIdentity_deleteUser
      parameters:
        - name: id
          in: path
          description: An id string (GUID), uniquely identifying the User. Any string that matches the pattern of a GUID is interpreted as the id string.
          required: true
          type: string
      responses:
        '200':
          description: User is deleted.
      tags:
        - Integration_ScimIdentity
  /ver2/ScimIdentityService.svc/scim/v1/Groups:
    post:
      summary: Create a new group.
      description: |-
        Create a new group in Enviance system. 

        ** Example:**
        POST /ScimIdentityService.svc/scim/v1/Groups HTTP/1.1
        Content-Type: application/json; charset=UTF-8

        ** SDK API:**  envianceSdk.scim.createGroup(group, onsuccess, onerror)
        null
      operationId: Integration_ScimIdentity_createGroup
      produces:
        - application/json
      parameters:
        - name: group
          in: body
          description: Create a new group
          required: true
          schema:
            $ref: '#/definitions/Integration_ScimIdentity_group'
      x-examples:
        application/json: |-
          // EXAMPLE (CREATE)
          POST /ScimIdentityService.svc/scim/v1/Groups HTTP/1.1
          Content-Type: application/json; charset=UTF-8

          {
            "schemas": ["urn:scim:schemas:core:1.0", "urn:scim:schemas:enviance:group"],
            "displayName": "Enviance SCIM Group",
            "externalid" : "Enviance SCIM Group",
            "urn:scim:schemas:enviance:group": {
            "rights": [
                    "Manage Users"  
                ]
            },
            "members": 
            [
                { "value": "19ycb0g2-df4b-42c5-8s48-04457723cf76" }
            ]
          }
      responses:
        '201':
          description: An instance of the group structure with metadata.
          schema:
            $ref: '#/definitions/Integration_ScimIdentity_group'
          examples:
            application/json: |-
              {
                "urn:scim:schemas:enviance:group": {
                "rights": [
                    "Manage Users"
                    ]
                },
                "id": "809d56ad-77ef-47a6-9f3c-f8853b118744",
                "externalId": "Enviance SCIM Group",
                "meta": {
                    "version": "-349702305",
                    "location": "http://api.enviance.com/ver2/ScimIdentityService.svc/scim/v1/Groups/809d56ad-77ef-47a6-9f3c-f8853b118744"
                },
                "schemas": [
                    "urn:scim:schemas:core:1.0",
                    "urn:scim:schemas:enviance:group"
                ],
                "displayName": "Enviance SCIM Group",
                "members": [
                    {
                        "value": "19ycb0g2-df4b-42c5-8s48-04457723cf76"
                    }
                ]
              }
      tags:
        - Integration_ScimIdentity
  /ver2/ScimIdentityService.svc/scim/v1/Groups/{id}:
    get:
      summary: Gets information about group.
      description: |-
        Gets information about group.

        ** Example:** 
        GET /ScimIdentityService.svc/scim/v1/Groups/809d56ad-77ef-47a6-9f3c-f8853b118744 HTTP/1.1

        ** SDK API:**  envianceSdk.scim.getGroup(id, onsuccess, onerror)
        null
      operationId: Integration_ScimIdentity_getGroup
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: An id string (GUID), uniquely identifying the Group. Any string that matches the pattern of a GUID is interpreted as the id string
          required: true
          type: string
      responses:
        '200':
          description: An instance of the group structure.
          schema:
            $ref: '#/definitions/Integration_ScimIdentity_group'
          examples:
            application/json: |-
              {
                "urn:scim:schemas:enviance:group": {
                "rights": [
                    "Manage Users"
                    ]
                },
                "id": "809d56ad-77ef-47a6-9f3c-f8853b118744",
                "externalId": "Enviance SCIM Group",
                "meta": {
                    "version": "-349702305",
                    "location": "http://api.enviance.com/ver2/ScimIdentityService.svc/scim/v1/Groups/809d56ad-77ef-47a6-9f3c-f8853b118744"
                },
                "schemas": [
                    "urn:scim:schemas:core:1.0",
                    "urn:scim:schemas:enviance:group"
                ],
                "displayName": "Enviance SCIM Group",
                "members": [
                    {
                        "value": "19ycb0g2-df4b-42c5-8s48-04457723cf76"
                    }
                ]
              }
      tags:
        - Integration_ScimIdentity
    patch:
      summary: Updates an existing group.
      description: |-
        This operation allows sending only those attributes requiring modification, reducing network and processing overhead. Attributes may be deleted, replaced, merged, or added in a single request

        ** Example:** 
        PATCH  /ScimIdentityService.svc/scim/v1/Groups/809d56ad-77ef-47a6-9f3c-f8853b118744 HTTP/1.1'
        Content-Type: application/json; charset=UTF-8
         
        ** SDK API:**  envianceSdk.scim.partialUpdateGroup (group, id, onsuccess, onerror)
        null
      operationId: Integration_ScimIdentity_partialUpdateGroup
      produces:
        - application/text
      parameters:
        - name: id
          in: path
          description: An id string (GUID), uniquely identifying the Group. Any string that matches the pattern of a GUID is interpreted as the id string.
          required: true
          type: string
        - name: group
          in: body
          description: A group structure
          required: true
          schema:
            $ref: '#/definitions/Integration_ScimIdentity_group'
      x-examples:
        application/json: |-
          PATCH  /ScimIdentityService.svc/scim/v1/Groups/809d56ad-77ef-47a6-9f3c-f8853b118744 HTTP/1.1'
          Content-Type: application/json; charset=UTF-8

          { 
            "schemas": ["urn:scim:schemas:core:1.0", "urn:scim:schemas:enviance:group"],
            "urn:scim:schemas:enviance:group": {
                "rights": [
                    "Manage Groups"
                    ]
                }            
          }
      responses:
        '200':
          description: An instance of the group structure
          schema:
            $ref: '#/definitions/Integration_ScimIdentity_group'
          examples:
            application/json: |-
              {
                "urn:scim:schemas:enviance:group": {
                "rights": [
                    "Manage Groups"
                    ]
                },
                "id": "809d56ad-77ef-47a6-9f3c-f8853b118744",
                "externalId": "Enviance SCIM Group",
                "meta": {
                    "version": "-349702305",
                    "location": "http://api.enviance.com/ver2/ScimIdentityService.svc/scim/v1/Groups/809d56ad-77ef-47a6-9f3c-f8853b118744"
                },
                "schemas": [
                    "urn:scim:schemas:core:1.0",
                    "urn:scim:schemas:enviance:group"
                ],
                "displayName": "Enviance SCIM Group",
                "members": [
                    {
                        "value": "19ycb0g2-df4b-42c5-8s48-04457723cf76"
                    }
                ]
              }
      tags:
        - Integration_ScimIdentity
    put:
      summary: Updates an existing group.
      description: |-
        Updates an existing group. PUT performs a full update.

        ** Example:**
        PUT /ScimIdentityService.svc/scim/v1/Groups/809d56ad-77ef-47a6-9f3c-f8853b118744 HTTP/1.1
        Content-Type: application/json; charset=UTF-8

        ** SDK API:**  envianceSdk.scim.fullUpdateGroup (group, id, onsuccess, onerror)
        null
      operationId: Integration_ScimIdentity_fullUpdateGroup
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: An id string (GUID), uniquely identifying the Group. Any string that matches the pattern of a GUID is interpreted as the id string.
          required: true
          type: string
        - name: group
          in: body
          description: A group structure
          required: true
          schema:
            $ref: '#/definitions/Integration_ScimIdentity_group'
      x-examples:
        application/json: |-
          // EXAMPLE (CREATE)
          PUT /ScimIdentityService.svc/scim/v1/Groups/809d56ad-77ef-47a6-9f3c-f8853b118744 HTTP/1.1
          Content-Type: application/json; charset=UTF-8

          {
            "schemas": ["urn:scim:schemas:core:1.0", "urn:scim:schemas:enviance:group"],
            "displayName": "Enviance SCIM 123 Group",
            "externalid" : "Enviance SCIM 123 Group",
            "urn:scim:schemas:enviance:group": {
            "rights": [
                    "Manage Users"  
                ]
            },
            "members": 
            [
                { "value": "19ycb0g2-df4b-42c5-8s48-04457723cf76" }
            ]
          }
      responses:
        '200':
          description: An instance of the group structure with metadata.
          schema:
            $ref: '#/definitions/Integration_ScimIdentity_group'
          examples:
            application/json: |-
              {
                "urn:scim:schemas:enviance:group": {
                "rights": [
                    "Manage Users"
                    ]
                },
                "id": "809d56ad-77ef-47a6-9f3c-f8853b118744",
                "externalId": "Enviance SCIM 123 Group",
                "meta": {
                    "version": "-349702305",
                    "location": "http://api.enviance.com/ver2/ScimIdentityService.svc/scim/v1/Groups/809d56ad-77ef-47a6-9f3c-f8853b118744"
                },
                "schemas": [
                    "urn:scim:schemas:core:1.0",
                    "urn:scim:schemas:enviance:group"
                ],
                "displayName": "Enviance SCIM 123 Group",
                "members": [
                    {
                        "value": "19ycb0g2-df4b-42c5-8s48-04457723cf76"
                    }
                ]
              }
      tags:
        - Integration_ScimIdentity
    delete:
      summary: Deletes an existing group.
      description: |-
        Deletes an existing group. Group Deletions are _permanent_.

        ** Example:** 'DELETE /ScimIdentityService.svc/scim/v1/Groups/809d56ad-77ef-47a6-9f3c-f8853b118744 HTTP/1.1'

        ** SDK API:**  envianceSdk.scim.deleteGroup (id, onsuccess, onerror)
        null
      operationId: Integration_ScimIdentity_deleteGroup
      parameters:
        - name: id
          in: path
          description: An id string (GUID), uniquely identifying the User. Any string that matches the pattern of a GUID is interpreted as the id string.
          required: true
          type: string
      responses:
        '200':
          description: Group is deleted.
      tags:
        - Integration_ScimIdentity
  /ver2/TagService.svc/tags:
    post:
      description: "Creates a new Tag.\n\n**Security:** Requires Manage Tag Schemes system right.\n\n**SDK API:** `envianceSdk.tags.createTag (tagInfo, onsuccess, onerror)`\n\n```\nPOST/TagService.svc/tags HTTP/1.1\r\nContent-Type: application/json; charset=UTF-8\r\n\r\n{\r\n  \"tagInfo\": {\r\n    \"name\": \"Tag Name\",\r\n    \"tagSchemeIdOrName\": \"Tag Scheme 1\",\r\n    \"description\": \"Tag Description\"\r\n  }\r\n}\r\n\n```\n"
      operationId: Setup_Tags_createTag
      produces:
        - application/json
      parameters:
        - name: tagInfo
          in: body
          description: A tagInfo structure. Some properties of this structure are ignored during this operation. See the details of this structure for more info.
          required: true
          schema:
            $ref: '#/definitions/Setup_Tags_tagInfo'
      responses:
        '200':
          description: The id string (GUID) for the new Tag.
          schema:
            type: string
      tags:
        - Setup_Tags
  /ver2/TagService.svc/tags/{tagIdOrSchemeIdAndTagName}:
    patch:
      description: "Updates an existing Tag.\n\n**Security:** Requires Manage Tag Schemes system right.\n\n**SDK API:** `envianceSdk.tags.updateTag (tagIdOrSchemeIdAndTagName, tagInfo, onsuccess, onerror)`\n\n```\nGET /TagService.svc/tags/9ca22677-2670-41a9-bafd-3b2825592863 HTTP/1.1\r\n\r\n//RESPONSE\r\n{\r\n  \"id\": \"9ca22677-2670-41a9-bafd-3b2825592863\",\r\n  \"name\": \"Tag Name\",\r\n  \"tagSchemeIdOrName\": \"Tag Scheme 1\",\r\n  \"description\": \"Tag Description\"\r\n}\r\n\n```\n"
      operationId: Setup_Tags_updateTag
      produces:
        - application/json
      parameters:
        - in: path
          name: tagIdOrSchemeIdAndTagName
          description: Either an id string (GUID) for the tag or the id string (GUID) for the tag scheme id and the tag name. Any string that matches the pattern of a GUID is interpreted as an id string and not a name. A name string must be URL encoded.
          required: true
          type: string
        - name: tagInfo
          in: body
          description: A tagInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Setup_Tags_tagInfo'
      responses:
        '200':
          description: The id string (GUID) for the updated Tag.
          schema:
            type: string
      tags:
        - Setup_Tags
    get:
      description: "Gets information about a Tag.\n\n**Security:** Requires Manage Tag Schemes system right.\n\n**SDK API:** `envianceSdk.tags.getTag (tagIdOrSchemeIdAndTagName, onsuccess, onerror)`\n\n```\nGET /TagService.svc/tags/9ca22677-2670-41a9-bafd-3b2825592863 HTTP/1.1\r\n\r\n//RESPONSE\r\n{\r\n  \"id\": \"9ca22677-2670-41a9-bafd-3b2825592863\",\r\n  \"name\": \"Tag Name\",\r\n  \"tagSchemeIdOrName\": \"Tag Scheme 1\",\r\n  \"description\": \"Tag Description\"\r\n}\r\n</div>\r\n\n```\n"
      operationId: Setup_Tags_getTag
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: tagIdOrSchemeIdAndTagName
          description: Either an id string (GUID) for the tag or the id string (GUID) for the tag scheme id and the tag name. Any string that matches the pattern of a GUID is interpreted as an id string and not a name. A name string must be URL encoded.
          required: true
          type: string
      responses:
        '200':
          description: An instance of the tagInfo structure.
          schema:
            $ref: '#/definitions/Setup_Tags_tagInfo'
      tags:
        - Setup_Tags
    delete:
      description: "Deletes an existing Tag. *Deletions are permanent*.\n\n**Security:** Requires Manage Tag Schemes system right.\n\n**SDK API:** `envianceSdk.tags.deleteTag (tagIdOrSchemeIdAndTagName, onsuccess, onerror)`\n\n```\nDELETE /TagService.svc/tags/7ef9655e-916b-414f-8c88-5753fa731558 HTTP/1.1\r\n\n```\n"
      operationId: Setup_Tags_deleteTag
      parameters:
        - name: tagIdOrSchemeIdAndTagName
          in: path
          description: Either an id string (GUID) for the tag or the id string (GUID) for the tag scheme id and the tag name. Any string that matches the pattern of a GUID is interpreted as an id string and not a name. A name string must be URL encoded.
          required: true
          type: string
      responses:
        '204':
          description: Tag deleted
      tags:
        - Setup_Tags
  /ver2/TagSchemeService.svc/tagSchemes:
    post:
      description: "Creates a new Tag Scheme, alternately by copying an existing Tag Scheme.\n\n**Security:**  Requires Manage Tag Schemes system right.\n\n**SDK API (create):** `envianceSdk.tagSchemes.createTagScheme (tagSchemeInfo, onsuccess, onerror)`\n\n**SDK API (copy):**  `envianceSdk.tagSchemes.copyTagScheme(tagSchemeInfo, copyFrom, onsuccess, onerror)`\n\n```\nPOST/TagSchemeService.svc/tagschemes HTTP/1.1\r\nContent-Type: application/json; charset=UTF-8\r\n\r\n{\r\n  \"tagSchemeInfo\": {\r\n    \"name\": \"Tag Scheme Name\",\r\n    \"description\": \"Tag Scheme Description\",\r\n    \"enforceUniqueness\": \"0\"\r\n  }\r\n}\r\n\n```\n"
      operationId: Setup_TagScheme_createCopyTagScheme
      produces:
        - application/json
      parameters:
        - name: tagSchemeCreate
          in: body
          description: Create Tag Scheme body
          required: true
          schema:
            $ref: '#/definitions/Setup_TagScheme_tagSchemeCreate'
      responses:
        '200':
          description: The id string (GUID) for the new Tag Scheme.
          schema:
            type: string
      tags:
        - Setup_TagScheme
  /ver2/TagSchemeService.svc/tagSchemes/{tagSchemeIdOrName}:
    patch:
      description: "Updates an existing Tag Scheme.\n\n**Security:**  Requires Manage Tag Schemes system right.\n\n**SDK API:**  `envianceSdk.tagSchemes.updateTagScheme (tagSchemeIdOrName, tagSchemeInfo, onsuccess, onerror)`\n\n```\nPATCH /TagSchemeService.svc/tagschemes/7ef9655e-916b-414f-8c88-5753fa731558 HTTP/1.1\r\nContent-Type: application/json; charset=UTF-8\r\n\r\n{\r\n  \"tagSchemeUpdateInformation\": {\r\n    \"name\": \"new TagScheme name\",\r\n    \"description\": \"new TagScheme description\",\r\n  }\r\n}\r\n\n```\n"
      operationId: Setup_TagScheme_updateTagScheme
      produces:
        - application/json
      parameters:
        - in: path
          name: tagSchemeIdOrName
          description: Either an id string (GUID), or a name string uniquely identifying the Tag Scheme. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Tag Scheme. A name string must be URL encoded
          required: true
          type: string
        - name: tagSchemeInfo
          in: body
          description: A tagSchemeInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Setup_TagScheme_tagSchemeInfo'
      responses:
        '200':
          description: The id string (GUID) for the updated Tag Scheme.
          schema:
            type: string
      tags:
        - Setup_TagScheme
    get:
      description: "Gets information about a Tag Scheme.\n\n**Security:**  Requires Manage Tag Schemes system right.\n\n**SDK API:**  `envianceSdk.tagSchemes.getTagScheme (tagSchemeIdOrName, onsuccess, onerror)`\n\n```\nGET /TagSchemeService.svc/tagschemes/9ca22677-2670-41a9-bafd-3b2825592863 HTTP/1.1\r\n\r\n//RESPONSE\r\n{\r\n  \"id\": \"9ca22677-2670-41a9-bafd-3b2825592863\",\r\n  \"name\": \"Tag Scheme Name\",\r\n  \"description\": \"Tag Scheme Description\",\r\n  \"enforceUniqueness\": \"0\"\r\n}\r\n\n```\n"
      operationId: Setup_TagScheme_getTagScheme
      produces:
        - application/json
        - application/xml
      parameters:
        - in: path
          name: tagSchemeIdOrName
          description: Either an id string (GUID), or a name string uniquely identifying the Tag Scheme. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Tag Scheme. A name string must be URL encoded.
          required: true
          type: string
      responses:
        '200':
          description: 'An instance of the tagSchemeInfo structure. schema: $ref: '
      tags:
        - Setup_TagScheme
    delete:
      description: "Deletes an existing Tag Scheme. *Deletions are permanent*.\n\n**Security:**  Requires Manage Tag Schemes system right.\n\n**SDK API:**  `envianceSdk.tagSchemes.deleteTagScheme (tagSchemeIdOrName, onsuccess, onerror)`\n\n```\nDELETE /TagSchemeService.svc/tagschemes/7ef9655e-916b-414f-8c88-5753fa731558\r\n\n```\n"
      operationId: Setup_TagScheme_deleteTagScheme
      parameters:
        - name: tagSchemeIdOrName
          in: path
          description: Either an id string (GUID), or a name string uniquely identifying the Tag Scheme. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Tag Scheme. A name string must be URL encoded.
          required: true
          type: string
      responses:
        '204':
          description: Tag Scheme deleted
      tags:
        - Setup_TagScheme
  /ver2/TaskService.svc/tasks:
    post:
      description: "Creates a new simple (single occurrence) Task definition, optionally copying the definition from another Task to the new Task.\n\n**Security:** Requires Manage Tasks right. \n\n**SDK API (create):**  `envianceSdk.tasks.createTask(taskInfo, onsuccess, onerror)`\n\n**SDK API (copy):**  `envianceSdk.tasks.copyTask(taskInfo, copyFrom, onsuccess, onerror)`\n\n```\nPOST /ver2/TaskService.svc/tasks HTTP/1.1\r\nContent-Type: application/json; charset=UTF-8\r\n \r\n{\r\n  \"taskInfo\": {\r\n    \"name\": \"Check Valves Monthly\",\r\n    \"description\": \"Perform a spot check every month on the steam valves.\",\r\n    \"dueDate\": \"2012-12-08T09:00:00\",\r\n    \"timeZone\": \"USA Pacific\",\r\n    \"assignor\": \"CGauss\",\r\n    \"assignees\": [{\"userName\": \"LEuler\"}, {\"groupName\": \"Group A\"}],\r\n    \"calendars\": [\"System\", \"My\"],\r\n    \"objects\": [\r\n      \"/A Facility/A Unit/A POI/Check Valves\",\r\n      \"/A Facility/A Unit/B POI/Check Valves\"\r\n    ],\r\n    \"documents\": [\"/A folder/A subfolder/A document.doc\"]\r\n  }\r\n}\r\n\n```\n"
      operationId: Task_createCopyTask
      produces:
        - application/json
      parameters:
        - name: taskCreateInfo
          in: body
          description: Task Create body parameters
          required: true
          schema:
            $ref: '#/definitions/Task_taskCreateInfo'
      responses:
        '200':
          description: The id string (GUID) for the newly created Task.
          schema:
            type: string
      tags:
        - Task
  /ver2/TaskService.svc/tasks/{taskId}:
    patch:
      description: "Updates the properties of a simple (single occurrence) Task definition, potentially moving it to a new Location. Updating the object Location(s) of a Task effectively moves that Task to the new Location(s).\n\n**Security:** Requires Manage Tasks right. \n\n**SDK API:**  `envianceSdk.tasks.updateTask(taskId, taskInfo, onsuccess, onerror)`\n\n```\nPATCH /ver2/TaskService.svc/tasks/9ca22677-2670-41a9-bafd-3b2825592863 HTTP/1.1\r\nContent-Type: application/json; charset=UTF-8\r\n \r\n{\r\n  \"taskInfo\": {\r\n    \"name\": \"Check Valves Monthly\",\r\n    \"description\": \"Perform a spot check every month on the steam valves.\",\r\n    \"dueDate\": \"2012-12-08T09:00:00\",\r\n    \"timeZone\": \"USA Pacific\",\r\n    \"objects\": [\r\n      \"/A Facility/A Unit/A POI/Check Valves\",\r\n      \"/A Facility/A Unit/B POI/Check Valves\",\r\n      \"/A Facility/A Unit/C POI/Check Valves\"\r\n    ]\r\n  }\r\n}\r\n\n```\n"
      operationId: Task_updateTask
      produces:
        - application/json
      parameters:
        - name: taskId
          in: path
          description: The id string (GUID) for an existing Task.
          required: true
          type: string
        - name: taskInfo
          in: body
          description: A taskInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Task_taskInfo'
      responses:
        '200':
          description: Task updated.
          schema:
            type: string
      tags:
        - Task
    get:
      description: "Gets information about an existing Task definition. Though it can be used to retrieve information about single occurrence or recurring Tasks, this API currently does not provide information about the notification or scheduling setup of the Task. For details of a particular Task occurrence on a given date and time, use getTaskOccurrence.\n\n**Security:** Requires Manage Tasks right. \n\n**SDK API:**  `envianceSdk.tasks.getTask(taskId, onsuccess, onerror)`\n\n```\nGET /ver2/TaskService.svc/tasks/9ca22677-2670-41a9-bafd-3b2825592863 HTTP/1.1\r\n\r\n//RESPONSE\r\n{\r\n  \"name\": \"Check Valves Monthly\",\r\n  \"description\": \"Perform a spot check every month on the steam valves.\",\r\n  \"dueDate\": \"2012-12-08T09:00:00\",\r\n  \"timeZone\": \"USA Pacific\",\r\n  \"assignor\": \"CGauss\",\r\n  \"assignees\": [{\"userName\": \"LEuler\"}, {\"groupName\": \"Group A\"}],\r\n  \"calendars\": [\"System\", \"My\"],\r\n  \"objects\": [\r\n    \"/A Facility/A Unit/A POI/Check Valves\",\r\n    \"/A Facility/A Unit/B POI/Check Valves\"\r\n  ],\r\n  \"documents\": [\"/A folder/A subfolder/A document.doc\"]\r\n}\r\n\n```\n"
      operationId: Task_getTask
      produces:
        - application/json
        - application/xml
      parameters:
        - name: taskId
          in: path
          description: The id string (GUID) for an existing Task.
          required: true
          type: string
      responses:
        '200':
          description: An instance of the taskInfo structure.
          schema:
            $ref: '#/definitions/Task_taskInfo'
      tags:
        - Task
    delete:
      description: "Deletes an existing Task definition.\n\n**Security:** Requires Manage Tasks right. \n\n**SDK API:**  `envianceSdk.tasks.deleteTask(taskId, onsuccess, onerror)`\n\n```\nDELETE /ver2/TaskService.svc/tasks/8b1c7e91-330e-4208-a38c-96872ebe53ba HTTP/1.1\r\n\n```\n"
      operationId: Task_deleteTask
      parameters:
        - name: taskId
          in: path
          description: The id string (GUID) for an existing Task.
          required: true
          type: string
      responses:
        '204':
          description: Task deleted
      tags:
        - Task
  /ver2/TaskService.svc/tasks/{taskId}/occurrences/{dueDate}/{objectIdOrPath}:
    get:
      description: "Gets information about a Task occurrence.\n\n**Security:** Requires Manage Tasks right. \n\n**SDK API:**  `envianceSdk.tasks.getTaskOccurrence(taskId, dueDate, objectIdOrPath, onsuccess, onerror)`\n\n```\nGET /ver2/TaskService.svc/tasks/9ca22677-2670-41a9-bafd-3b2825592863 HTTP/1.1\r\n\r\n//RESPONSE\r\n{\r\n  \"name\": \"Check Valves Monthly\",\r\n  \"description\": \"Perform a spot check every month on the steam valves.\",\r\n  \"dueDate\": \"2012-12-08T09:00:00\",\r\n  \"timeZone\": \"USA Pacific\",\r\n  \"assignor\": \"CGauss\",\r\n  \"assignees\": [{\"userName\": \"LEuler\"}, {\"groupName\": \"Group A\"}],\r\n  \"calendars\": [\"System\", \"My\"],\r\n  \"objects\": [\r\n    \"/A Facility/A Unit/A POI/Check Valves\",\r\n    \"/A Facility/A Unit/B POI/Check Valves\"\r\n  ],\r\n  \"documents\": [\"/A folder/A subfolder/A document.doc\"]\r\n}\r\n\n```\n"
      operationId: Task_getTaskOccurrence
      produces:
        - application/json
        - application/xml
      parameters:
        - name: taskId
          in: path
          description: The id string (GUID) for an existing Task.
          required: true
          type: string
        - name: dueDate
          in: path
          description: The date and time when the Task occurrence is due, in Task time zone.
          required: true
          type: string
          format: date-time
        - name: objectIdOrPath
          in: path
          description: An optional object specifier, as an id string (GUID), or a path string uniquely identifying an object in the Compliance Model to which the Task is associated.
          required: true
          type: string
      responses:
        '200':
          description: An array of taskOccurrenceInfo structures, one for each object to which the Task is associated. When an object id or path is specified, the array contains a single taskOccurrenceInfo for the specified object. Otherwise one taskOccurrenceInfo for each associated object is returned.
          schema:
            $ref: '#/definitions/Task_taskOccurrenceInfo'
      tags:
        - Task
    patch:
      description: "Updates the status of a Task occurrence (on a given date and time). The Task occurrence may also be dismissed.\n\n**Security:** Requires Manage Tasks right. \n\n**SDK API:**  `envianceSdk.tasks.completeTaskOccurrence(taskId, dueDate, objectIdOrPath, taskOccurrenceInfos, onsuccess, onerror)`\n\n```\nPATCH /ver2/TaskService.svc/tasks/9ca22677-2670-41a9-bafd-3b2825592863 HTTP/1.1\r\nContent-Type: application/json; charset=UTF-8\r\n \r\n{\r\n  \"taskInfo\": {\r\n    \"name\": \"Check Valves Monthly\",\r\n    \"description\": \"Perform a spot check every month on the steam valves.\",\r\n    \"dueDate\": \"2012-12-08T09:00:00\",\r\n    \"timeZone\": \"USA Pacific\",\r\n    \"objects\": [\r\n      \"/A Facility/A Unit/A POI/Check Valves\",\r\n      \"/A Facility/A Unit/B POI/Check Valves\",\r\n      \"/A Facility/A Unit/C POI/Check Valves\"\r\n    ]\r\n  }\r\n}\r\n\n```\n"
      operationId: Task_getTasks
      produces:
        - application/json
        - application/xml
      parameters:
        - name: taskId
          in: path
          description: The id string (GUID) for an existing Task.
          required: true
          type: string
        - name: dueDate
          in: path
          description: The date and time when the Task occurrence is due, in Task time zone.
          required: true
          type: string
          format: date-time
        - name: objectIdOrPath
          in: path
          description: An optional object specifier, as an id string (GUID), or a path string uniquely identifying an object in the Compliance Model to which the Task is associated.
          required: true
          type: string
        - name: taskOccurrenceInfos
          in: body
          description: An array of taskOccurenceInfo structures.
          required: true
          schema:
            $ref: '#/definitions/Task_taskOccurrenceInfo'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Task_taskOccurrenceInfo'
      tags:
        - Task
  /ver2/SecurityService.svc/groups:
    post:
      description: |-
        Creates a new user group. 

        **Security:** Requires Manage Users and Groups system right.

        **SDK API:**  `envianceSdk.groups.createGroup(groupInfo, onsuccess, onerror)`
        null
      operationId: Setup_UserGroups_createGroup
      produces:
        - application/json
      parameters:
        - name: groupInfo
          in: body
          description: A groupInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Setup_UserGroups_groupInfo'
      responses:
        '200':
          description: Group created
          schema:
            type: string
      tags:
        - Setup_UserGroups
  /ver2/SecurityService.svc/groups/{groupIdOrName}:
    patch:
      description: |-
        Updates a Group in the System. You cannot update the Administrators group.

        **Security:** Requires Manage Users and Groups system right.

        **SDK API:**  `envianceSdk.groups.updateGroup(groupIdOrName, groupInfo, onsuccess, onerror)`
        null
      operationId: Setup_UserGroups_updateGroup
      produces:
        - application/json
      parameters:
        - name: groupIdOrName
          in: path
          description: Either an id string (GUID), or the name of the Group. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Group. A name string must be URL encoded.
          required: true
          type: string
        - name: groupInfo
          in: body
          description: A GroupInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Setup_UserGroups_groupInfo'
      responses:
        '200':
          description: Group updated
          schema:
            type: string
      tags:
        - Setup_UserGroups
    get:
      description: |-
        Gets information about the specified Group.

        **Security:** Requires Manage Users and Groups system right.

        **SDK API:**  `envianceSdk.groups.getGroup(groupIdOrName, onsuccess, onerror)`
        null
      operationId: Setup_UserGroups_getGroup
      produces:
        - application/json
        - application/xml
      parameters:
        - name: groupIdOrName
          in: path
          description: Either an id string (GUID), or the name of the Group. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Group. A name string must be URL encoded.
          required: true
          type: string
      responses:
        '200':
          description: An instance of groupInfo structure
          schema:
            $ref: '#/definitions/Setup_UserGroups_groupInfo'
      tags:
        - Setup_UserGroups
    delete:
      description: |-
        Deletes a group. *Deletions are permanent*. You cannot delete the Administrators Group.

        **Security:** Requires Manage Users and Groups system right.

        **SDK API:**  `envianceSdk.groups.deleteGroup(groupdNameOrId, onsuccess, onerror)`
        null
      operationId: Setup_UserGroups_deleteGroup
      parameters:
        - name: groupIdOrName
          in: path
          description: Either an id string (GUID), or the name of the Group. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Group. A name string must be URL encoded.
          required: true
          type: string
      responses:
        '204':
          description: Deleted
      tags:
        - Setup_UserGroups
  /ver2/SecurityService.svc/groups/{groupIdOrName}/members:
    put:
      description: |-
        Sets the members of a Group, replacing the current members, if any. You cannot set the members of the Administrators Group.

        **Security:** Requires Manage Users and Groups system right.

        **SDK API:**  `envianceSdk.groups.setGroupMembers(groupIdOrName, members, onsuccess, onerror)`
        null
      operationId: Setup_UserGroups_setGroupMembers
      produces:
        - application/json
      parameters:
        - name: groupIdOrName
          in: path
          description: Either an id string (GUID), or the name of the Group. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Group. A name string must be URL encoded.
          required: true
          type: string
        - name: members
          in: body
          description: An array of id strings (GUIDs) or names of Users. Any string that matches the pattern of a GUID is interpreted as the id string, and not the user name of a User.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: None
      tags:
        - Setup_UserGroups
    patch:
      description: |-
        Adds Users to a Group while maintaining the current members, if any.

        **Security:** Requires Manage Users and Groups system right.

        **SDK API:**  `envianceSdk.groups.addGroupMembers(groupIdOrName, members, onsuccess, onerror)`
        null
      operationId: Setup_UserGroups_addGroupMembers
      produces:
        - application/json
      parameters:
        - name: groupIdOrName
          in: path
          description: Either an id string (GUID), or the name of the Group. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Group. A name string must be URL encoded.
          required: true
          type: string
        - name: members
          in: body
          description: An array of id strings (GUIDs) or names of Users. Any string that matches the pattern of a GUID is interpreted as the id string, and not the user name of a User.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: None
      tags:
        - Setup_UserGroups
    get:
      description: |-
        Gets the members of a Group.

        **Security:** Requires Manage Users and Groups system right.

        **SDK API:**  `envianceSdk.groups.getGroupMember(groupIdOrName,onsuccess, onerror)`
        null
      operationId: Setup_UserGroups_getGroupMembers
      produces:
        - application/json
      parameters:
        - name: groupIdOrName
          in: path
          description: Either an id string (GUID), or the name of the Group. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Group. A name string must be URL encoded.
          required: true
          type: string
      responses:
        '200':
          description: An array containing the id strings (GUIDs) of the Users.
      tags:
        - Setup_UserGroups
  /ver2/SecurityService.svc/groups/{groupIdOrName}/members/Async:
    put:
      description: |-
        Asynchronously sets the members of a Group, replacing the current members, if any. You cannot set the members of the Administrators Group.

        ** Security:** Requires Manage Users and Groups system right.

        ** SDK API:**  `envianceSdk.groups.setGroupMembersAsync(groupIdOrName, members, onsuccess, onerror)`
        null
      operationId: Setup_UserGroups_setGroupMembersAsync
      produces:
        - application/json
      parameters:
        - name: groupIdOrName
          in: path
          description: Either an id string (GUID), or the name of the Group. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Group. A name string must be URL encoded.
          required: true
          type: string
        - name: members
          in: body
          description: An array of id strings (GUIDs) or names of Users. Any string that matches the pattern of a GUID is interpreted as the id string, and not the user name of a User.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The id for the queued command.
          schema:
            type: string
      tags:
        - Setup_UserGroups
    patch:
      description: |-
        Asynchronously adds Users to a Group while maintaining the current members, if any.

        ** Security:** Requires Manage Users and Groups system right.

        ** SDK API:**  `envianceSdk.groups.addGroupMembersAsync(groupIdOrName, members, onsuccess, onerror)`
        null
      operationId: Setup_UserGroups_addGroupMembersAsync
      produces:
        - application/json
      parameters:
        - name: groupIdOrName
          in: path
          description: Either an id string (GUID), or the name of the Group. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Group. A name string must be URL encoded.
          required: true
          type: string
        - name: members
          in: body
          description: An array of id strings (GUIDs) or names of Users. Any string that matches the pattern of a GUID is interpreted as the id string, and not the user name of a User.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The id for the queued command.
          schema:
            type: string
      tags:
        - Setup_UserGroups
  /ver2/SecurityService.svc/groups/{groupIdOrName}/members/{userIdOrName}:
    delete:
      description: |-
        Removes a User from a Group.

        ** Security:** Requires Manage Users and Groups system right.

        ** SDK API:** `envianceSdk.groups.removeGroupMember(groupIdOrName, userIdOrName, onsuccess, onerror)`
        null
      operationId: Setup_UserGroups_removeGroupMember
      produces:
        - application/json
      parameters:
        - name: groupIdOrName
          in: path
          description: Either an id string (GUID), or the name of the Group. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Group. A name string must be URL encoded.
          required: true
          type: string
        - name: userIdOrName
          in: path
          description: Either an id string (GUID), or a user name string uniquely identifying the User.  Any string that matches the pattern of a GUID is interpreted as the id string, and not the username.  A username string must be URL encoded.
          required: true
          type: string
      responses:
        '204':
          description: None
      tags:
        - Setup_UserGroups
  /ver2/SecurityService.svc/groups/{groupIdOrName}/members/{userIdOrName}/Async:
    delete:
      description: |-
        Removes a User from a Group asynchronously.

        **Security:** Requires Manage Users and Groups system right.

        ** SDK API:** `envianceSdk.groups.removeGroupMemberAsync(groupIdOrName, userIdOrName, onsuccess, onerror)`
        null
      operationId: Setup_UserGroups_removeGroupMemberAsync
      produces:
        - application/json
      parameters:
        - name: groupIdOrName
          in: path
          description: Either an id string (GUID), or the name of the Group. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Group. A name string must be URL encoded.
          required: true
          type: string
        - name: userIdOrName
          in: path
          description: Either an id string (GUID), or a user name string uniquely identifying the User.  Any string that matches the pattern of a GUID is interpreted as the id string, and not the username.  A username string must be URL encoded.
          required: true
          type: string
      responses:
        '200':
          description: The id for the queued command.
          schema:
            type: string
      tags:
        - Setup_UserGroups
  /ver2/WorkflowService.svc/workflows:
    post:
      description: "Creates a new instance of the specified Workflow Type, and places it in on the \"Init\" Step. Information about Form Field values and Step Actions may optionally be specified in order to update or take action on the Init Step.\n\n**Security:** Allowed for Users with Manage Workflows right or \"Report\" permission on the Workflow, or User in \"Workflow Managers\" role of WF, or User with \"Manage Workflows\" on any objects associated with the workflow.\nRequired for: Create Workflow\n**SDK API:**  `envianceSdk.workflows.createWorkflow21(workflowInfo, initStepInfo, onsuccess, onerror)`\n\n```\n<div class=\"code\">\r\n<pre>\r\nPOST /ver2/WorkflowService.svc/workflows HTTP/1.1\r\nContent-Type: application/json; charset=UTF-8\r\n \r\n{\r\n  \"workflowInfo\": {\r\n    \"workflowTypeName\": \"EII-Incident\",\r\n    \"name\": \"Incident.000005604\",\r\n    \"uniqueId\": \"2019.09.11.18.61C85A8BC259\",\r\n    \"dueDate\": \"2019-09-19T18:00:00\",\r\n    \"name\": \"test\",\r\n    \"objects\": [\"/Division/Facility\"],\r\n    \"assignedBy\": \"Step Assignor\",\r\n    \"assignedTo\": \"Step Assignee\",\r\n    \"calendars\": [\r\n        \"My\",\r\n        \"Object\"\r\n    ]\r\n  }\r\n  \"initStepInfo\": {\r\n            \"fields\": [\r\n                {\r\n                    \"name\": \"EII-IncidentDate\",\r\n                    \"values\": [\r\n                      \"2019-01-15T00:00:00\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"EII-IncidentTime\",\r\n                    \"values\": [\r\n                      \"2019-01-15T00:46:00\"\r\n                    ]\r\n                },\r\n                {   \r\n                   \"name\": \"EII-IncidentType\",\r\n                    \"values\": [\r\n                      \"Agency Action\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"EII-TechnicalServicesGroup\",\r\n                    \"values\": [\r\n                      \"yes\"\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"EII-TimeOfIncidentCannotBeDetermined\",\r\n                    \"values\": [\r\n                      \"true\"\r\n                    ]\r\n                },\r\n            ],\r\n    }\r\n}\r\n\n```\n"
      operationId: Workflow21_createWorkflow21
      produces:
        - application/json
      parameters:
        - name: workflowInfo
          in: body
          description: Workflow Create body parameters
          required: true
          schema:
            $ref: '#/definitions/Workflow21_workflowCreateInfo'
      responses:
        '201':
          description: The id string (GUID) for the newly created Workflow.
          schema:
            type: string
      tags:
        - Workflow21
  /ver2/WorkflowService.svc/workflows/bulk:
    post:
      description: |-
        Creates a new instance of the specified Workflow Type(s).

        **Security:** Allowed for Users with Manage Workflows right or "Report" permission on the Workflow, or User in "Workflow Managers" role of WF, or User with "Manage Workflows" on any objects associated with the workflow.

        **SDK API:**  `envianceSdk.workflows.createWorkflows21(workflowInfos, onsuccess, onerror)`
        null
      operationId: Workflow21_createWorkflows21
      produces:
        - application/json
      parameters:
        - name: workflowInfos
          in: body
          description: Workflow Create body parameters
          required: true
          schema:
            $ref: '#/definitions/Workflow21_workflowCreateInfos'
      responses:
        '201':
          description: Array of bulk operation results.
          schema:
            type: array
            items:
              $ref: '#/definitions/Workflow21_workflowExecutionResult'
      tags:
        - Workflow21
  /ver2/WorkflowService.svc/workflows/{workflowIdOrUniqueId}:
    patch:
      description: "Updates an existing Workflow.\n\n**Security:** Allowed for Users with Manage Workflows right or \"Report\" permission on the Workflow, or User in \"Workflow Managers\" role of WF, or User with \"Manage Workflows\" on any objects associated with the workflow.\n\n**SDK API:**  `envianceSdk.workflows.updateWorkflow21(workflowIdOrUniqueId, workflowInfo, onsuccess, onerror)`\n\n```\n<div class=\"code\">\r\n<pre>\r\nPATCH /ver2/WorkflowService.svc/workflows/7ef9655e-916b-414f-8c88-5753fa731558 HTTP/1.1\r\nContent-Type: application/json; charset=UTF-8\r\n \r\n{\r\n  \"workflowInfo\": {\r\n    \"dueDate\": \"2012-09-19T18:00:00\",\r\n    \"name\": \"test\",\r\n    \"objects\": [\"/Generation - 1/NE TV\"],\r\n    \"documents\": [\"/Folder/Folder/Doc.txt\"]\r\n  }\r\n}\r\n\n```\n"
      operationId: Workflow21_updateWorkflow21
      produces:
        - application/json
      parameters:
        - name: workflowIdOrUniqueId
          in: path
          description: Either the id string (GUID) of the Workflow, or the unique id of the Workflow. Any string that matches the pattern of a GUID is interpreted as the id string, and not the unique id of the Workflow. The unique id of a Workflow must be URL encoded.
          required: true
          type: string
        - name: workflowInfo
          in: body
          description: A workflowInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Workflow21_workflowInfo'
      responses:
        '204':
          description: The id string (GUID) for the updated Workflow.
          schema:
            type: string
      tags:
        - Workflow21
    get:
      description: "Gets information about the specified Workflow.\n\n**Security:** Allowed for Users with Manage Workflows right or \"Report\" permission on the Workflow, or User in \"Workflow Managers\" role of WF, or User with \"Manage Workflows\" on any objects associated with the workflow.\n\n**SDK API:**  `envianceSdk.workflows.getWorkflow21(workflowIdOrUniqueId, onsuccess, onerror)`\n\n```\n<div class=\"code\">\r\n<pre>\r\nGET /ver2/WorkflowService.svc/workflows/7ef9655e-916b-414f-8c88-5753fa731558 HTTP/1.1\r\n\n```\n"
      operationId: Workflow21_getWorkflow
      produces:
        - application/json
        - application/xml
      parameters:
        - name: workflowIdOrUniqueId
          in: path
          description: Either the id string (GUID) of the Workflow, or the unique id of the Workflow. Any string that matches the pattern of a GUID is interpreted as the id string, and not the unique id of the Workflow. The unique id of a Workflow must be URL encoded.
          required: true
          type: string
      responses:
        '200':
          description: An instance of the workflowInfo structure.
          schema:
            $ref: '#/definitions/Workflow21_workflowInfo'
      tags:
        - Workflow21
  /ver2/WorkflowService.svc/workflows/{workflowIdOrUniqueId}/steps/currentstep:
    patch:
      description: |-
        Updates one or more values in the Form Fields of current Workflow Step. Any Form Fields *not* specified are left un-modified. A Step Action to invoke may also be specified, which will move (transition) the Workflow from the current Step to the destination Step of the Step Action. Using step transitions workflow instance can be ended or reopened. See SDK shortcut methods endWorkflow and reopenWorkflow.

        **Security:** Allowed for Users with Manage Workflows right or "Report" permission on the Workflow, or User in "Workflow Managers" role of WF, or User with "Manage Workflows" on any objects associated with the workflow.

        **SDK API:**  `envianceSdk.workflows.updateWorkflowCurrentStep (workflowIdOrUniqueId, stepInfo, onsuccess, onerror)`

        **SDK API shortcut for end workflow:** `envianceSdk.workflows.endWorkflow (workflowIdOrUniqueId, comment, onsuccess, onerror)`

        **SDK API shortcut for reopen:** `envianceSdk.workflows.reopenWorkflow (workflowIdOrUniqueId, onsuccess, onerror)`
        null
      operationId: Workflow_updateWorkflowCurrentStep
      parameters:
        - name: workflowIdOrUniqueId
          in: path
          description: Either the id string (GUID) of the Workflow, or the unique id of the Workflow. Any string that matches the pattern of a GUID is interpreted as the id string, and not the unique id of the Workflow. The unique id of a Workflow must be URL encoded.
          required: true
          type: string
        - name: stepInfo
          in: body
          description: A WorkflowStepInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Workflow_workflowStepInfo'
      responses:
        '204':
          description: Current Workflow Steup updated.
      tags:
        - Workflow
    get:
      description: |-
        Gets information about current step of specified Workflow.

        **Security:** Allowed for Users with Manage Workflows right or "Report" permission on the Workflow, or User in "Workflow Managers" role of WF, or User with "Manage Workflows" on any objects associated with the workflow.

        **SDK API:**  `envianceSdk.workflows.getWorkflowCurrentStep(workflowIdOrUniqueId, onsuccess, onerror)`
        null
      operationId: Workflow_getWorkflowCurrentStep
      produces:
        - application/json
      parameters:
        - name: workflowIdOrUniqueId
          in: path
          description: Either the id string (GUID) of the Workflow, or the unique id of the Workflow. Any string that matches the pattern of a GUID is interpreted as the id string, and not the unique id of the Workflow. The unique id of a Workflow must be URL encoded.
          required: true
          type: string
      responses:
        '200':
          description: A WorkflowStepInfo structure.
          schema:
            $ref: '#/definitions/Workflow_workflowStepInfo'
      tags:
        - Workflow
  /ver2/WorkflowService.svc/workflows/{workflowIdOrUniqueId}/steps/{stepIdOrName}:
    patch:
      description: "Updates one or more values in the Form Fields of an existing Workflow Step. Any Form Fields *not* specified are left un-modified. A Step Action to invoke may also be specified, which will move (transition) the Workflow from the current Step to the destination Step of the Step Action.\n\n**Security:** Allowed for Users with Manage Workflows right or \"Report\" permission on the Workflow, or User in \"Workflow Managers\" role of WF, or User with \"Manage Workflows\" on any objects associated with the workflow.\n\n**SDK API:** `envianceSdk.workflows.updateWorkflowStep(workflowIdOrUniqueId, stepIdOrName, stepInfo, onsuccess, onerror)`\n\n```\n<div class=\"code\">\r\n<pre>\r\nPATCH /ver2/WorkflowService.svc/workflows/7ef9655e-916b-414f-8c88-5753fa731558 HTTP/1.1\r\nContent-Type: application/json; charset=UTF-8\r\n \r\n{\r\n  \"workflowInfo\": {\r\n    \"dueDate\": \"2012-09-19T18:00:00\",\r\n    \"name\": \"test\",\r\n    \"objects\": [\"/Generation - 1/NE TV\"],\r\n    \"documents\": [\"/Folder/Folder/Doc.txt\"]\r\n  }\r\n}\r\n\n```\n"
      operationId: Workflow_updateWorkflowStep
      produces:
        - application/json
      parameters:
        - name: workflowIdOrUniqueId
          in: path
          description: Either the id string (GUID) of the Workflow, or the unique id of the Workflow. Any string that matches the pattern of a GUID is interpreted as the id string, and not the unique id of the Workflow. The unique id of a Workflow must be URL encoded.
          required: true
          type: string
        - name: stepIdOrName
          in: path
          description: Either the id string (GUID) of the Step, or its name. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Step. In addition to its id or name, the Workflow Step may be identified by the "currentstep" special URL path, in which case the currently active Step of the Workflow is used. The name of a Step must be URL encoded.
          required: true
          type: string
        - name: stepInfo
          in: body
          description: A WorkflowStepInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Workflow_workflowStepInfo'
      responses:
        '204':
          description: The id string (GUID) for the updated Workflow.
          schema:
            type: string
      tags:
        - Workflow
    get:
      description: "Gets information about Workflow Step.\n\n**Security:** Allowed for Users with Manage Workflows right or \"Report\" permission on the Workflow, or User in \"Workflow Managers\" role of WF, or User with \"Manage Workflows\" on any objects associated with the workflow.\n\n**SDK API:**  `envianceSdk.workflows.getWorkflowStep(workflowIdOrUniqueId, stepIdOrName, onsuccess, onerror)`\n\n```\n<div class=\"code\">\r\n<pre>\r\nGET /ver2/WorkflowService.svc/workflows/7ef9655e-916b-414f-8c88-5753fa731558 HTTP/1.1\r\n\n```\n"
      operationId: Workflow_getWorkflowStep
      produces:
        - application/json
        - application/workflowml
      parameters:
        - name: workflowIdOrUniqueId
          in: path
          description: Either the id string (GUID) of the Workflow, or the unique id of the Workflow. Any string that matches the pattern of a GUID is interpreted as the id string, and not the unique id of the Workflow. The unique id of a Workflow must be URL encoded.
          required: true
          type: string
        - name: stepIdOrName
          in: path
          description: Either the id string (GUID) of the Step, or its name. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Step. In addition to its id or name, the Workflow Step may be identified by the "currentstep" special URL path, in which case the currently active Step of the Workflow is used. The name of a Step must be URL encoded.
          required: true
          type: string
      responses:
        '200':
          description: An instance of WorkflowStepInfo structure.
          schema:
            $ref: '#/definitions/Workflow_workflowStepInfo'
      tags:
        - Workflow
  /ver2/WorkflowService.svc/workflows/{workflowIdOrUniqueId}/children:
    post:
      description: |-
        Executes a Workflow Initiator action on the active Step of an existing Workflow, thereby creating a new child Workflow, and places the child on its Init Step. Information about Form Field values and Step Actions may optionally be specified in order to update or take action on the Init Step of the child Workflow.

        **Security:** Allowed for Users with Manage Workflows right or "Report" permission on the Workflow, or User in "Workflow Managers" role of WF, or User with "Manage Workflows" on any objects associated with the workflow.

        **SDK API:**  `envianceSdk.workflows.initiateChildWorkflow(workflowIdOrUniqueId, childWorkflowInitiationInfo, onsuccess, onerror)`
        null
      operationId: Workflow_initiateChildWorkflow
      produces:
        - application/json
      parameters:
        - name: workflowIdOrUniqueId
          in: path
          description: Either the id string (GUID) of the Workflow, or the unique id of the Workflow. Any string that matches the pattern of a GUID is interpreted as the id string, and not the unique id of the Workflow. The unique id of a Workflow must be URL encoded.
          required: true
          type: string
        - name: childWorkflowInitiationInfo
          in: body
          description: A childWorkflowInitiationInfo data structure.
          required: true
          schema:
            $ref: '#/definitions/Workflow_childWorkflowInitiationInfo'
      responses:
        '201':
          description: The id string (GUID) for the newly created child Workflow.
          schema:
            type: string
      tags:
        - Workflow
  /ver2/WorkflowService.svc/workflows/steps/currentsteps:
    post:
      description: |-
        Gets information about Current Steps of the specified Workflow Steps.

        **Security:** Allowed for Users with Manage Workflows right or "Report" permission on the Workflow, or User in "Workflow Managers" role of WF, or User with "Manage Workflows" on any objects associated with the workflow.

        **SDK API:**  `envianceSdk.workflows.getWorkflowCurrentStepBulk(workflowIdsOrUniqueIds, onsuccess, onerror)`
        null
      operationId: Workflow_getWorkflowCurrentStepBulk
      produces:
        - application/json
        - application/xml
      parameters:
        - name: workflowIdsOrUniqueIds
          in: body
          description: Represents array of id string (GUID) of the Workflow, or the unique id of the Workflow.
          required: true
          schema:
            $ref: '#/definitions/Workflow_stringArrayBody'
      responses:
        '200':
          description: An instance of Array of the workflowStepInfo structure.
          schema:
            type: array
            items:
              $ref: '#/definitions/Workflow_workflowStepInfo'
      tags:
        - Workflow
  /ver2/WorkflowService.svc/workflows/steps:
    post:
      description: |-
        Gets information about specified Steps of the specified Workflow Steps.

        **Security:** Allowed for Users with Manage Workflows right or "Report" permission on the Workflow, or User in "Workflow Managers" role of WF, or User with "Manage Workflows" on any objects associated with the workflow.

        **SDK API:**  `envianceSdk.workflows.GetWorkflowStepBulk(workflowStepMaps, onsuccess, onerror)`
        null
      operationId: Workflow_getWorkflowStepBulk
      produces:
        - application/json
        - application/xml
      parameters:
        - name: workflowStepMaps
          in: body
          description: Instance of the workflowStepMapArrayBody.
          required: true
          schema:
            $ref: '#/definitions/Workflow_workflowStepMapArrayBody'
      responses:
        '200':
          description: An instance of Array of the workflowStepInfo structure.
          schema:
            type: array
            items:
              $ref: '#/definitions/Workflow_workflowStepInfo'
      tags:
        - Workflow
  /ver2/WorkflowService.svc/workflowtypes/{workflowTypeIdOrName}/uniqueIds:
    get:
      description: |-
        Generate UniqueIDs for specific workflow type.

        **SDK API:**  `envianceSdk.workflows.generateUniqueIds(workflowTypeIdOrName, count, onsuccess, onerror)`
        null
      operationId: Workflow_generateUniqueIds
      produces:
        - application/json
      parameters:
        - name: workflowTypeIdOrName
          in: path
          description: The id string (GUID) of the Workflow type, or the unique id of the Workflow type. Any string that matches the pattern of a GUID is interpreted as the id string, and not the unique id of the Workflow.
          required: true
          type: string
        - name: count
          in: query
          description: Count of IDs that should be generated
          required: true
          type: integer
          minimum: 1
          maximum: 2000
      responses:
        '200':
          description: list of generated UniqueIDs.
          schema:
            type: array
            items:
              type: string
      tags:
        - Workflow
  /ver2/WorkflowService.svc/workflows/{workflowIdOrName}/steps/{stepIdOrName}/users/{userId}:
    get:
      description: "Gets permissions for specified user(s) in a given workflow instance and step, taking into account Role memberships, as well as Manage Workflows right or permission.\n\n**Security:** Requires Manage Enviance Apps system right.\n\n**SDK API:**  `envianceSdk.workflows.resolvePermissions (workflowIdOrUniqueId, stepIdOrName, userId, onsuccess, onerror)`\n\n```\n<div class=\"code\">\r\n<pre>\r\nGET /ver2/WorkflowService.svc/workflows/7ef9655e-916b-414f-8c88-5753fa731558 HTTP/1.1\r\n\n```\n"
      operationId: workflowPermissions_resolveWorkflowPermissions
      produces:
        - application/json
        - application/xml
      parameters:
        - name: workflowIdOrName
          in: path
          description: The id string (GUID) of the Workflow instance, or the unique id of the Workflow instance. Any string that matches the pattern of a GUID is interpreted as the id string, and not the unique id of the Workflow.
          required: true
          type: string
        - name: stepIdOrName
          in: path
          description: The id string (GUID) or name of the Step. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Step.
          required: true
          type: string
        - name: userId
          in: path
          description: An array of one or more user ids (GUIDs).
          required: true
          type: string
      responses:
        '200':
          description: Set of read/write fields; set of read only fields; available step actions; available workflow initiators; available workflow actions (i.e. assign, schedule, add comment, etc.); Assignee Role
          schema:
            $ref: '#/definitions/workflowPermissions_workflowStepPermissionsInfo'
      tags:
        - workflowPermissions
  /ver2/WorkflowService.svc/workflowtypes/{workflowTypeIdOrName}/guessPermissions:
    post:
      description: |-
        For a given Workflow Type and optional set of compliance objects, this method returns the permissions for all Roles and their  resolved members (users and groups), taking into account Role Overrides. ("What are the users and user groups and what are their permissions in a workflow of this type?")

        **Security:** Requires Manage Enviance Apps system right.

        **SDK API:**  `envianceSdk.workflows.guessPermissions (workflowTypeIdOrName, options, onsuccess, onerror) `
        null
      operationId: workflowPermissions_guessWorkflowPermissions
      produces:
        - application/json
        - application/xml
      parameters:
        - name: workflowTypeIdOrName
          in: path
          description: The id string (GUID) of the Workflow type, or the unique id of the Workflow type. Any string that matches the pattern of a GUID is interpreted as the id string, and not the unique id of the Workflow.
          required: true
          type: string
        - name: options
          in: body
          description: Optional filters
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/workflowPermissions_options'
      responses:
        '200':
          description: Set of read/write fields; set of read only fields; available step actions; available workflow initiators; available workflow actions (i.e. assign, schedule, add comment, etc.); Assignee Role
          schema:
            $ref: '#/definitions/workflowPermissions_workflowStepPermissionsInfo'
      tags:
        - workflowPermissions
  /ver2/WorkflowService.svc/workflowtypes/{workflowTypeIdOrName}/users/{userId}/guessPermissions:
    post:
      description: |-
        For a given Workflow Type and user and optional set of compliance objects, this method returns the permissions for the specified user(s), taking into account all Roles with which the users would be associated.

        **Security:** Requires Manage Enviance Apps system right.

        **SDK API:**  `envianceSdk.workflows.guessPermissionsByUser(workflowTypeIdOrName, userId, options, onsuccess, onerror)`
        null
      operationId: workflowPermissions_guessWorkflowPermissionsByUser
      produces:
        - application/json
        - application/xml
      parameters:
        - name: workflowTypeIdOrName
          in: path
          description: The id string (GUID) of the Workflow type, or the unique id of the Workflow type. Any string that matches the pattern of a GUID is interpreted as the id string, and not the unique id of the Workflow.
          required: true
          type: string
        - name: userId
          in: path
          description: An array of one or more user Ids (GUIDs).
          required: true
          type: string
        - name: options
          in: body
          description: Optional filters
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/workflowPermissions_options'
      responses:
        '200':
          description: Set of read/write fields; set of read only fields; available step actions; available workflow initiators; available workflow actions (i.e. assign, schedule, add comment, etc.); Assignee Role
          schema:
            $ref: '#/definitions/workflowPermissions_workflowStepPermissionsInfo'
      tags:
        - workflowPermissions
  /Ver2/WorkflowRoleService.svc/workflowrole:
    post:
      description: "Create workflow role.\n\n**SDK API:**  `envianceSdk.workflows.createWorkflowRole (workflowRoleInfo, onsuccess, onerror)`\n\n**SDK API:**  `envianceSdk.workflows.createWorkflowRoleAsync (workflowRoleInfo, onsuccess, onerror)`\n\n```\nPOST /workflowrole HTTP/1.1\r\nContent-Type: application/json; charset=UTF-8\r\n\r\n{\r\n  \"workflowRoleInfo\": {\r\n    \"name\": \"string\",\r\n    \"description\": \"string\",\r\n    \"defaultMembers\": {\r\n      \"userIdsOrNames\": [\r\n        \"string\"\r\n      ],\r\n      \"groupIdsOrNames\": [\r\n        \"string\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n\n```\n"
      operationId: Setup_WorkflowRole_createWorkflowRole
      consumes:
        - application/json
      produces:
        - application/text
      parameters:
        - name: workflowRoleInfo
          in: body
          description: Workflow role object
          required: true
          schema:
            $ref: '#/definitions/Setup_WorkflowRole_workflowRoleRequestInfo'
      responses:
        '200':
          description: Successful operation. Returns CommandLog ID
          schema:
            type: string
            format: GUID
        '400':
          description: Invalid input
        '403':
          description: Unauthorized request
      tags:
        - Setup_WorkflowRole
  /Ver2/WorkflowRoleService.svc/workflowrole/{roleId}:
    get:
      description: "Get information about workflow role.\n\n**SDK API:**  `envianceSdk.workflows.getWorkflowRole (roleId, onsuccess, onerror)`\n\n```\nGET /workflowrole/9ca22677-2670-41a9-bafd-3b2825592863 HTTP/1.1\r\n\n```\n"
      operationId: Setup_WorkflowRole_getWorkflowRole
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: roleId
          in: path
          description: ID of workflow role to return
          required: true
          type: string
          format: GUID
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Setup_WorkflowRole_workflowRoleInfo'
        '400':
          description: Invalid input
        '403':
          description: Unauthorized request
      tags:
        - Setup_WorkflowRole
    patch:
      description: |-
        Update workflow role information.

        **SDK API:**  `envianceSdk.workflows.updateWorkflowRole (roleId, workflowRoleInfo, onsuccess, onerror)`

        **SDK API:**  `envianceSdk.workflows.updateWorkflowRoleAsync (roleId, workflowRoleInfo, onsuccess, onerror)`
        null
      operationId: Setup_WorkflowRole_updateWorkflowRole
      consumes:
        - application/json
      produces:
        - application/text
      parameters:
        - name: roleId
          in: path
          description: ID of workflow role to update
          required: true
          type: string
          format: GUID
        - name: workflowRoleInfo
          in: body
          description: Workflow role object
          required: true
          schema:
            $ref: '#/definitions/Setup_WorkflowRole_workflowRoleInfo'
      responses:
        '200':
          description: Successful operation. Returns CommandLog ID
          schema:
            type: string
            format: GUID
        '400':
          description: Invalid input
        '403':
          description: Unauthorized request
      tags:
        - Setup_WorkflowRole
    delete:
      description: "Deletes workflow role. *Deletions are permanent*.\n\n**SDK API:** `envianceSdk.workflows.deleteWorkflowRole (roleId, onsuccess, onerror)`\n\n**SDK API:** `envianceSdk.workflows.deleteWorkflowRoleAsync (roleId, onsuccess, onerror)`\n\n```\nDELETE /workflowrole/9ca22677-2670-41a9-bafd-3b2825592863 HTTP/1.1\r\n\n```\n"
      operationId: Setup_WorkflowRole_deleteWorkflowRole
      consumes:
        - application/json
      produces:
        - application/text
      parameters:
        - name: roleId
          in: path
          description: ID of workflow role to delete
          required: true
          type: string
          format: GUID
      responses:
        '200':
          description: Successful operation. Returns CommandLog ID
          schema:
            type: string
            format: GUID
        '400':
          description: Invalid input
        '403':
          description: Unauthorized request
      tags:
        - Setup_WorkflowRole
  /Ver2/WorkflowRoleService.svc/workflowrole/copy:
    post:
      description: "Create workflow role.\n\n**SDK API:**  `envianceSdk.workflows.copyWorkflowRole (sourceId, newRoleName, onsuccess, onerror)`\n\n**SDK API:**  `envianceSdk.workflows.copyWorkflowRoleAsync (sourceId, newRoleName, onsuccess, onerror)`\n\n```\nPOST /workflowrole/copy HTTP/1.1\r\n\r\n{\r\n  \"sourceId\": \"9ca22677-2670-41a9-bafd-3b2825592863\",\r\n  \"newRoleName\": \"Field Inspectors\"\r\n}\r\n\n```\n"
      operationId: Setup_WorkflowRole_copyWorkflowRole
      consumes:
        - application/json
      produces:
        - application/text
      parameters:
        - in: body
          name: body
          description: Id of the source workflow name
          required: true
          schema:
            $ref: '#/definitions/Setup_WorkflowRole_workflowRoleCopyInfo'
      responses:
        '200':
          description: Successful operation. Returns CommandLog ID
          schema:
            type: string
            format: GUID
        '400':
          description: Invalid input
        '403':
          description: Unauthorized request
      tags:
        - Setup_WorkflowRole
  /ver2/WorkflowTypeService.svc/workflowtype/{typeIdOrName}:
    get:
      description: |-
        Gets information about workflow type.

        **Security:** Allowed for Users with Manage Workflows right or User in Workflow Managers role of WF, or User with Manage Workflows on any objects associated with the workflow.

        **SDK API:** `envianceSdk.workflows.getWorkflowType (typeIdOrName, onsuccess, onerror)`
        null
      operationId: Setup_WorkflowType_GetWorkflowType
      produces:
        - application/json
      parameters:
        - in: path
          name: typeIdOrName
          description: Either an id string (GUID) or a name uniquely identifying the Workflow Type. Any string that matches the pattern of a GUID is interpreted as the id string and not the name of the Workflow Type. A name must be URL encoded.
          required: true
          type: string
      responses:
        '200':
          description: An instance of the workflowTypeInfo structure.
          schema:
            $ref: '#/definitions/Setup_WorkflowType_workflowTypeInfo'
      tags:
        - Setup_WorkflowType
    put:
      description: |-
        Updates Workflow Type.

        **Security:** Allowed for Users with Manage Workflows right or User in Workflow Managers role of WF, or User with Manage Workflows on any objects associated with the workflow.

        **SDK API:** `envianceSdk.workflows.updateWorkflowType (workflowTypeIdOrName, workflowTypeInfo, onsuccess, onerror)`
        null
      operationId: Setup_WorkflowType_updateWorkflowType
      produces:
        - application/json
      parameters:
        - in: path
          name: typeIdOrName
          description: Either an id string (GUID) or a name uniquely identifying the Workflow Type. Any string that matches the pattern of a GUID is interpreted as the id string and not the name of the Workflow Type. A name must be URL encoded.
          required: true
          type: string
        - name: workflowTypeInfo
          in: body
          description: A workflowTypeInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Setup_WorkflowType_workflowTypeInfo'
      responses:
        '200':
          description: workflowTypeIdNameInfo structure.
          schema:
            $ref: '#/definitions/Setup_WorkflowType_workflowTypeIdNameInfo'
      tags:
        - Setup_WorkflowType
    patch:
      description: |-
        Partial Update of the Workflow Type.

        **Security:** Allowed for Users with Manage Workflows right or User in Workflow Managers role of WF, or User with Manage Workflows on any objects associated with the workflow.

        **SDK API:** `envianceSdk.workflows.partialUpdateWorkflowType (workflowTypeIdOrName, workflowTypeInfo, onsuccess, onerror)`
        null
      operationId: Setup_WorkflowType_partialUpdateWorkflowType
      produces:
        - application/json
      parameters:
        - in: path
          name: typeIdOrName
          description: Either an id string (GUID) or a name uniquely identifying the Workflow Type. Any string that matches the pattern of a GUID is interpreted as the id string and not the name of the Workflow Type. A name must be URL encoded.
          required: true
          type: string
        - name: workflowTypeInfo
          in: body
          description: A workflowTypeInfo structure
          schema:
            $ref: '#/definitions/Setup_WorkflowType_workflowTypeInfo'
      responses:
        '200':
          description: workflowTypeIdNameInfo structure.
          schema:
            $ref: '#/definitions/Setup_WorkflowType_workflowTypeIdNameInfo'
      tags:
        - Setup_WorkflowType
    delete:
      description: |-
        Deletes an existing Workflow Type.

        **Security:** Allowed for Users with Manage Workflows right or User in Workflow Managers role of WF, or User with Manage Workflows on any objects associated with the workflow.

        **SDK API:** `envianceSdk.workflows.deleteWorkflowType(typeIdOrName, onsuccess, onerror)`
        null
      operationId: Setup_WorkflowType_DeleteWorkflowType
      parameters:
        - in: path
          name: typeIdOrName
          description: Either an id string (GUID) or a name uniquely identifying the Workflow Type. Any string that matches the pattern of a GUID is interpreted as the id string and not the name of the Workflow Type. A name must be URL encoded.
          required: true
          type: string
      responses:
        '200':
          description: Workflow Type deleted
      tags:
        - Setup_WorkflowType
  /ver2/WorkflowTypeService.svc/workflowtype/{typeIdOrName}/version/{versionNumber}:
    get:
      description: |-
        Gets information about workflow type.

        **Security:** Allowed for Users with Manage Workflows right or User in Workflow Managers role of WF, or User with Manage Workflows on any objects associated with the workflow.

        **SDK API:** `envianceSdk.workflows.getWorkflowTypeVersion (typeIdOrName, versionNumber, onsuccess, onerror)`
        null
      operationId: Setup_WorkflowType_GetWorkflowTypeVersion
      produces:
        - application/json
      parameters:
        - in: path
          name: typeIdOrName
          description: Either an id string (GUID) or a name uniquely identifying the Workflow Type. Any string that matches the pattern of a GUID is interpreted as the id string and not the name of the Workflow Type. A name must be URL encoded.
          required: true
          type: string
        - in: path
          name: versionNumber
          description: version number of the Workflow Type. 0 means the last version.
          required: true
          type: number
      responses:
        '200':
          description: An instance of the workflowTypeInfo structure.
          schema:
            $ref: '#/definitions/Setup_WorkflowType_workflowTypeInfo'
      tags:
        - Setup_WorkflowType
  /ver2/WorkflowTypeService.svc/workflowtype:
    post:
      description: |-
        Create a new Workflow Type

        **Security:** User with permission to Manage Workflows.

        **SDK API:** `envianceSdk.workflows.createWorkflowType (workflowTypeInfo, onsuccess, onerror)`
        null
      operationId: Setup_WorkflowType_createWorkflowType
      produces:
        - application/json
      parameters:
        - name: workflowTypeInfo
          in: body
          description: A WorkflowTypeInfo structure.
          required: true
          schema:
            $ref: '#/definitions/Setup_WorkflowType_workflowTypeInfo'
      responses:
        '200':
          description: workflowTypeIdNameInfo structure.
          schema:
            $ref: '#/definitions/Setup_WorkflowType_workflowTypeIdNameInfo'
      tags:
        - Setup_WorkflowType
    delete:
      description: |-
        Deletes all existing Workflow Types for a set of one or more parameters

        **Security:** Allowed for Users with Manage Workflows right or User in Workflow Managers role of WF, or User with Manage Workflows on any objects associated with the workflow.

        **SDK API:** `envianceSdk.workflows.deleteWorkflowTypeBulk(typeIdOrNames, onsuccess, onerror)`
        null
      operationId: Setup_WorkflowType_DeleteWorkflowTypeBulk
      parameters:
        - name: typeIdOrNames
          in: body
          description: Array of either an id string (GUID) or a name uniquely identifying the Workflow Type. Any string that matches the pattern of a GUID is interpreted as the id string and not the name of the Workflow Type.  A name must be URL encoded.
          required: true
          schema:
            $ref: '#/definitions/Setup_WorkflowType_workflowTypesDeleteBody'
      responses:
        '200':
          description: All specified types was found and deleted
          schema:
            $ref: '#/definitions/Setup_WorkflowType_workflowTypeDeleteResultInfo'
        '202':
          description: workflowTypeDeleteResultInfo structure whith info about Workflow Type deleted
          schema:
            $ref: '#/definitions/Setup_WorkflowType_workflowTypeDeleteResultInfo'
      tags:
        - Setup_WorkflowType
  /ver2/WorkflowTypeService.svc/workflowtype/{typeIdOrName}/info:
    patch:
      description: |-
        Update general properties of the Workflow Type: name, idGenScheme, description, isUsedForConfig

        **Security:** Allowed for Users with Manage Workflows right or User in Workflow Managers role of WF, or User with Manage Workflows on any objects associated with the workflow.

        **SDK API:**  `envianceSdk.workflows.updateWorkflowTypeInfo (typeIdOrName, newName, idGenScheme, description, forAppConfiguration, onsuccess, onerror)`
        null
      operationId: Setup_WorkflowType_updateWorkflowTypeInfo
      produces:
        - application/json
      parameters:
        - in: path
          name: typeIdOrName
          description: Either an id string (GUID) or a name uniquely identifying the Workflow Type. Any string that matches the pattern of a GUID is interpreted as the id string and not the name of the Workflow Type. A name must be URL encoded.
          required: true
          type: string
        - name: workflowTypeGeneralInfo
          in: body
          description: Use 'null' values to skip property
          schema:
            $ref: '#/definitions/Setup_WorkflowType_workflowTypeGeneralBody'
      responses:
        '200':
          description: Ok.
      tags:
        - Setup_WorkflowType
  /ver2/WorkflowTypeService.svc/workflowtype/{typeIdOrName}/copy:
    post:
      description: |-
        Copy specified Workflow Type.

        **Security:** Allowed for Users with Manage Workflows right or User in Workflow Managers role of WF, or User with Manage Workflows on any objects associated with the workflow.

        **SDK API:**  `envianceSdk.workflows.copyWorkflowType (workflowTypeIdOrName, name, idGenScheme, onsuccess, onerror)`
        null
      operationId: Setup_WorkflowType_copyWorkflowType
      produces:
        - application/json
      parameters:
        - in: path
          name: typeIdOrName
          description: Either an id string (GUID) or a name uniquely identifying the Workflow Type. Any string that matches the pattern of a GUID is interpreted as the id string and not the name of the Workflow Type. A name must be URL encoded.
          required: true
          type: string
        - name: workflowTypeCopyInfo
          in: body
          description: Anonymous wrapper for body parameters
          schema:
            $ref: '#/definitions/Setup_WorkflowType_workflowTypeCopyBody'
      responses:
        '200':
          description: workflowTypeIdNameInfo structure.
          schema:
            $ref: '#/definitions/Setup_WorkflowType_workflowTypeIdNameInfo'
      tags:
        - Setup_WorkflowType
definitions:
  Authenticate_authenticateInfo:
    description: Authenticate info.
    properties:
      username:
        description: The username string.
        type: string
      password:
        description: The password string.
        type: string
  Authenticate_authenticateByCertInfo:
    description: Authenticate by Cert info
    properties:
      encryptedUserName:
        description: The encrypted username string.
        type: string
      certUniqueId:
        description: The unique id string for the certification.
        type: string
  Authenticate_sessionInfo:
    description: Represents a User session in the Management System.
    properties:
      id:
        description: The id string (GUID) of the session.
        type: string
      homeSystemId:
        description: The id string of the User Home System.
        type: string
      currentSystemId:
        description: The id string of the User current System.
        type: string
      systems:
        description: A mapping of System ids to System names.
        $ref: '#/definitions/Authenticate_sessionSystem'
      sessionTimeout:
        description: The minutes remaining in the User session.
        type: string
      userTimeZone:
        description: The user Time Zone
        $ref: '#/definitions/Authenticate_timeZone'
      appSettings:
        description: Alication Settings.
        $ref: '#/definitions/Authenticate_appSetting'
  Authenticate_appSetting:
    properties:
      key:
        description: App settings key.
        type: object
  Authenticate_sessionSystem:
    properties:
      default:
        type: string
    required:
      - default
    additionalProperties:
      type: string
  Authenticate_timeZone:
    description: Describes a time zone, including its offsets from UTC.
    properties:
      name:
        description: The name of the time zone.
        type: string
        format: number
      stdOffset:
        description: The offset in minutes from UTC during standard time.
        type: string
        format: number
      dstOffset:
        description: The offset in minutes from UTC during daylight savings time (DST). This property will be identical to "stdOffset" for time zones that do not observe DST.
        type: string
        format: number
      currentOffset:
        description: The current offset in minutes from UTC (which can change upon whether the time zone is currently observing DST or not).
        type: string
        format: number
  Command_commandInfo:
    description: Information about a User-requested asynchronous operation.
    properties:
      id:
        description: The id string (GUID) of the command.
        type: string
      description:
        description: The system description of the command.
        type: string
      issued:
        description: The date and time the command was issued. The value is in the User's time zone.
        type: string
      startedProcessing:
        description: The date and time the command begin processing. The value is in the User's time zone. The value is null if processing has not yet begun.
        type: string
      finishedProcessing:
        description: The date and time the command finished processing. The value is in the User's time zone. The value is null if processing has not yet finished.
        type: string
      status:
        description: 'The status of the command; which will be one of: Waiting, Processing, Succeeded, Failed, Resubmitted.'
        type: string
      objects:
        description: An array of object paths
        type: string
      reports:
        description: An array of Report paths
        type: string
      user:
        description: The user name of the User who submitted the command.
        type: string
      result:
        description: An optional URI pointing to the result of the command.
        type: string
      errorInfo:
        description: An array of JSON object literals with the following properties:error The text of the error description.
        type: string
      details:
        description: An array of JSON object literals describing the error details for each error. The format depends upon the type of data submitted.
        type: string
  ComplianceModel_locationCreateInfo:
    description: CreateCopy body
    properties:
      locationInfo:
        description: A locationInfo structure
        type: object
        items:
          $ref: '#/definitions/ComplianceModel_locationInfo'
      copyFrom:
        description: The full path to an existing Location whose content (child Locations and Requirements) will be copied and used as the content of the newly created Location.
        type: string
  ComplianceModel_locationInfo:
    type: object
    description: Compliance Object definition
    properties:
      id:
        description: 'The id string (GUID) for the object. Ignored for: Create Location, Update Location'
        type: string
      name:
        description: 'Name of the object. Required for: Create Location'
        type: string
      type:
        description: 'The type of object. Supported types are: Division, Facility, Unit, POI. Ignored for: Update Location'
        type: string
      parentPath:
        description: 'The full path for the parent object. When creating an object, in order to place it at the top level of the System Model, you may specify a path value for the root \"/\". Updating the parent path serves to move an existing object to another parent. Required for: Create Location'
        type: string
      parentPathLocalized:
        description: The full path for the parent object in current user culture (read-only)
        type: string
      timeZone:
        description: 'A supported time zone structure. Only the name of the time zone is used when creating Facility objects.Required for: Create Location (when creating a Facility only the name is used). Ignored for: Create Location (when not creating a Facility), Update Location'
        allOf:
          - $ref: '#/definitions/ComplianceModel_timeZone'
      activeDate:
        description: An active date of the Requirement.
        type: string
        format: date-time
      inactiveDate:
        description: An inactive date of the Requirement.
        type: string
        format: date-time
      responsibleUser:
        description: A user name.
        type: string
      fieldTemplate:
        description: An id string (GUID) or name of a Custom Field Template. Any string that matches the pattern of a GUID is interpreted as an id string, and not a name.
        type: string
      fieldValues:
        description: An array of Custom Field values.
        type: array
        items:
          $ref: '#/definitions/ComplianceModel_customFieldValue'
      namelocalized:
        description: An array of localized name values.
        type: array
        items:
          $ref: '#/definitions/ComplianceModel_localizedValue'
      description:
        description: A description of the object.
        type: string
      address:
        description: An instance of the address structure. This property is only used for Facility objects.
        allOf:
          - $ref: '#/definitions/ComplianceModel_addressInfo'
      documents:
        description: An Array of Document paths, specifying zero or more Documents which are or should be attached to the object.
        type: array
        items:
          $ref: '#/definitions/ComplianceModel_docPath'
      geoLocation:
        description: A GeoLocation instance. This property is not used for Division objects.
        allOf:
          - $ref: '#/definitions/ComplianceModel_geoLocation'
      isSensitiveData:
        description: Indicates that this is sensitive data.
        type: boolean
      CorityLink:
        description: Identifier object from GX2.
        type: boolean
      CorityCachedID:
        description: Identifier object from GX2.
        type: integer
  ComplianceModel_addressInfo:
    description: Describes a physical mailing address.
    properties:
      street1:
        description: The street address.
        type: string
      street2:
        description: A second line for the street address.
        type: string
      street3:
        description: A third line for the street address.
        type: string
      city:
        description: The city.
        type: string
      county or region:
        description: An optional county, region or district.
        type: string
      stateOrProvince:
        description: The two-character state or province code.
        type: string
      country:
        description: The two-character country code.
        type: string
      postalCode:
        description: The ten-character zip or postal code.
        type: string
  ComplianceModel_geoLocation:
    description: Describes a location by its geographical coordinates.
    properties:
      latitude:
        description: 'The latitude in degrees and minutes, expressed as a decimal. For example: 32.71 (defaults to North)'
        type: string
        format: number
      longitude:
        description: 'The longitude in degrees and minutes, expressed as a decimal. For example: 117.16 (defaults to West)'
        type: string
        format: number
  ComplianceModel_localizedValue:
    type: object
    description: A set of one or more localized values.
    properties:
      value:
        description: any text that can pass validation of name
        type: string
      culture:
        description: 'language code (like: en-us)'
        type: string
    example:
      application/text: |-
        // Any language code supported by application
        {"value": "Test", "culture": "en-us"}
  ComplianceModel_customFieldValue:
    type: object
    description: A set of one or more values for a Custom Field, identified by name.
    properties:
      name:
        description: The name (NOT caption) of the Custom Field.
        type: string
      values:
        description: An Array with one or more string values, representing the values (one or more) for the Custom Field.  Note that even non-string simple values are encoded as strings for custom fields, and are parsed and validated on the server according to the Custom Field type.
        type: array
        items:
          type: string
          minLength: 1
    example:
      application/text: |-
        // Scalar value.
        {"name": "Aspect", "values": ["Air pollution control"]}
        // Scalar date/time value.
        {"name": "Start Date", "values": ["2012-09-19T20:00"]}
        // Multi-select values.
        {"name": "Type", "values": ["Spill", "Near Miss"]}
        // Linked-list values.
        {"name": "Category", "values": ["Cat1", "Cat1.1", "Cat1.1.1"]}
        // Hyperlink values.
        {"name": "Google", "values": [{ "label": "Google": "url": "http://www.google.com"]} 
  ComplianceModel_timeZone:
    description: Describes a time zone, including its offsets from UTC.
    properties:
      name:
        description: The name of the time zone.
        type: string
        format: number
      stdOffset:
        description: The offset in minutes from UTC during standard time.
        type: string
        format: number
      dstOffset:
        description: The offset in minutes from UTC during daylight savings time (DST). This property will be identical to "stdOffset" for time zones that do not observe DST.
        type: string
        format: number
      currentOffset:
        description: The current offset in minutes from UTC (which can change upon whether the time zone is currently observing DST or not).
        type: string
        format: number
  ComplianceModel_overridesInfo:
    type: object
    description: Role and Policies overrides object.
    properties:
      roleOverrides:
        description: '''Array of pairs of role overrides.'''
        type: array
        items:
          $ref: '#/definitions/ComplianceModel_workflowRoleOverride'
      policiesOverride:
        description: '''Array of pairs of policy overrides'''
        type: array
        items:
          $ref: '#/definitions/ComplianceModel_workflowPoliciesOverride'
  ComplianceModel_workflowRoleOverride:
    type: object
    description: Role with overridden membership.
    properties:
      role:
        description: workflow Role with specified Id or Name. Can be passed by id or name if id is missed for Update or Delete operations.
        allOf:
          - $ref: '#/definitions/ComplianceModel_idNamePair'
      users:
        description: '''Array of pairs of id and/or name of users. Allowed Id only for Update operation, Name should be ignored.'''
        type: array
        items:
          $ref: '#/definitions/ComplianceModel_idNamePair'
      groups:
        description: '''Array of pairs of id and name of groups. Can be passed by id or name if id is missed for Update or operation.'''
        type: array
        items:
          $ref: '#/definitions/ComplianceModel_idNamePair'
  ComplianceModel_workflowPoliciesOverride:
    type: object
    description: workflow Type with overridden policies.
    properties:
      workflowType:
        description: workflow Type with specified Id or Name
        allOf:
          - $ref: '#/definitions/ComplianceModel_idNamePair'
      policies:
        description: '''Array of pairs of id and name of used policies.'''
        type: array
        items:
          $ref: '#/definitions/ComplianceModel_idNamePair'
  ComplianceModel_idNamePair:
    type: object
    description: id and Name Pair.
    properties:
      id:
        description: Id string (GUID)
        type: string
      name:
        description: name
        type: string
  ComplianceModel_docPath:
    type: string
    description: 'The hierarchical path to a document as represented by the system model folder structure, beginning with a single forward slash and with elements separated by a single forward slash &quot;/&quot;. Does not include the container object (Documents) Example: /Folder1/Subfolder1/Sub-subfolder/DocumentName'
  Document_documentCreate:
    description: Creation info for Document
    properties:
      documentInfo:
        description: A documentInfo structure
        type: array
        items:
          $ref: '#/definitions/Document_documentInfo'
      copyFrom:
        description: The full path to an existing Document whose content will be copied and used as the content of the new Document. Specifying this property allows you to copy an existing Document to another location in Document Manager. This property will be ignored if the "content" property of documentInfo has a value.
        type: string
  Document_documentInfo:
    description: Information about a Document in Document Manager. If contentUrl is specified during a call to Create Document or Update Document, then the latest version of the Document will simply be a URL to the content hosted at this location.
    properties:
      id:
        description: The id string (GUID) of the Document. May be empty for Create Document and Update Document
        type: string
      name:
        description: The name of the Document. May be empty or null for Update Document and field will not be modified
        type: string
      mimeType:
        description: The mime type of the Document. If left unspecified when creating or updating a Document the application will assign a mime type according to the file extension.
        type: string
      fileName:
        description: The original file name of the Document. This is only required when the content property is used. It allows the Management System to detect the mime type and use it for the Download Document API. May be empty or null for Update Document and field will not be modified. Required for Create Document, Update Document if content is specified. Ignored for Get Document
        type: string
      description:
        description: The description of the Document.
        type: string
      folder:
        description: The id string (GUID) or full path of the Document Folder in which this Document is placed. Any string that matches the pattern of a GUID is interpreted as the id string, and not the path of the Folder.
        type: string
      content:
        description: The content of the Document, Base64 encoded.
        type: string
      contentUrl:
        description: The url for the Document content. In the case of Documents hosted outside of Document Manager, this url will be the value specified for the Document location.
        type: string
      version:
        description: 'The version number of the Document. Currently, only the latest version is returned. Ignored for: Create Document, Update Document'
        type: integer
      objects:
        description: An optional array of Compliance Model object id strings (GUIDs) or paths, specifying zero or more Objects to which the Document is associated. Any string that matches the pattern of a GUID is interpreted as an id string, and not a path.
        type: string
      tasks:
        description: An optional array of Task id strings (GUIDs), specifying zero or more Tasks to which the Document is associated.
        type: string
      workflows:
        description: An optional array of Workflow id strings (GUIDs) or unique ids, specifying zero or more Workflows to which the Document is associated. Any string that matches the pattern of a GUID is interpreted as an id string, and not a unique id.
        type: string
  Document_documentFolderInfo:
    description: Information about a Folder in Document Manager.
    properties:
      id:
        description: 'The id string (GUID) of the Folder. Ignored for: Create Document Folder, Update Document Folder'
        type: string
      name:
        description: The name of the Folder.
        type: string
      description:
        description: The description of the Folder.
        type: string
      parentFolderIdOrPath:
        description: The id string (GUID) or full path of the Document Folder in which this Folder is placed. Any string that matches the pattern of a GUID is interpreted as the id string, and not the path of the parent Folder. The path of a Folder should be URL encoded.
        type: string
      copyFrom:
        description: The full path to an existing Document whose content will be copied and used as the content of the new Document. Specifying this property allows you to copy an existing Document to another location in Document Manager. This property will be ignored if the "content" property of documentInfo has a value.
        type: string
  Document21_documentCreate:
    description: Creation info for Document
    properties:
      documentInfo:
        description: A documentInfo structure
        type: array
        items:
          $ref: '#/definitions/Document21_documentInfo'
      copyFrom:
        description: The full path to an existing Document whose content will be copied and used as the content of the new Document. Specifying this property allows you to copy an existing Document to another location in Document Manager. This property will be ignored if the "content" property of documentInfo has a value.
        type: string
  Document21_documentInfo:
    description: Information about a Document in Document Manager. If contentUrl is specified during a call to Create Document or Update Document, then the latest version of the Document will simply be a URL to the content hosted at this location.
    properties:
      id:
        description: The id string (GUID) of the Document. May be empty for Create Document and Update Document
        type: string
      name:
        description: The name of the Document. May be empty or null for Update Document and field will not be modified
        type: string
      mimeType:
        description: The mime type of the Document. If left unspecified when creating or updating a Document the application will assign a mime type according to the file extension.
        type: string
      fileName:
        description: The original file name of the Document. This is only required when the content property is used. It allows the Management System to detect the mime type and use it for the Download Document API. May be empty or null for Update Document and field will not be modified. Required for Create Document, Update Document if content is specified. Ignored for Get Document
        type: string
      description:
        description: The description of the Document.
        type: string
      folder:
        description: The id string (GUID) or full path of the Document Folder in which this Document is placed. Any string that matches the pattern of a GUID is interpreted as the id string, and not the path of the Folder.
        type: string
      content:
        description: The content of the Document, Base64 encoded.
        type: string
      contentUrl:
        description: The url for the Document content. In the case of Documents hosted outside of Document Manager, this url will be the value specified for the Document location.
        type: string
      version:
        description: 'The version number of the Document. Currently, only the latest version is returned. Ignored for: Create Document, Update Document'
        type: integer
      objects:
        description: An optional array of Compliance Model object id strings (GUIDs) or paths, specifying zero or more Objects to which the Document is associated. Any string that matches the pattern of a GUID is interpreted as an id string, and not a path.
        type: string
      tasks:
        description: An optional array of Task id strings (GUIDs), specifying zero or more Tasks to which the Document is associated.
        type: string
      workflows:
        description: An optional array of objects Workflow id strings (GUIDs) and CustomField id strings (GUIDs).
        type: array
        items:
          $ref: '#/definitions/Document21_workflowsInfo'
  Document21_workflowsInfo:
    description: description.
    properties:
      workflowIdOrUniqueId:
        description: The id string (GUID) of the Workflow.
        type: string
      customFieldIdOrName:
        description: The id string (GUID) of the CustomField.
        type: string
  Document21_documentFolderInfo:
    description: Information about a Folder in Document Manager.
    properties:
      id:
        description: 'The id string (GUID) of the Folder. Ignored for: Create Document Folder, Update Document Folder'
        type: string
      name:
        description: The name of the Folder.
        type: string
      description:
        description: The description of the Folder.
        type: string
      parentFolderIdOrPath:
        description: The id string (GUID) or full path of the Document Folder in which this Folder is placed. Any string that matches the pattern of a GUID is interpreted as the id string, and not the path of the parent Folder. The path of a Folder should be URL encoded.
        type: string
      copyFrom:
        description: The full path to an existing Document whose content will be copied and used as the content of the new Document. Specifying this property allows you to copy an existing Document to another location in Document Manager. This property will be ignored if the "content" property of documentInfo has a value.
        type: string
  Setup_EnvianceApp_packageCreateInfo:
    description: Create Copy Package Item info
    properties:
      packageCreateInfo:
        description: A packageInfo structure
        type: array
        items:
          $ref: '#/definitions/Setup_EnvianceApp_packageInfo'
      copyFrom:
        description: The name of an existing Enviance App whose content is to be copied and used as the content of the newly created App.
        type: string
  Setup_EnvianceApp_packageInfoResponse:
    description: Response of GET operation
    enum:
      - type: string
        format: binary
      - $ref: '#/definitions/Setup_EnvianceApp_packageInfo'
  Setup_EnvianceApp_packageInfo:
    description: The properties and metadata for an Enviance App (Package).
    properties:
      id:
        description: 'The id string (GUID) for the Enviance App. Ignored for: Create Enviance App, Update Enviance App'
        type: string
      name:
        description: 'The name of the Enviance App. Required for: Create Enviance App'
        type: string
      description:
        description: The description of the Enviance App.
        type: string
      content:
        description: The content of the Package in a zip file, Base64 encoded.
        type: string
      displayPage:
        description: The path, relative to the root of the Enviance App, to an Item which can serve as default page to be displayed when loading the App. This should be an HTML page.
        type: string
      iconSrc:
        description: The path, relative to the root of the Enviance App, to an Item which can serve as the icon for the Enviance App, typically an image file.
        type: string
      isLocked:
        description: A Boolean flag indicating whether or not the Enviance App is locked.
        type: boolean
      created:
        description: 'The date and time when the Enviance App was first created. Ignored for: Create Enviance App, Update Enviance App'
        type: string
      createdBy:
        description: 'The User name of the User who first created the Enviance App. Ignored for: Create Enviance App, Update Enviance App'
        type: string
      lastModified:
        description: 'The date and time when the Enviance App was last modified. Ignored for: Create Enviance App, Update Enviance App'
        type: string
        format: date-time
  Setup_EnvianceApp_packageItemCreateInfo:
    description: Create Copy Package Item info
    properties:
      packageItemInfo:
        description: A packageItemInfo structure
        type: array
        items:
          $ref: '#/definitions/Setup_EnvianceApp_packageItemInfo'
      copyFrom:
        description: The path, relative to the root of the App, of an existing Enviance App Item within the same App, whose content is to be copied and used as the content of the newly created App Item.
        type: string
  Setup_EnvianceApp_packageItemInfo:
    description: The properties, metadata and content for an Enviance App (Package) Item.
    properties:
      id:
        description: 'The id string (GUID) for the Item. Ignored for: Create Enviance App Item, Update Enviance App Item'
        type: string
      packageIdOrName:
        description: 'The id string (GUID) or name for the Enviance App to which this Item belongs. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name. Ignored for: Create Enviance App Item, Update Enviance App Item'
        type: string
      path:
        description: The path to this Item, relative to the root of the Enviance App.
        type: string
      type:
        description: 'The Type of the Item. See Enviance App Items for a list of valid Types. Ignored for: Create Enviance App Item, Update Enviance App Item'
        type: string
      content:
        description: The content of the Item, Base64 encoded.
        type: string
  Integration_EQL_eqlTable:
    description: EQL result table
    properties:
      columns:
        description: An array of column descriptions, including name, data type, and maximum size.
        type: array
        items:
          type: string
      rows:
        description: An array of value arrays, in which the ordinal entries in the array correspond with the columns in the columns array.
        type: array
        items:
          type: string
  Integration_EQL_eqlDataViewInfo:
    type: object
    description: Data view info
    properties:
      title:
        description: Title of data view
        type: string
      eqlname:
        description: Name of data view
        type: string
      eql:
        description: The EQL (string) to save. The EQL must be URL encoded.
        type: string
      description:
        description: description
        type: string
      metadata:
        description: metadata info
        type: string
  Integration_EQL_eqlDataViewFullInfo:
    type: object
    description: Data view info.
    properties:
      id:
        description: The id string (GUID) for the DataView.
        type: string
      title:
        description: Title of data view
        type: string
      eqlname:
        description: Name of data view
        type: string
      eql:
        description: The EQL (string) to save. The EQL must be URL encoded.
        type: string
      description:
        description: Description
        type: string
      metadata:
        description: Metadata info
        type: string
      columns:
        description: List of saved columns
        type: array
        items:
          $ref: '#/definitions/Integration_EQL_columnInfo'
  Integration_EQL_columnInfo:
    type: object
    description: Column info
    properties:
      name:
        description: Name of column
        type: string
      size:
        description: Column size
        type: integer
      type:
        description: Column type
        type: string
  Integration_EQL_eqlExecutionInfo:
    type: object
    description: Eql Execution info
    properties:
      eql:
        description: The EQL (string) to save. The EQL must be URL encoded.
        type: string
      page:
        description: The page number within the entire result set to return. Optional.
        type: integer
      pagesize:
        description: The number of records for each page. Maximum page size is 1000. Optional.
        type: integer
      format:
        description: format for result. Optional.
        type: string
        enum:
          - Json
          - Xml
          - Csv
          - Xls
          - Xlsx
          - Xlsm
      filename:
        description: Filename for saving result. Optional.
        type: string
      cachecontrol:
        description: Http Header parameter "Cache-Control". Optional.
        type: string
      excelTemplateIdOrPath:
        description: Either an id string (GUID), or a path string uniquely identifying the document where uploaded Excel Template which will be applied to eql query result. Optional.
        type: string
      excelSheetNames:
        description: An Array of excel sheet names, which will be applied for all eql results. Optional.
        type: string
      excelHeaderCells:
        description: Structure for specifying additional header lines in the resulting Excel file.
        type: array
        items:
          $ref: '#/definitions/Integration_EQL_eqlReportCell'
      additionalSheets:
        description: Additional sheet tabs
        type: array
        items:
          $ref: '#/definitions/Integration_EQL_eqlReportSheet'
  Integration_EQL_eqlReportSheet:
    type: object
    description: Structure for additional sheet tabs
    properties:
      name:
        description: Tab name
        type: string
      cells:
        description: Structure for specifying cells on additional tab
        type: array
        items:
          $ref: '#/definitions/Integration_EQL_eqlReportCell'
  Integration_EQL_eqlReportCell:
    type: object
    description: Report cell structure
    properties:
      row:
        description: cell row number
        type: integer
      column:
        description: cell column number
        type: integer
      value:
        description: cell value
        type: string
      type:
        description: allowed cell format type
        type: string
        enum:
          - 'n'
          - s
      style:
        description: cell format style
        type: object
        $ref: '#/definitions/Integration_EQL_eqlReportCellStyle'
  Integration_EQL_eqlReportCellStyle:
    type: object
    description: Cell style structure.
    properties:
      font:
        description: Font style.
        type: object
        $ref: '#/definitions/Integration_EQL_eqlReportCellStyleFont'
      numFmt:
        description: numeric format.
        type: string
      alignment:
        description: Cell style alignment.
        type: object
        $ref: '#/definitions/Integration_EQL_eqlReportCellStyleAlignment'
  Integration_EQL_eqlReportCellStyleFont:
    type: object
    description: Cell style font.
    properties:
      bold:
        description: Sign that cell has a bold font style.
        type: boolean
      sz:
        description: Size of the font.
        type: integer
  Integration_EQL_eqlReportCellStyleAlignment:
    type: object
    description: Cell style alignment.
    properties:
      horizontal:
        description: Cell style horizontal alignment .
        type: string
        enum:
          - left
          - right
  Event_eventInfo:
    description: Represents an Event.
    properties:
      id:
        description: 'The id string (GUID) for the Event. Ignored for: Create Event, Update Event'
        type: string
      name:
        description: Name of the Event.
        type: string
      beginDate:
        description: 'The begin date for the Event. Required for: Create Event. Ignored for: Update Event if the Event is an Automatic Event.'
        type: string
        format: date-time
      endDate:
        description: 'The end date for the Event. Required for: Create Event. Ignored for: Update Event if the Event is an Automatic Event.'
        type: string
        format: date-time
      taskId:
        description: 'The id string for the Task associated with the Event, if there is one. Ignored for: Create Event, Update Event '
        type: string
      state:
        description: One of either "Open" or "Closed".
        type: string
      complianceType:
        description: One of either "Internal" or "Regulatory".
        type: string
      acceptAsDeviation:
        description: A Boolean flag indicating whether or not this Event should be accepted as a compliance deviation.
        type: boolean
      requirementIdOrPath:
        description: 'A Compliance Model object id string (GUID) or path, specifying a Requirement to which the Event is associated. Any string that matches the pattern of a GUID is interpreted as an id string, and not a path. Ignored for: Update Event if the Event is an Automatic Event.'
        type: string
      fields:
        description: An array of CustomFields, representing the Event Field values for the Event.
        type: array
        items:
          $ref: '#/definitions/Event_customFieldValue'
      documents:
        description: An Array of Document paths, specifying zero or more Documents which are or should be attached to the object.
        type: array
        items:
          $ref: '#/definitions/Event_docPath'
  Event_customFieldValue:
    description: A set of one or more values for a Custom Field, identified by name.
    properties:
      name:
        description: The name (NOT caption) of the Custom Field.
        type: string
      values:
        description: An array with one or more string values, representing the values (one or more) for the Custom Field.  Note that even non-string simple values are encoded as strings for custom fields, and are parsed and validated on the server according to the Custom Field type.
        type: string
  Event_docPath:
    type: string
    description: 'The hierarchical path to a document as represented by the system model folder structure, beginning with a single forward slash and with elements separated by a single forward slash &quot;/&quot;. Does not include the container object (Documents) Example: /Folder1/Subfolder1/Sub-subfolder/DocumentName'
  Setup_FormTemplate_FormTemplateRequestInfo:
    type: object
    properties:
      formTemplateInfo:
        $ref: '#/definitions/Setup_FormTemplate_FormTemplateReqInfo'
  Setup_FormTemplate_FormTemplateInfo:
    type: object
    properties:
      id:
        type: string
        format: GUID
      name:
        type: string
        format: string
      description:
        type: string
        format: string
      versionId:
        type: string
        format: GUID
      version:
        type: integer
      versionComment:
        type: string
        format: string
      udfs:
        type: array
        items:
          $ref: '#/definitions/Setup_FormTemplate_Udfs'
  Setup_FormTemplate_FormTemplateReqInfo:
    type: object
    properties:
      name:
        type: string
        format: string
      description:
        type: string
        format: string
      versionId:
        type: string
        format: GUID
      version:
        type: integer
      versionComment:
        type: string
        format: string
      udfs:
        type: array
        items:
          $ref: '#/definitions/Setup_FormTemplate_UdfsReqInfo'
  Setup_FormTemplate_Udfs:
    type: object
    properties:
      id:
        type: string
        format: GUID
      name:
        type: string
        format: string
      type:
        type: string
        format: string
      valueEntryMethod:
        type: string
        format: string
      isSensitiveData:
        type: boolean
      order:
        type: integer
      scripts:
        type: array
        items:
          $ref: '#/definitions/Setup_FormTemplate_Scripts'
      validation:
        type: array
        items:
          $ref: '#/definitions/Setup_FormTemplate_Validation'
  Setup_FormTemplate_UdfsReqInfo:
    type: object
    properties:
      idOrName:
        type: string
      order:
        type: integer
      scripts:
        type: array
        items:
          $ref: '#/definitions/Setup_FormTemplate_ScriptsReqInfo'
      validation:
        type: array
        items:
          $ref: '#/definitions/Setup_FormTemplate_Validation'
  Setup_FormTemplate_Scripts:
    type: object
    properties:
      beginDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
      script:
        type: string
      exceptions:
        type: array
        items:
          $ref: '#/definitions/Setup_FormTemplate_Exceptions'
      udfDependencies:
        type: array
        items:
          $ref: '#/definitions/Setup_FormTemplate_UdfDependencies'
  Setup_FormTemplate_ScriptsReqInfo:
    type: object
    properties:
      beginDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date-time
      script:
        type: string
      exceptions:
        type: array
        items:
          $ref: '#/definitions/Setup_FormTemplate_ExceptionsReqInfo'
      udfDependencies:
        type: array
        items:
          $ref: '#/definitions/Setup_FormTemplate_UdfDependencies'
  Setup_FormTemplate_Exceptions:
    type: object
    properties:
      scriptID:
        type: string
      exceptionType:
        type: string
      value:
        type: number
        format: double
  Setup_FormTemplate_ExceptionsReqInfo:
    type: object
    properties:
      exceptionType:
        type: string
      value:
        type: number
        format: double
  Setup_FormTemplate_UdfDependencies:
    type: object
    properties:
      udfID:
        type: string
  Setup_FormTemplate_Validation:
    type: object
    properties:
      regEx:
        type: string
      min:
        type: string
      max:
        type: string
      length:
        type: number
      requiredValidationScope:
        type: string
      lengthValidationScope:
        type: string
      rangeValidationScope:
        type: string
      regExValidationScope:
        type: string
  Setup_FormTemplate_FormTemplateCopyInfo:
    type: object
    description: Create/Copy Form Template body
    properties:
      sourceTemplateIdOrName:
        type: string
      newTemplateName:
        description: Name of the form template name
        type: string
  Setup_FormTemplate_FormTemplateVersions:
    type: object
    properties:
      id:
        type: string
        format: GUID
      name:
        type: string
      description:
        type: string
      templateVersions:
        type: array
        items:
          $ref: '#/definitions/Setup_FormTemplate_TemplateVersions'
  Setup_FormTemplate_TemplateVersions:
    type: object
    properties:
      id:
        type: string
        format: GUID
      templateID:
        type: string
        format: GUID
      version:
        type: integer
      comment:
        type: string
      created:
        type: string
        format: date-time
      isCurrent:
        type: boolean
      refCount:
        type: integer
  Messages_messageInfo:
    description: The properties and content of an Management System message.
    properties:
      id:
        description: 'The id string (GUID) for the message. Ignored for: Create Message '
        type: string
      recipientIdOrUsername:
        description: 'The id string (GUID) or username for the User to whom this message was delivered. Any string that matches the pattern of a GUID is interpreted as the id string, and not the username. Required for: Create Message'
        type: string
      sentByIdOrUsername:
        description: 'The id string (GUID) or username for the User who sent the message. Any string that matches the pattern of a GUID is interpreted as the id string, and not the username. Required for: Create Message'
        type: string
      sentOn:
        description: The date and time the message was sent.
        type: string
        format: date-time
      subject:
        description: The subject of the message.
        type: string
      body:
        description: The main text or body of the message.
        type: string
      type:
        description: 'The type of message. For messages created with the Create Message API, this will always be *EmailNotification*. Other types can be generated from the Management System automatically. Ignored for: Create Message'
        type: string
      archived:
        description: 'The archival status of the message. The recipient may mark the message as archived. Ignored for: Create Message'
        type: string
      read:
        description: 'The read status of the message. Ignored for: Create Message'
        type: string
      sendByEmail:
        description: 'A flag to indicate whether or not the message should be sent to the user email (in addition to the Enviance Inbox). Default is false. Ignored for: Get Message'
        type: boolean
  NonNumericData_enterNonNumericDataPointInfo:
    description: Structure for entering NonNumericDataPointInfo datapoint array with optional collector field.
    properties:
      nonNumericDataPoints:
        description: An array of NonNumericDataPointInfo instances.
        type: array
        items:
          $ref: '#/definitions/NonNumericData_nonNumericDataPointInfo'
      collector:
        description: |
          Optional parameter. When collector is specified, then all empty NonNumericDataPointInfo.collector fields will be populated with this default value.
        type: string
  NonNumericData_nonNumericDataPointInfo:
    description: A non-numeric datapoint description for a single Non-Numeric Requirement, tied to a single date and time.
    properties:
      requirementIdOrPath:
        description: The id or path of the Non-Numeric Requirement. Any string that matches the pattern of a GUID is interpreted as the id string, and not the path.
        type: string
      completeDate:
        description: A date and time value.
        type: string
        format: date-time
      beginDate:
        description: Begin date and time value.
        type: string
        format: date-time
      endDate:
        description: End date and time value.
        type: string
        format: date-time
      collector:
        description: Id or name of Collector
        type: string
      comments:
        description: Comment string.
        type: string
      comply:
        description: 'Comply string. Valid values: "Yes", "YesWithComments", "NA", "NotDetermined"'
        type: string
  NonNumericData_deleteNonNumericDataInfo:
    description: A non-numeric datapoint delete info
    properties:
      requirementIdOrPath:
        description: The id or path of the Non-Numeric Requirement. Any string that matches the pattern of a GUID is interpreted as the id string, and not the path.
        type: string
      nonNumericDataPoints:
        description: An array of Non-Numeric Datapoint Ids.
        type: string
  NumericData_numericDataPointInfo:
    description: A numeric measurement for a single Parameter, tied to a single date and time.
    properties:
      parameterIdOrTag:
        description: The id or unique tag of the Parameter. Any string that matches the pattern of a GUID is interpreted as the id string, and not the tag.
        type: string
      completeDate:
        description: A date and time value.
        type: string
        format: date-time
      value:
        description: A floating point numeric value. Both standard and scientific notation are valid formats.
        type: number
        format: float
      qualityData:
        description: An optional array of CustomFieldValue structures. Only small text, numeric, and Boolean data can be specified for quality data, and submitting data for any other type of Custom Field will result in an error.
        type: array
        items:
          $ref: '#/definitions/NumericData_customFieldValue'
      collector:
        description: Id or name of Collector
        type: string
  NumericData_numericDataRangeInfo:
    description: A time range of measurements for a single Parameter.
    properties:
      parameterIdOrTag:
        description: The id or unique tag of the Parameter. Any string that matches the pattern of a GUID is interpreted as the id string, and not the tag.
        type: string
      beginDate:
        description: A date and time value. This is the beginning of the date range in which all existing Data Points for the Parameter will be deleted.
        type: string
        format: date-time
      endDate:
        description: A date and time value. This is the end of the date range in which all existing Data Points for the Parameter will be deleted.
        type: string
        format: date-time
  NumericData_customFieldValue:
    description: A set of one or more values for a Custom Field, identified by name.  Multi-select Custom Fields are represented as an array with multiple string values, one for each selected option. Linked List Custom Fields are represented as an array with multiple string values, where index n of the array holds the chosen value for level n+1 of the linked list. For example, the values array ["One", "Two", "Three"] for a linked list will map to the item "One" chosen in level one, "Two" in two, etc. Hyperlink Fields are represented as an array with a single UrlItem.
    properties:
      name:
        description: The name (not caption) of the Custom Field.
        type: string
      values:
        description: An array with one or more string values, representing the values (one or more) for the Custom Field.  Note that even non-string simple values are encoded as strings for custom fields, and are parsed and validated on the server according to the Custom Field type.
        type: string
  NumericData_rangeParamStart:
    description: Describes options needed to calculate start date. If calculation is not needed, use relativity=Absolute and absoluteDate field.
    properties:
      relativity:
        description: Calculation type - Absolute or relative (Current, Previous, Following) to current date
        type: string
        enum:
          - Current
          - Previous
          - Following
          - Absolute
      absoluteDate:
        description: Used when relativity = Absolute. Ignored in other cases.
        type: string
      periodType:
        description: Used when relativity = Current, Previous, Following. Calendar prefix means shift to start of that period, i.e. "Previous Calendar Year" means "start of previous year", "Previous Year" means "previous year starting from current date". "Current" period allows only Calendar types.
        type: string
        enum:
          - Calendar Day
          - Calendar Month
          - Calendar Quarter
          - Calendar Year
          - Day
          - Weeks
          - Month
          - Quarters
          - Years
      periodCount:
        type: number
        description: Used when relativity = Previous, Following. Default value = 1. Specifies count of periodType, such as 2 Following Years.
  NumericData_rangeParamEnd:
    description: Describes options needed to calculate end date. If calculation is not needed, use relativity=Absolute and absoluteDate field.
    properties:
      relativity:
        description: Calculation type - Absolute, Current (relative to current date), AfterStart (relative to start date)
        type: string
        enum:
          - Current
          - AfterStart
          - Absolute
      absoluteDate:
        description: Used when relativity = Absolute, ignored in other case
        type: string
      periodType:
        description: Used when relativity = Current, AfterStart. Calendar prefix means shift to end of that period, i.e. "Calendar Year After Start" means "end of the same calendar year as start date", "Previous Year" means "year previous to current date". "Current" period allows only Calendar types.
        type: string
        enum:
          - Calendar Day
          - Calendar Month
          - Calendar Quarter
          - Calendar Year
          - Day
          - Weeks
          - Month
          - Quarters
          - Years
      periodCount:
        type: number
        description: Used when relativity = AfterStart. Default value = 1. Specifies count of periodType, such as 2 Years AfterStart.
  NumericData_downloadExcelDataOptions:
    properties:
      start:
        description: Date range start
        $ref: '#/definitions/NumericData_rangeParamStart'
      end:
        description: Date range end
        $ref: '#/definitions/NumericData_rangeParamEnd'
      intervalType:
        description: Interval that will be used to split date range, starting from begin date. TimeBased suffix indicates strict output intervals to be compatible with TimeBased calc (HourlyTimeBased starts from each hour start, YearlyTimeBased starts on first day of year, etc.).
        type: string
        enum:
          - Minutes
          - Hourly
          - HourlyTimeBased
          - Daily
          - DailyTimeBased
          - Weekly
          - WeeklyTimeBased
          - Monthly
          - MonthlyTimeBased
          - Quarterly
          - QuarterlyTimeBased
          - Yearly
          - YearlyTimeBased
      factor:
        description: ''
        type: number
        format: float
      limit:
        description: ''
        type: number
        format: float
      completeDates:
        description: List of ISO dates, used instead of start and end.
        type: string
      containerIdOrPath:
        description: Optional parent of all requirements.
        type: string
      parameterIdsOrTags:
        description: List of requirements
        type: string
      parameterWildcard:
        description: Filter for requirements List
        type: string
      includeAllChildren:
        description: Flag, allows include all children of containerIdOrPath
        type: string
      useFullPath:
        description: Document will contain full path of objects
        type: string
  NumericData_calc_RangeParamStart:
    description: Describes options needed to calculate start date. If calculation is not needed, use relativity=Absolute and absoluteDate field.
    properties:
      relativity:
        description: Calculation type - Absolute or relative to current date (Current, Previous, Following)
        type: string
        enum:
          - Current
          - Previous
          - Following
          - Absolute
      absoluteDate:
        description: Used when relativity = Absolute. Ignored in other cases
        type: string
      periodType:
        description: Used when relativity = Current, Previous, Following. Calendar prefix means shift to start of that period, i.e. "Previous Calendar Year" means "start of previous year", "Previous Year" means "previous year starting from current date". "Current" period allows only Calendar types.
        type: string
        enum:
          - Calendar Day
          - Calendar Month
          - Calendar Quarter
          - Calendar Year
          - Day
          - Weeks
          - Month
          - Quarters
          - Years
      periodCount:
        type: number
        description: 'Used when relativity = Previous, Following. Default value = 1. Specifies count of periodType, such as 2 Following Years. '
  NumericData_calc_RangeParamEnd:
    description: Describes options needed to calculate end date. If calculation is not needed, use relativity=Absolute and absoluteDate field.
    properties:
      relativity:
        description: Calculation type - Absolute, Current (relative to current date), AfterStart (relative to start date)
        type: string
        enum:
          - Current
          - AfterStart
          - Absolute
      absoluteDate:
        description: Used when relativity = Absolute. Ignored in other cases
        type: string
      periodType:
        description: Used when relativity = Current, AfterStart. Calendar prefix means shift to end of that period, i.e. "Calendar Year After Start" means "end of the same calendar year as start date", "Previous Year" means "year previous to current date". "Current" period allows only Calendar types.
        type: string
        enum:
          - Calendar Day
          - Calendar Month
          - Calendar Quarter
          - Calendar Year
          - Day
          - Weeks
          - Month
          - Quarters
          - Years
      periodCount:
        type: number
        description: Used when relativity = AfterStart. Default value = 1. Specifies count of periodType, such as 2 Years AfterStart.
  NumericData_calc_RangeOptions:
    properties:
      start:
        description: Start date range options.
        $ref: '#/definitions/NumericData_calc_RangeParamStart'
      end:
        description: End date range options.
        $ref: '#/definitions/NumericData_calc_RangeParamEnd'
  NumericData_calc_RangeResult:
    description: Calculated start and end dates
    properties:
      start:
        description: Calculated start date in ISO format.
        type: string
      end:
        description: Calculated end date in ISO format.
        type: string
  NumericData_calc_PeriodOptions:
    properties:
      start:
        description: Date range start
        $ref: '#/definitions/NumericData_calc_RangeParamStart'
      end:
        description: Date range end
        $ref: '#/definitions/NumericData_calc_RangeParamEnd'
      intervalType:
        description: Interval that will be used to split date range, starting from begin date. TimeBased suffix indicates strict output intervals to be compatible with TimeBased calc (HourlyTimeBased starts from each hour start, YearlyTimeBased starts on first date of year, etc.).
        type: string
        enum:
          - Minutes
          - Hourly
          - HourlyTimeBased
          - Daily
          - DailyTimeBased
          - Weekly
          - WeeklyTimeBased
          - Monthly
          - MonthlyTimeBased
          - Quarterly
          - QuarterlyTimeBased
          - Yearly
          - YearlyTimeBased
      factor:
        description: ''
        type: number
        format: float
      limit:
        description: ''
        type: number
        format: float
      timezones:
        description: Optional. Does not change an output, just marks those periods that do not exist in given timezones.
        type: number
  NumericData_calc_RangePeriod:
    properties:
      beginDate:
        description: Date in ISO format.
        type: string
      endDate:
        description: Date in ISO format.
        type: string
      saveDate:
        description: Date in ISO format.
        type: string
      dontExistInTimeZone:
        description: Optional. Shows if current period does not exist for a timezone.
        type: array
        items:
          type: number
  NumericData_calc_PeriodResults:
    type: array
    items:
      $ref: '#/definitions/NumericData_calc_RangePeriod'
  Reports_reportExecutionInfo:
    required:
      - format
      - reportIdOrPath
    type: object
    description: If no filter criteria are specified (values for "from", "to", or "parameters"), the Report will be executed with its default filter criteria (as it has been configured in the Management System), as opposed to without any filter criteria at all. However, if any filter value is specified, then the default criteria will not be used. All parameters are ignored for Reports that do not support them.
    properties:
      reportIdOrPath:
        description: The id string (GUID) or path of the Report. Any string that matches the pattern of a GUID is interpreted as the id string, and not the path. A path string should be URL encoded.
        type: string
      from:
        description: The optional date and time that will be used as the start of the report date range filtering. The Time Zone used for this value, and the field to which it applies, depends upon the Report being executed.
        type: string
        format: date-time
      to:
        description: The optional date and time that will be used as the end of the report date range filtering. The Time Zone used for this value, and the field to which it applies, depends upon the Report being executed.
        type: string
        format: date-time
      format:
        description: Report output format.
        type: string
        enum:
          - HTML
          - Excel
          - Excel Template
      parameters:
        description: A dictionary of arbitrary JSON values that will be matched to available runtime Report parameters, if any.
        type: array
        items:
          $ref: '#/definitions/Reports_reportRuntimeParameters'
  Reports_reportRuntimeParameters:
    type: object
    properties:
      objects:
        description: An optional array of Compliance Model object id strings (GUIDs) or paths, specifying zero or more Objects to use for Location filtering during Report execution. Any string that matches the pattern of a GUID is interpreted as an id string, and not a path. Values specified here are used even if the Report does not have the option to "Include Object selector on Run Report page" enabled.
        type: string
      filterBy:
        description: Used for Workflow Reports only. The valid values are "due date" and "creation date".
        type: string
  Integration_ScimIdentity_user:
    type: object
    description: Represents a User definition. Used for all SCIM user operations.
    properties:
      schemas:
        description: SCIM version specific schema as well as any schema extensions. Enviance currently supports SCIM 1.1 (i.e. urn:scim:schemas:core:1.0) and schema extension urn:scim:schemas:enviance:user
        type: array
        items:
          type: string
      id:
        description: Identifier (Guid) of a user.
        type: string
      externalId:
        description: External identifier that is usually similar to username.
        type: string
      meta:
        description: Metadata for a user
        type: object
        properties:
          created:
            type: string
            description: User resource created date.
          lastModified:
            type: string
            description: User resource last updated date.
          location:
            type: string
            description: User resource location.
          version:
            type: string
            description: User resource version.
          attributes:
            type: string
            description: The names of the attributes to remove from the Resource during a PATCH operation.
      userName:
        description: Unique name of the user, typically used by the user to directly authenticate to Enviance system
        type: string
      password:
        description: The User's clear text password. This attribute is intended to be used as a means to specify an initial password when creating a new User or to reset an existing User's password
        type: string
      name:
        description: The components of the user's real name.
        type: object
        properties:
          givenName:
            description: The first/given name of the user.
            type: string
          familyName:
            description: The last/family name of the user.
            type: string
          formatted:
            description: The formatted name (E.g. Scim User) of the user.
            type: string
      title:
        description: Title for the User.
        type: string
      displayname:
        description: Display name of a user in Enviance syatem.
        type: string
      emails:
        description: An active date of the Requirement.
        type: object
        properties:
          value:
            description: Value for the email
            type: string
          type:
            description: A label indicating the attribute's function; e.g., "work" or "home". Enviance supports only type "work"
            type: string
          primary:
            description: A Boolean value indicating the 'primary' or preferred attribute value for this attribute
            type: boolean
      timezone:
        description: The User's time zone in the "Olson" timezone database format.
        type: string
        format: Olson Time zone
      preferredLanguage:
        description: Indicates the User's preferred written or spoken language. Generally used for selecting a localized User interface. e.g., 'en_US'
        type: string
      active:
        description: A boolean value indicating status of user.
        type: boolean
      groups:
        description: A list of groups that the user belongs to.
        type: object
        properties:
          value:
            description: Id (Guid) of a group.
            type: string
          display:
            description: Name of a group.
            type: string
      usertype:
        description: Type of the User. Possible values are Homeuser and Accessuser.
        type: string
      address:
        description: A physical mailing address for the user.
        type: object
        properties:
          streetAddress:
            description: The full street address component, which may include house number, street name, PO BOX, and multi-line extended street address information. This attribute MAY contain newlines.
            type: string
          locality:
            description: The city or locality component.
            type: string
          region:
            description: The state or region component.
            type: string
          postalCode:
            description: The zipcode or postal code component.
            type: string
          country:
            description: The country name component.
            type: string
          primary:
            description: A Boolean value indicating the 'primary' or preferred attribute value for this attribute, e.g. the preferred or primary phisical address. This value MUST set to 'true' for this attribute.
            type: boolean
          formatted:
            description: The full mailing address, formatted for display or use with a mailing label. This attribute MAY contain newlines.
            type: string
          type:
            description: 'A label indicating the attribute''s function. Enviance system only supports type :  "work"'
            type: string
      phoneNumbers:
        description: Phone number(s) for the User.
        type: object
        properties:
          value:
            description: Value for the specified type number.
            type: string
          type:
            description: 'Type of the phone number. Possible options are :  "work", "mobile" and "fax"'
            type: string
      urn:scim:schemas:enviance:user:
        type: object
        description: Extended schema attribute.
        properties:
          emailDelivery:
            description: Email delivery option for the user.
            type: string
          receiveInformation:
            description: Receive information option for the user.
            type: boolean
          commandFailureNotification:
            description: Command failure notification option for user.
            type: string
          reportCompletionNotification:
            description: Report completion notification option for user.
            type: string
          companyName:
            description: Name of the company that user belongs.
            type: string
          mustChangePasswordAtNextLogin:
            description: Boolean value indicating whether user must change password at first login.
            type: boolean
          canNotChangePassword:
            description: Boolean value indication for ability for user to change password in the system.
            type: boolean
          NotExpirePassword:
            description: Boolean value indication for making password non expirable.
            type: boolean
          expires:
            description: Expiration date for the user.
            type: string
          comments:
            description: Comments added during Create/Update user.
            type: string
          userRights:
            description: User rights within Enviance system.
            type: object
            properties:
              name:
                description: Name of the user rights.
                type: string
              granted:
                description: Boolean value to grant/revoke the provided right.
                type: boolean
          properties:
            description: Array of Extended properties for User.
            type: object
            properties:
              propertyName:
                description: Name of the property.
                type: string
              type:
                description: Type of the property. Type must be equal to propertyName.
                type: string
              propertyValue:
                description: Value of the property.
                type: string
              isSensitiveData:
                description: Indicates that this is sensitive data (optional).
                type: boolean
    example:
      schemas:
        - urn:scim:schemas:core:1.0
        - urn:scim:schemas:enviance:user
      userName: scimupdatetest998990444
      password: '1111'
      name:
        givenName: Updated
        familyName: Scim
      emails:
        - type: work
          primary: 'true'
          value: scimuser1@enviance.com
      timezone: America/New_York
      preferredLanguage: en_US
      active: true
      urn:scim:schemas:enviance:user:
        emailDelivery: HTML Email
        receiveInformation: true
        commandFailureNotification: Inbox
        companyName: Enviance, Inc
        mustChangePasswordAtNextLogin: 'false'
        canNotChangePassword: 'true'
        NotExpirePassword: 'false'
        userRights:
          - name: Manage Groups
            granted: true
        properties:
          - propertyName: supervisorusername
            type: supervisorusername
            propertyValue: someUsername
          - propertyName: name2
            type: name2
            propertyValue: val2
            isSensitiveData: true
        expires: 12/21/2017
        comments: This is a full Scim User
  Integration_ScimIdentity_group:
    type: object
    description: Represents a Group definition. Used for all SCIM Group operations.
    properties:
      schemas:
        description: SCIM version specific schema as well as any schema extensions. Enviance currently supports SCIM 1.1 (i.e. urn:scim:schemas:core:1.0) and schema extention urn:scim:schemas:enviance:group
        type: array
        items:
          type: string
      id:
        description: Identifier (Guid) of a group.
        type: string
      externalId:
        description: External identifier that is usually similar to groupname.
        type: string
      meta:
        description: Metadata for a group
        type: object
        properties:
          created:
            type: string
            description: Group resource created date.
          lastModified:
            type: string
            description: Group resource last updated date.
          location:
            type: string
            description: Group resource location.
          version:
            type: string
            description: Group resource version.
          attributes:
            type: string
            description: The names of the attributes to remove from the Resource during a PATCH operation.
      displayName:
        description: Unique name of the group in Enviance system.
        type: string
      members:
        description: A list of members (user) of the Group.
        type: object
        properties:
          value:
            description: The first/given name of the user.
            type: string
          operation:
            description: The last/family name of the user.
            type: string
      urn:scim:schemas:enviance:group:
        type: object
        description: Extended schema attribute.
        properties:
          rights:
            description: Access Rights within Enviance system.
            type: object
            properties:
              name:
                description: Name of the user rights.
                type: array
                items:
                  type: string
    example:
      urn:scim:schemas:enviance:group:
        rights:
          - Manage Users
      id: 809d56ad-77ef-47a6-9f3c-f8853b118744
      externalId: Enviance SCIM 123 Group
      meta:
        version: '-349702305'
        location: http://api.enviance.com/ver2/ScimIdentityService.svc/scim/v1/Groups/809d56ad-77ef-47a6-9f3c-f8853b118744
      schemas:
        - urn:scim:schemas:core:1.0
        - urn:scim:schemas:enviance:group
      displayName: Enviance SCIM 123 Group
      members:
        - value: 19ycb0g2-df4b-42c5-8s48-04457723cf76
  Setup_Tags_tagInfo:
    description: Represents a Tag definition.
    properties:
      id:
        description: 'The id string (GUID) for the Tag. Ignored for: Create Tag, Update Tag'
        type: string
      name:
        description: 'Name of the Tag. Required for: Create Tag'
        type: string
      description:
        description: Description of the Tag.
        type: string
      tagIdOrSchemeIdAndTagName:
        description: 'Either an id string (GUID) for the tag or the id string (GUID) for the tag scheme id and the tag name. Any string that matches the pattern of a GUID is interpreted as an id string and not a name. A name string must be URL encoded. Required for: Create Tag'
        type: string
  Setup_TagScheme_tagSchemeCreate:
    description: Tag Scheme Create body parameters
    properties:
      tagSchemeInfo:
        description: 'An tagSchemeInfo structure. '
        type: array
        items:
          $ref: '#/definitions/Setup_TagScheme_tagSchemeInfo'
      copyFrom:
        description: The id string (GUID) of an existing Tag Scheme to copy.
        type: string
  Setup_TagScheme_tagSchemeInfo:
    description: Represents a Tag Scheme definition.
    properties:
      id:
        description: 'The id string (GUID) for the Tag Scheme. Ignored for: Create Tag Scheme, Update Tag Scheme'
        type: string
      name:
        description: 'Name of the Tag Scheme. Required for: Create Tag Scheme'
        type: string
      description:
        description: Description of the Tag Scheme.
        type: string
      enforce uniqueness:
        description: 'Numeric value that represents a Tag Scheme uniqueness flag:(0 = no uniqueness, 1 = uniqueness for object, 2 = uniqueness for parent location, 3 = unique for both object and parent location) Required for: Create Tag Scheme'
        type: integer
  Task_taskCreateInfo:
    type: object
    description: Create/Copy Task info
    properties:
      taskInfo:
        $ref: '#/definitions/Task_taskInfo'
      copyFrom:
        description: The id string (GUID) of an existing Task whose properties will be copied and used as the properties of the newly created Task.
        type: string
  Task_taskInfo:
    type: object
    description: Task info
    properties:
      id:
        description: 'The id string (GUID) of the Task. Ignored for: Create Task, Update Task'
        type: string
      name:
        description: 'Name of the Task. Required for: Create Task'
        type: string
      description:
        description: The description of the Task.
        type: string
      createdBy:
        description: 'The User name of the Task creator. Ignored for: Create Task, Update Task'
        type: string
      createdOn:
        description: 'The date and time the Task was created. Ignored for: Create Task, Update Task'
        type: string
        format: date-time
      dueDate:
        description: 'The date and time the Task is due. Required for: Create Task'
        type: string
        format: date-time
      timeZone:
        description: 'The Task time zone. Required for: Create Task'
        type: string
        $ref: '#/definitions/Task_timeZoneInfo'
      assignor:
        description: The User name of the Task assignor. Default is the current User.
        type: string
      assignees:
        description: 'An array of User names and/or Group names to which the Task is assigned. Required for: Create Task'
        type: string
      calendars:
        description: An array of strings listing the types of Enviance calendars on which this Task is shown.
        type: string
        enum:
          - My
          - Object
          - System
      objects:
        description: An array of Compliance Model object id strings (GUIDs) or paths, specifying one or more Compliance Model objects to which the Task is associated. Any string that matches the pattern of a GUID is interpreted as an id string, and not a path.
        type: string
      documents:
        description: An array of Document paths, specifying zero or more Documents which are or should be attached to the object.
        type: array
        items:
          $ref: '#/definitions/Task_docPath'
      schedules:
        description: An array of the taskScheduleInfo data type, which defines the task schedules.
        type: array
        items:
          $ref: '#/definitions/Task_taskScheduleInfo'
      notifications:
        description: A array of the taskNotificationInfo data type, which defines the task notifications.
        type: array
        items:
          $ref: '#/definitions/Task_taskNotificationInfo'
      workflowtrigger:
        description: The taskWorkflowInfo data type, which defines the workflow trigger options.
        type: array
        items:
          $ref: '#/definitions/Task_taskWorkflowInfo'
      suppressNotificationsBefore:
        description: The date and time the Task Notification is not fired before.
        type: string
        format: date-time
  Task_taskOccurrenceInfo:
    type: object
    description: Represents a Task occurrence, on a single date and time, for a single object related to the Task.
    properties:
      statusChangeDate:
        description: 'An optional date and time at which the Task occurrence status was last updated. Default is the current date and time, in the Task time zone. Ignored for: Complete/Dismiss Task Occurrence'
        type: string
        format: date-time
      objectIdOrPath:
        description: 'An id string (GUID) or path of a Compliance Model object, related to the Task, for which this Task occurrence information applies. Any string that matches the pattern of a GUID is interpreted as an id string, and not a path. If no object property is specified, the Task occurrence information relates to all objects associated with the Task. Ignored for: Complete/Dismiss Task Occurrence'
        type: string
      dismissed:
        description: An optional Boolean flag indicating whether or not this task occurrence should be dismissed (and not completed). If this value is True, no update will be made for percentComplete and statusChangeDate. Default is False.
        type: boolean
      percentComplete:
        description: An optional integer between 0 and 100 specifying the percent completion of the Task occurrence. Default is 0 percent.
        type: number
      hoursToComplete:
        description: An optional decimal value indicating a whole or partial number of hours required to complete the Task occurrence. Default is 0.
        type: number
      costToComplete:
        description: An optional decimal value indicating the cost to complete the task occurrence. Currently, this value is in US dollars. Default is 0.
        type: string
      comment:
        description: An optional comment about the completion of the Task occurrence.
        type: string
      eventInstanceId:
        description: An id string (GUID) of an associated event instance.
        type: string
  Task_taskScheduleInfo:
    type: object
    description: Represents a simple (one time) Task definition. Properties startDate, endDate, startTime, endTime are specified in the timezone of the containing task (see timeZone property of taskInfo structure).
    required:
      - startDate
      - startTime
    properties:
      recurrenceType:
        description: A string that defines the recurrence pattern of the Schedule. Required for any TaskScheduleInfo.
        type: string
        enum:
          - Hourly
          - Daily
          - Weekly
          - Monthly
          - Yearly
          - AfterLastCompletion
      startDate:
        description: The date when the schedule becomes active (time portion of the date is ignored). Required for any TaskScheduleInfo
        type: string
        format: date-time
      endDate:
        description: The date when the schedule becomes inactive (time portion of the date is ignored). If not specified then the schedule does not have an end date.
        type: string
        format: date-time
      startTime:
        description: 'The time of a day at which the scheduled event should occur (in Hourly recurrence pattern, the time of a day when the schedule becomes active). Note that hours must be specified in the 24h format. For minutes only four values are allowed: 0, 15, 30, 45. Seconds are ignored.'
        type: string
        format: date-time
      endTime:
        description: 'The time of a day when the schedule becomes inactive (used only by Hourly recurrence pattern). Note that hours must be specified in the 24h format. For minutes only four values are allowed: 0, 15, 30, 45. Seconds are ignored.'
        type: string
        format: date-time
      recurrenceInterval:
        description: Either an integer value or recurrenceInterval structure which defines the frequency of the recurring event. The structure is used for AfterLastCompletion recurrence pattern and integer value is used for all other patterns. Depending on the pattern the integer value could mean days, weeks, months, or years.
        type: string
        items:
          $ref: '#/definitions/Task_recurrenceInterval'
      daysOfWeek:
        description: 'An array of strings which defines the days of a week to use in certain recurrence patterns. Recognized day names are: Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday. Shortcut names that can also be used are: All, Weekdays, Weekends.'
        type: string
      dayOfMonth:
        description: Either an integer value or DayOfMonth structure which defines the day of a specific month. Integer value specifies the number of the day within a month (possible values are 1 to 31). The structure is used for more advanced specification of the day of a month. This property is used only for Monthly and Yearly recurrence patterns.
        type: string
        items:
          $ref: '#/definitions/Task_dayOfMonth'
      monthOfYear:
        description: 'An integer value which defines the month of a year. Possible values are: 1 to 12.'
        type: integer
      TalLogicVersion:
        description: 'Time After Last Completion Schedule logic version. Ignored for: Create Task, Update Task.'
        type: integer
  Task_recurrenceInterval:
    type: object
    description: Represents the advanced specification of a recurring interval. Used by *AfterLastCompletion* recurrence pattern only. The purpose of this structure is to simplify specification of long intervals. The resulting value of the structure can be expressed as a single integer value specifying the number of hours of the interval.
    properties:
      hours:
        description: An integer value which defines the number of hours of the recurrence interval.
        type: string
        format: integer
      days:
        description: An integer value which defines the number of days of the recurrence interval.
        type: string
        format: integer
      weeks:
        description: An integer value which defines the number of weeks of the recurrence interval.
        type: string
        format: integer
      month:
        description: An integer value which defines the number of months of the recurrence interval.
        type: string
        format: integer
  Task_dayOfMonth:
    type: object
    description: 'Represents the advanced specification of the day of a month. The actual day of a month is uniquely identified by a combination of two properties. Using this structure the day of a month can be identified using the following rules: first day, last Friday, second weekday etc.'
    properties:
      dayOccurrence:
        description: A string that specifies the occurrence of the day within a month.
        type: string
        enum:
          - First
          - Second
          - Third
          - Fourth
          - Last
      dayOfWeek:
        description: A string that specifies the day of a week.
        type: string
        enum:
          - Day
          - Weekday
          - WeekendDay
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
  Task_taskNotificationInfo:
    type: object
    description: Represents a single instance of a task notification.
    required:
      - conditions
      - recipients
      - deliveryMethod
    properties:
      conditions:
        description: A notificationConditions structure which defines a set of conditions that would trigger the notification.
        type: array
        items:
          $ref: '#/definitions/Task_notificationConditions'
      recipients:
        description: A NotificationRecipients structure which defines the recipients of the notification.
        type: array
        items:
          $ref: '#/definitions/Task_notificationRecipients'
      deliveryMethod:
        description: A string that defines the delivery method of the notification.
        type: string
        enum:
          - Inbox
          - Email
          - InboxAndEmail
      comments:
        description: Task comments
        type: string
      templateIdOrName:
        description: Notification Template ID or Name
        type: string
  Task_notificationRecipients:
    type: object
    description: Represents recipients of the notification. All properties are optional but at least one of them must be specified.
    properties:
      toAssignees:
        description: A boolean value which indicates whether the notification should be delivered to the task assignee(s).
        type: boolean
      toAssignor:
        description: A boolean value which indicates whether the notification should be delivered to the task assignor.
        type: boolean
      users:
        description: An array of id strings (GUIDs) which defines specific users to receive the notification.
        type: string
      groups:
        description: An array of id strings (GUIDs) which defines specific groups to receive the notification.
        type: string
  Task_notificationConditions:
    type: object
    description: Defines a set of conditions that will trigger the notification. It corresponds to the "Time To Notify" section on the task notification UI. All properties are optional, but at least one of them must be specified. Additional limitation is that "byDueDate" condition cannot be specified if "CompletionStatusCondition.onlyWhenPastDue = true".
    properties:
      immediately:
        description: A boolean value which indicates whether the notification should be triggered immediately upon the creation.
        type: boolean
      whenDismissed:
        description: A boolean value which indicates whether the notification should be triggered when the task is dismissed.
        type: boolean
      byDueDate:
        description: A dueDateCondition structure which defines whether the notification should be triggered when certain conditions for the task Due Date are met.
        type: string
        items:
          $ref: '#/definitions/Task_dueDateCondition'
      byCompletionStatus:
        description: A completionStatusCondition structure which defines whether the notification should be triggered when certain conditions for the task completion status are met.
        type: string
        items:
          $ref: '#/definitions/Task_completionStatusCondition'
  Task_dueDateCondition:
    type: object
    description: Represents a condition related to the task Due Date.
    properties:
      conditionType:
        description: A string that specifies the type of the condition.
        type: string
        enum:
          - IntervalBefore
          - IntervalAfter
          - PastDue
      intervalValue:
        description: An integer value which defines the interval (ignored for conditionType=PastDue)
        type: integer
      intervalType:
        description: A string that defines the type of the interval (ignored for conditionType=PastDue).
        type: string
        enum:
          - QuarterHour
          - Hour
          - Day
          - Week
          - Month
          - Year
  Task_completionStatusCondition:
    type: object
    description: Represents a condition related to the task completion status
    properties:
      completionPercent:
        description: An integer value which defines the percentage of the task completion that should trigger the notification. Possible values are from 0 to 100, with increments of 10 percent.
        type: integer
      comparisonLogic:
        description: A string that defines how the task completion status should be compared to the completionPercent property to trigger the notification.
        type: string
        enum:
          - '='
          - <
          - '>'
          - <=
          - '>='
      onlyWhenPastDue:
        description: A boolean value which indicates that the notification must be triggered only if the task is past due. Optional.
        type: boolean
  Task_taskWorkflowInfo:
    type: object
    description: Represents a single instance of a task workflow triggering.
    properties:
      isautoclosetask:
        description: Determine if task should be closed when the workflow is closed.
        type: boolean
      taskcompletionfields:
        description: Determine influence on task status by workflow.
        $ref: '#/definitions/Task_completionMaskInfo'
      workflows:
        description: Array of workflowTriggerInfo which defines a structure for trigger options
        type: array
        items:
          $ref: '#/definitions/Task_workflowTriggerInfo'
  Task_completionMaskInfo:
    description: An integer value which defines Task Completion Fields mask
    type: array
    items:
      enum:
        - CostToComplete
        - HourToComplete
        - PercentComplete
        - Comments
        - ComplyStatus
        - Dismissed
        - CompliancePeriod
        - CompletionDate
  Task_workflowTriggerInfo:
    type: object
    description: A structure that defines the workflow trigger options
    required:
      - workflowtypeidorname
      - duedateflags
      - timetocreateoptions
    properties:
      workflowtypeidorname:
        description: Workflow definition Id or Name
        type: string
      workflowname:
        description: Workflow Name
        type: string
      isusetaskname:
        description: Flag to determine if Task Name should be used as Workflow Name when workflow is created.
        type: boolean
      calendars:
        description: An array of strings listing the types of Enviance calendars on which the workflow is shown.
        type: array
        items:
          enum:
            - My
            - Object
            - System
      duedateflags:
        description: Array of possible duedate options (only one is possible in time)
        type: array
        items:
          enum:
            - 'No'
            - Task
            - Workflow
      duedateamount:
        description: Value for duedate options
        type: string
        items:
          $ref: '#/definitions/Task_dueDateInfo'
      timetocreateoptions:
        description: Value for duedate options
        type: string
        items:
          $ref: '#/definitions/Task_timeToCreateInfo'
      assignee:
        description: A set of assignees (User name or id and/or Group name or id) for the Workflow
        type: array
        items:
          type: object
  Task_dueDateInfo:
    type: object
    description: A structure that defines the duedate options for a triggered workflow
    required:
      - value
      - hours
      - period
    properties:
      value:
        description: Integer value for period
        type: integer
      hours:
        description: Period type
        type: string
        enum:
          - QuarterHour
          - Hour
          - Day
          - Week
          - Month
          - Year
      period:
        description: Specifies whether due date is before or after period
        type: string
        enum:
          - Before
          - After
  Task_timeToCreateInfo:
    type: object
    description: A structure that defines the time to create info for a triggered workflow
    required:
      - category
    properties:
      value:
        description: Value for create info
        type: object
        items:
          $ref: '#/definitions/Task_timeToCreateValue'
      category:
        description: Option for creating immediately or by due date or status
        type: string
        enum:
          - Immediatly
          - ByDueDate
          - ByCompleteStatus
          - OnDismissActivate
  Task_timeToCreateValue:
    type: object
    description: A structure that defines the time to create value for a triggered workflow
    properties:
      value:
        description: Integer value for period
        type: integer
      past:
        description: Boolean flag indicating if value is in future or in past
        type: boolean
      operation:
        description: And/Or operator value
        type: string
        enum:
          - AND
          - OR
      hours:
        description: Period type
        type: string
        enum:
          - QuarterHour
          - Hour
          - Day
          - Week
          - Month
          - Year
      period:
        description: Specifies whether create period is before or after
        type: string
        enum:
          - Before
          - After
      percent:
        description: Integer designating percent value
        type: integer
        enum:
          - 0
          - 10
          - 20
          - 30
          - 40
          - 60
          - 70
          - 80
          - 90
          - 100
      compare:
        description: Comparison operator
        type: string
        enum:
          - '='
          - <
          - '>'
          - <=
          - '>='
  Task_timeZoneInfo:
    description: Describes a time zone, including its offset from UTC
    required:
      - name
    properties:
      name:
        description: Timezone name
        type: string
      stdOffset:
        description: The offset in minutes from UTC during standard time.
        type: integer
      dstOffset:
        description: The offset in minutes from UTC during daylight savings time (DST). This property will be identical to "stdOffset" for time zones that do not observe DST.
        type: integer
      currentOffset:
        description: The current offset in minutes from UTC (which can change upon whether the time zone is currently observing DST or not).
        type: integer
  Task_docPath:
    type: string
    description: 'The hierarchical path to a document as represented by the system model folder structure, beginning with a single forward slash and with elements separated by a single forward slash &quot;/&quot;. Does not include the container object (Documents) Example: /Folder1/Subfolder1/Sub-subfolder/DocumentName'
  Setup_UserGroups_groupInfo:
    description: Represents a Group of Users in the Management System.
    properties:
      id:
        description: 'The id string (GUID) for the Group. Ignored for: Create Group, Update Group'
        type: string
      name:
        description: 'Name of the Group. Note: You cannot create a new Group called "Administrators". Required for: Create Group'
        type: string
      rights:
        description: An array of System Rights granted to the Group.
        type: string
      members:
        description: An array of member User id strings (GUIDs) and/or user names.
        type: string
  Workflow_workflowCreateInfo:
    type: object
    description: CreateCopy workflow body
    properties:
      workflowInfo:
        description: A workflowInfo structure.
        type: array
        items:
          $ref: '#/definitions/Workflow_workflowInfo'
      initStepInfo:
        description: An optional WorkflowStepInfo structure, which can be used to simultaneously update Form Fields or invoke a Step Action on the Init Step of the newly created Workflow.
        type: array
        items:
          $ref: '#/definitions/Workflow_workflowStepInfo'
  Workflow_workflowCreateInfos:
    type: object
    description: CreateCopy workflow body
    properties:
      workflowInfos:
        description: A workflowInfo structure.
        type: array
        items:
          $ref: '#/definitions/Workflow_workflowInfo'
  Workflow_workflowInfo:
    type: object
    description: Represents a single instance of a Workflow.
    properties:
      id:
        description: 'The id string (GUID) of the Workflow. Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow'
        type: string
      uniqueId:
        description: The unique id of the Workflow.
        type: string
      name:
        description: Name of the Workflow. Optional, defaults to uniqueId
        type: string
      workflowTypeName:
        description: 'Name of the Workflow Type. Required for: Create Workflow. Ignored for: Update Workflow, Initiate Child Workflow'
        type: string
      parentUniqueId:
        description: 'If the Workflow has a parent Workflow, the unique id string of the parent Workflow, otherwise empty. Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow'
        type: string
      parentWorkflowSourceCustomField:
        description: Optional field that allow a child workflow instance to be linked not only to the parent workflow instance ID, but also to a particular custom field (GUID) on the parent
        type: array
        items:
          $ref: '#/definitions/Workflow_customFieldInfo'
      dueDate:
        description: The due date of the Workflow.
        type: string
        format: date-time
      status:
        description: 'A string representing the current status of the Workflow, formatted as "Primary Status (Custom Status)". Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow'
        type: string
      creator:
        description: 'The User name of the person who created the Workflow. Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow'
        type: string
      created:
        description: 'The date and time the Workflow was created. Ignored for: Update Workflow'
        type: string
        format: date-time
      lastRun:
        description: 'The date and time the Workflow was last run (saved and/or transitioned). Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow'
        format: date-time
        type: string
      assignedBy:
        description: 'The user name of the person who last assigned the Workflow. Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow.'
        type: string
      assignedTo:
        description: A set of assignees (User name or id and/or Group name or id) for the Workflow. If at least one assignee is not specified when creating a Workflow, the current User is assigned the Workflow. If the assignee(s) specified here are not part of the assigned Role for the current Step, the assignee(s) will be added to the Role.
        type: string
      calendars:
        description: An array of strings listing the types of Enviance calendars on which this Workflow is shown.
        type: string
        enum:
          - My
          - Object
          - System
      objects:
        description: An array of Compliance Model object id strings (GUIDs) or paths, specifying zero or more Compliance Model objects to which the Workflow is associated. Any string that matches the pattern of a GUID is interpreted as an id string, and not a path.
        type: string
      documents:
        description: An array of Document paths, specifying zero or more Documents which are or should be attached to the object.
        type: array
        items:
          $ref: '#/definitions/Workflow_docPath'
      comment:
        description: A comment. When retrieving information on an existing Workflow, this value is the current latest comment on the Workflow.
        type: string
      closeDate:
        description: Date when Workflow was closed. Only for GET request are used
        type: string
        format: date-time
      jsonData:
        default: null
        description: JSON meta data related to workflow instance
        type: object
  Workflow_customFieldInfo:
    type: object
    description: Represents an instance of a CustomField.
    properties:
      id:
        description: The id string (GUID) of the CustomField. Optional
        type: string
      name:
        description: Name of the CustomField. Optional
        type: string
  Workflow_workflowStepInfo:
    type: object
    description: Represents the information for a workflow step.
    properties:
      id:
        description: 'The id string (GUID) of the Workflow Step. Ignored for: UpdateWorkflowStep'
        type: string
      name:
        description: 'The name of the Step. Ignored for: UpdateWorkflowStep'
        type: string
      fields:
        description: An array of CustomFields, representing the Form Field values for the Step. The User must have the "Edit" Workflow Field permission to set a field value.
        type: array
        items:
          $ref: '#/definitions/Workflow_customFieldValue'
      transition:
        description: The information about a Workflow Transition to invoke. The User must have the ability to execute the named Step Action on the specified Step. This value will be unspecified when getting the information for a Step.
        type: array
        items:
          $ref: '#/definitions/Workflow_workflowTransitionInfo'
      comment:
        description: A comment on this Step. When updating a Step via UpdateWorkflowStep, this value will be used to record a new, latest comment. The User must have the "Add Comment" Workflow permission to set this value. When retrieving information about a Workflow Step, this value will be the latest comment currently on the Workflow.
        type: string
  Workflow_workflowTransitionInfo:
    type: object
    description: Represents a workflow transition
    properties:
      stepActionName:
        description: 'The name of the Step Action to execute. Required for: Making transitions with UpdateWorkflowStep. The pre-defined Step Action name "End Workflow" can be used for any Workflow to close it. The pre-defined Step Action name "Reopen Workflow" is used to reopen already closed workflows.'
        type: string
      dueDate:
        description: The new due date for the Workflow.
        type: string
        format: date-time
      assignTo:
        description: A list of assignees (User name and/or Group name) to which the destination Step of the Workflow should be assigned. If not specified, the Step will be assigned to all members of the Assignee Role for the Workflow.
        type: string
      closeDate:
        description: Close date for the Workflow.
        type: string
        format: date-time
  Workflow_childWorkflowInitiationInfo:
    type: object
    description: Represents a Child Workflow Initiation as executed by a Workflow Initiator. The pre-defined Step Action name "End Workflow" can be used for any Workflow to close it.
    properties:
      parentStepIdOrName:
        description: Either the id string (GUID) of the Step, or its name. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Step.
        type: string
      initiatorIdOrName:
        description: ' Either the id string (GUID) of the Workflow Initiator, or its name. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Initiator.'
        type: string
      childWorkflowInfo:
        description: A workflowInfo structure.
        type: array
        items:
          $ref: '#/definitions/Workflow_workflowInfo'
      childInitStepInfo:
        description: An optional workflowStepInfo structure, which can be used to simultaneously update Form Fields or invoke a Step Action on the Init Step of the newly created Workflow.
        type: array
        items:
          $ref: '#/definitions/Workflow_workflowStepInfo'
  Workflow_customFieldValue:
    description: A set of one or more values for a Custom Field, identified by name.  Multi-Select Custom Fields are represented as an array with multiple string values, one for each selected option. Linked List Custom Fields are represented as an array with multiple string values, where n of the array holds the chosen value for level n+1 of the linked list. For example, the values array ["One", "Two", "Three"] for a linked list will map to the item "One" chosen in level one, "Two" in two, etc. Hyperlink Fields are represented as an array with a single UrlItem.
    properties:
      name:
        description: The name (not caption) of the Custom Field.
        type: string
      values:
        description: An array with one or more string values, representing the values (one or more) for the Custom Field.  Note that even non-string simple values are encoded as strings for custom fields, and are parsed and validated on the server according to the Custom Field type.
        type: string
  Workflow_workflowStepMap:
    type: object
    description: Represents a single instance of a WorkflowStepMap.
    properties:
      workflowIdOrUniqueId:
        description: Either the of id string (GUID) of the Workflow, or the unique id of the Workflow. Any string that matches the pattern of a GUID is interpreted as the id string, and not the unique id of the Workflow.
        type: string
      stepIdsOrNames:
        type: array
        items:
          type: string
  Workflow_stringArrayBody:
    type: object
    description: Either the Array of id string (GUID) of the Workflow, or the unique id of the Workflow. Any string that matches the pattern of a GUID is interpreted as the id string, and not the unique id of the Workflow. The unique id of a Workflow must be URL encoded.
    properties:
      workflowIdsOrUniqueIds:
        type: array
        items:
          type: string
  Workflow_workflowStepMapArrayBody:
    type: object
    description: Instance of the Array of WorkflowStepMap.
    properties:
      workflowStepMaps:
        type: array
        items:
          $ref: '#/definitions/Workflow_workflowStepMap'
  Workflow_workflowExecutionResult:
    type: object
    description: ''
    properties:
      WorkflowInstanceId:
        description: The id string (GUID) for the newly created Workflow.
        type: string
      CurrentInstanceStepId:
        description: The id string (GUID) for the newly created step.
        type: string
      TransitionPerformed:
        description: ''
        type: boolean
      AssignedAutomatically:
        description: ''
        type: boolean
  Workflow_docPath:
    type: string
    description: 'The hierarchical path to a document as represented by the system model folder structure, beginning with a single forward slash and with elements separated by a single forward slash &quot;/&quot;. Does not include the container object (Documents) Example: /Folder1/Subfolder1/Sub-subfolder/DocumentName'
  Workflow21_workflowCreateInfo:
    type: object
    description: CreateCopy workflow body
    properties:
      workflowInfo:
        description: A workflowInfo structure.
        type: array
        items:
          $ref: '#/definitions/Workflow21_workflowInfo'
      initStepInfo:
        description: An optional WorkflowStepInfo structure, which can be used to simultaneously update Form Fields or invoke a Step Action on the Init Step of the newly created Workflow.
        type: array
        items:
          $ref: '#/definitions/Workflow21_workflowStepInfo'
  Workflow21_workflowCreateInfos:
    type: object
    description: CreateCopy workflow body
    properties:
      workflowInfos:
        description: A workflowInfo structure.
        type: array
        items:
          $ref: '#/definitions/Workflow21_workflowInfo'
  Workflow21_workflowInfo:
    type: object
    description: Represents a single instance of a Workflow.
    properties:
      id:
        description: 'The id string (GUID) of the Workflow. Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow'
        type: string
      uniqueId:
        description: The unique id of the Workflow.
        type: string
      name:
        description: Name of the Workflow. Optional, defaults to uniqueId
        type: string
      workflowTypeName:
        description: 'Name of the Workflow Type. Required for: Create Workflow. Ignored for: Update Workflow, Initiate Child Workflow'
        type: string
      parentUniqueId:
        description: 'If the Workflow has a parent Workflow, the unique id string of the parent Workflow, otherwise empty. Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow'
        type: string
      parentWorkflowSourceCustomField:
        description: Optional field that allow a child workflow instance to be linked not only to the parent workflow instance ID, but also to a particular custom field (GUID) on the parent
        type: array
        items:
          $ref: '#/definitions/Workflow21_customFieldInfo'
      dueDate:
        description: The due date of the Workflow.
        type: string
        format: date-time
      status:
        description: 'A string representing the current status of the Workflow, formatted as "Primary Status (Custom Status)". Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow'
        type: string
      creator:
        description: 'The User name of the person who created the Workflow. Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow'
        type: string
      created:
        description: 'The date and time the Workflow was created. Ignored for: Update Workflow'
        type: string
        format: date-time
      lastRun:
        description: 'The date and time the Workflow was last run (saved and/or transitioned). Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow'
        format: date-time
        type: string
      assignedBy:
        description: 'The user name of the person who last assigned the Workflow. Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow.'
        type: string
      assignedTo:
        description: A set of assignees (User name or id and/or Group name or id) for the Workflow. If at least one assignee is not specified when creating a Workflow, the current User is assigned the Workflow. If the assignee(s) specified here are not part of the assigned Role for the current Step, the assignee(s) will be added to the Role.
        type: string
      calendars:
        description: An array of strings listing the types of Enviance calendars on which this Workflow is shown.
        type: string
        enum:
          - My
          - Object
          - System
      objects:
        description: An array of Compliance Model object id strings (GUIDs) or paths, specifying zero or more Compliance Model objects to which the Workflow is associated. Any string that matches the pattern of a GUID is interpreted as an id string, and not a path.
        type: string
      documents:
        description: An array of Document paths, specifying zero or more Documents which are or should be attached to the object.
        type: array
        items:
          $ref: '#/definitions/Workflow21_docPath'
      comment:
        description: A comment. When retrieving information on an existing Workflow, this value is the current latest comment on the Workflow.
        type: string
      closeDate:
        description: Date when Workflow was closed. Only for GET request are used
        type: string
        format: date-time
      jsonData:
        default: null
        description: JSON meta data related to workflow instance
        type: object
  Workflow21_customFieldInfo:
    type: object
    description: Represents an instance of a CustomField.
    properties:
      id:
        description: The id string (GUID) of the CustomField. Optional
        type: string
      name:
        description: Name of the CustomField. Optional
        type: string
  Workflow21_workflowStepInfo:
    type: object
    description: Represents the information for a workflow step.
    properties:
      id:
        description: 'The id string (GUID) of the Workflow Step. Ignored for: UpdateWorkflowStep'
        type: string
      name:
        description: 'The name of the Step. Ignored for: UpdateWorkflowStep'
        type: string
      fields:
        description: An array of CustomFields, representing the Form Field values for the Step. The User must have the "Edit" Workflow Field permission to set a field value.
        type: array
        items:
          $ref: '#/definitions/Workflow21_customFieldValue'
      transition:
        description: The information about a Workflow Transition to invoke. The User must have the ability to execute the named Step Action on the specified Step. This value will be unspecified when getting the information for a Step.
        type: array
        items:
          $ref: '#/definitions/Workflow21_workflowTransitionInfo'
      comment:
        description: A comment on this Step. When updating a Step via UpdateWorkflowStep, this value will be used to record a new, latest comment. The User must have the "Add Comment" Workflow permission to set this value. When retrieving information about a Workflow Step, this value will be the latest comment currently on the Workflow.
        type: string
  Workflow21_workflowTransitionInfo:
    type: object
    description: Represents a workflow transition
    properties:
      stepActionName:
        description: 'The name of the Step Action to execute. Required for: Making transitions with UpdateWorkflowStep. The pre-defined Step Action name "End Workflow" can be used for any Workflow to close it. The pre-defined Step Action name "Reopen Workflow" is used to reopen already closed workflows.'
        type: string
      dueDate:
        description: The new due date for the Workflow.
        type: string
        format: date-time
      assignTo:
        description: A list of assignees (User name and/or Group name) to which the destination Step of the Workflow should be assigned. If not specified, the Step will be assigned to all members of the Assignee Role for the Workflow.
        type: string
      closeDate:
        description: Close date for the Workflow.
        type: string
        format: date-time
  Workflow21_childWorkflowInitiationInfo:
    type: object
    description: Represents a Child Workflow Initiation as executed by a Workflow Initiator. The pre-defined Step Action name "End Workflow" can be used for any Workflow to close it.
    properties:
      parentStepIdOrName:
        description: Either the id string (GUID) of the Step, or its name. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Step.
        type: string
      initiatorIdOrName:
        description: ' Either the id string (GUID) of the Workflow Initiator, or its name. Any string that matches the pattern of a GUID is interpreted as the id string, and not the name of the Initiator.'
        type: string
      childWorkflowInfo:
        description: A workflowInfo structure.
        type: array
        items:
          $ref: '#/definitions/Workflow21_workflowInfo'
      childInitStepInfo:
        description: An optional workflowStepInfo structure, which can be used to simultaneously update Form Fields or invoke a Step Action on the Init Step of the newly created Workflow.
        type: array
        items:
          $ref: '#/definitions/Workflow21_workflowStepInfo'
  Workflow21_customFieldValue:
    description: A set of one or more values for a Custom Field, identified by name.  Multi-Select Custom Fields are represented as an array with multiple string values, one for each selected option. Linked List Custom Fields are represented as an array with multiple string values, where n of the array holds the chosen value for level n+1 of the linked list. For example, the values array ["One", "Two", "Three"] for a linked list will map to the item "One" chosen in level one, "Two" in two, etc. Hyperlink Fields are represented as an array with a single UrlItem.
    properties:
      name:
        description: The name (not caption) of the Custom Field.
        type: string
      values:
        description: An array with one or more string values, representing the values (one or more) for the Custom Field.  Note that even non-string simple values are encoded as strings for custom fields, and are parsed and validated on the server according to the Custom Field type.
        type: string
  Workflow21_workflowStepMap:
    type: object
    description: Represents a single instance of a WorkflowStepMap.
    properties:
      workflowIdOrUniqueId:
        description: Either the of id string (GUID) of the Workflow, or the unique id of the Workflow. Any string that matches the pattern of a GUID is interpreted as the id string, and not the unique id of the Workflow.
        type: string
      stepIdsOrNames:
        type: array
        items:
          type: string
  Workflow21_stringArrayBody:
    type: object
    description: Either the Array of id string (GUID) of the Workflow, or the unique id of the Workflow. Any string that matches the pattern of a GUID is interpreted as the id string, and not the unique id of the Workflow. The unique id of a Workflow must be URL encoded.
    properties:
      workflowIdsOrUniqueIds:
        type: array
        items:
          type: string
  Workflow21_workflowStepMapArrayBody:
    type: object
    description: Instance of the Array of WorkflowStepMap.
    properties:
      workflowStepMaps:
        type: array
        items:
          $ref: '#/definitions/Workflow21_workflowStepMap'
  Workflow21_workflowExecutionResult:
    type: object
    description: ''
    properties:
      WorkflowInstanceId:
        description: The id string (GUID) for the newly created Workflow.
        type: string
      CurrentInstanceStepId:
        description: The id string (GUID) for the newly created step.
        type: string
      TransitionPerformed:
        description: ''
        type: boolean
      AssignedAutomatically:
        description: ''
        type: boolean
  Workflow21_docPath:
    description: ''
    properties:
      documentIdOrPath:
        description: 'The hierarchical path to a document as represented by the system model folder structure, beginning with a single forward slash and with elements separated by a single forward slash &quot;/&quot;. Does not include the container object (Documents) Example: /Folder1/Subfolder1/Sub-subfolder/DocumentName.'
        type: string
      udfIdOrName:
        description: The id string (GUID) or name of the CustomField.
        type: string
  workflowPermissions_options:
    type: object
    description: Optional info for workflow
    properties:
      objects:
        description: An array of Compliance Model object id strings (GUIDs) or paths, specifying zero or more Compliance Model objects to which the Workflow is associated. Any string that matches the pattern of a GUID is interpreted as an id string, and not a path.
        type: string
      version:
        description: Version number for the workflow
        type: string
        format: number
      stepIdOrName:
        description: The id or name of specified Workfllow Type. If not specified returns info for first Workflow type step
        type: string
        format: string
  workflowPermissions_workflowInfo:
    type: object
    description: Represents a single instance of a Workflow.
    items:
      $ref: '#/definitions/workflowPermissions_workflowInfo'
    properties:
      id:
        description: 'The id string (GUID) of the Workflow. Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow'
        type: string
      uniqueId:
        description: The unique id of the Workflow.
        type: string
      name:
        description: 'Name of the Workflow. Required for: Create Workflow, Initiate Child Workflow'
        type: string
      workflowTypeName:
        description: 'The name of the Workflow Type. Required for: Create Workflow. Ignored for: Update Workflow, Initiate Child Workflow'
        type: string
      parentUniqueId:
        description: 'If the Workflow has a parent Workflow, the unique id string of the parent Workflow, otherwise empty. Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow'
        type: string
      dueDate:
        description: The due date of the Workflow.
        type: string
        format: date-time
      status:
        description: 'A string representing the current status of the Workflow, formatted as "Primary Status (Custom Status)". Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow'
        type: string
      creator:
        description: 'The User name of the person who created the Workflow. Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow'
        type: string
      created:
        description: 'The date and time the Workflow was created. Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow'
        type: string
        format: date-time
      lastRun:
        description: 'The date and time the Workflow was last run (saved and/or transitioned). Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow'
        format: date-time
        type: string
      assignedBy:
        description: 'The user name of the person who last assigned the Workflow. Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow.'
        type: string
      assignedTo:
        description: A set of assignees (User name or id and/or Group name or id) for the Workflow. If at least one assignee is not specified when creating a Workflow, the current User is assigned the Workflow. If the assignee(s) specified here are not part of the assigned Role for the current Step, the assignee(s) will be added to the Role.
        type: string
      calendars:
        description: An array of strings listing the types of Enviance calendars on which this Workflow is shown. Valid values are "My", "Object", "System".
        type: string
      objects:
        description: An array of Compliance Model object id strings (GUIDs) or paths, specifying zero or more Compliance Model objects to which the Workflow is associated. Any string that matches the pattern of a GUID is interpreted as an id string, and not a path.
        type: string
      documents:
        description: An array of Document id strings (GUIDs) or paths, specifying zero or more Documents attached to the Workflow. Any string that matches the pattern of a GUID is interpreted as an id string, and not a path.
        type: string
      comments:
        description: A comment. When retrieving information on an existing Workflow, this value is the current latest comment on the Workflow.
        type: string
  workflowPermissions_simpleIdName:
    type: object
    description: ''
    properties:
      id:
        description: The id string (GUID)
        type: string
      name:
        description: string that contain name of object
        type: string
  workflowPermissions_simpleUserDto:
    type: object
    description: user basic info
    properties:
      firstName:
        description: user first name
        type: string
      lastName:
        description: user last name
        type: string
      isDeleted:
        description: indicator that user is deleted
        type: boolean
      id:
        description: The id string (GUID)
        type: string
      name:
        description: string that contain name
        type: string
  workflowPermissions_userGroup:
    type: object
    description: group
    properties:
      id:
        description: The id string (GUID)
        type: string
      name:
        description: string that contain name of group
        type: string
      users:
        description: user first name
        type: array
        items:
          $ref: '#/definitions/workflowPermissions_simpleUserDto'
  workflowPermissions_workflowRoleInfo:
    type: object
    description: information about workflow role
    properties:
      id:
        description: The id string (GUID)
        type: string
      name:
        description: string that contain name
        type: string
      groups:
        description: array of role groups
        type: array
        items:
          $ref: '#/definitions/workflowPermissions_userGroup'
      users:
        description: array of role users
        type: array
        items:
          $ref: '#/definitions/workflowPermissions_simpleUserDto'
  workflowPermissions_workflowStepPermissionsInfo:
    type: object
    description: ''
    properties:
      readWriteFields:
        description: list of udfs
        type: array
        items:
          $ref: '#/definitions/workflowPermissions_simpleIdName'
      readOnlyFields:
        description: list of udfs
        type: array
        items:
          $ref: '#/definitions/workflowPermissions_simpleIdName'
      stepActions:
        description: string array of step actions
        type: string
      stepInitiators:
        description: list of udfs
        type: array
        items:
          $ref: '#/definitions/workflowPermissions_simpleIdName'
      workflowActions:
        description: string array of workflow actions
        type: string
      assignedRole:
        description: list of assigned roles
        type: array
        items:
          $ref: '#/definitions/workflowPermissions_workflowRoleInfo'
  Setup_WorkflowRole_workflowRoleRequestInfo:
    type: object
    properties:
      workflowRoleInfo:
        $ref: '#/definitions/Setup_WorkflowRole_workflowRoleInfo'
  Setup_WorkflowRole_workflowRoleInfo:
    type: object
    properties:
      id:
        type: string
        format: GUID
      name:
        type: string
        format: string
      description:
        type: string
        format: string
      defaultMembers:
        $ref: '#/definitions/Setup_WorkflowRole_defaultMembers'
  Setup_WorkflowRole_defaultMembers:
    type: object
    properties:
      userIdsOrNames:
        type: array
        items:
          type: string
      groupIdsOrNames:
        type: array
        items:
          type: string
  Setup_WorkflowRole_workflowRoleCopyInfo:
    type: object
    description: Create/Copy Parameter Requirement body
    properties:
      sourceId:
        type: string
        format: GUID
      newRoleName:
        description: Name of the workflow role name
        type: string
  Setup_WorkflowType_workflowTypeIdNameInfo:
    description: Workflow Type Result Structure
    properties:
      id:
        description: The id string (GUID) for the Workflow Type
        type: string
      name:
        description: Name of the Workflow Type
        type: string
      version:
        description: Version number of the Workflow Type
        minimum: 1
        type: integer
  Setup_WorkflowType_workflowTypeInfo:
    required:
      - name
      - workflowSteps
    type: object
    description: Workflow Type Object definition for POST requests
    properties:
      id:
        description: The id string (GUID) of the workflow type. Returned by GET operations.
        type: string
      name:
        default: null
        description: Name of the workflow type. Used for re-name. Optional for *Partial Update operation* (PATCH)
        type: string
      description:
        default: '""'
        description: The description of workflow type. Optional.
        type: string
      shouldCreateNewVersion:
        default: false
        description: True for create new version of Workflow Type, False or unspecified for update the old version. Optional. *Update operations* only
        type: boolean
      versionComments:
        default: '""'
        description: The comments to workflow type version. Optional.
        type: string
      idGenScheme:
        default: '"{Year}.{Month}.{Day}.{Hour}.{AlphaID}"'
        description: |-
          The id string (GUID) for the generating scheme. Optional. If not specified or empty it uses default value.\
          _{Workflow Type}_ - The name of the Workflow Type\
          _{Version}_ - The three digit (000-999) version number of the Workflow Type\
          _{Year}_ - The four digit numeric designation for the current year\
          _{Month}_ - The two digit numeric designation for the current month\
          _{Day}_ - The two digit numeric designation for the current day\
          _{Hour}_ - The two digit (24-hour format) numeric designation for the current hour\
          _{Minute}_ - The two digit (00-59) numeric designation for the current minute within the hour\
          _{AlphaID}_ - The first 12 hexadecimal characters obtained from a Uniqueidentifier value\
          _{NumericID}_ - The 9 digits composed of the next available integer value in a sequence starting at 000000001 and ending at 999999999
        type: string
      isUsedForConfig:
        default: false
        description: Represent a Workflow Type Used for Configuration. Optional.
        type: boolean
      workflowSteps:
        description: Workflow Step structure. Optional for *Partial Update operation*
        type: array
        items:
          $ref: '#/definitions/Setup_WorkflowType_workflowStepInfo'
      stepRoles:
        description: Roles are used in Steps and predefined role "Workflow Manager". Optional
        type: array
        items:
          $ref: '#/definitions/Setup_WorkflowType_roleInfo'
      otherRoles:
        description: Any roles are not used in Steps or not any predefined Role. Optional
        type: array
        items:
          $ref: '#/definitions/Setup_WorkflowType_roleInfo'
      localFields:
        description: |-
          'Array of IdName pair of local UDFields from Form Templates. Optional.
          *All fields are Global by default.*'
        type: array
        items:
          $ref: '#/definitions/Setup_WorkflowType_idNamePair'
      globalFields:
        description: Array of IdName pair of UDFields are changed to global. Optional. *Partial Update operation* only
        type: array
        items:
          $ref: '#/definitions/Setup_WorkflowType_idNamePair'
      workflowPermissions:
        description: Array of Workflow Permissions. Optional
        type: array
        items:
          $ref: '#/definitions/Setup_WorkflowType_workflowPermissionInfo'
      stepPermissions:
        description: Array of Workflow Step Permissions. Not required
        type: array
        items:
          $ref: '#/definitions/Setup_WorkflowType_stepPermissionsInfo'
      policies:
        description: Array of IdName pair of policies. Not required.
        type: array
        items:
          $ref: '#/definitions/Setup_WorkflowType_idNamePair'
      predefinedRoles:
        description: Array of IdName pair of predefined roles (Assignee, Creator, "Previous Assignee") used in step permissions. Returned by GET operations.
        type: array
        items:
          $ref: '#/definitions/Setup_WorkflowType_idNamePair'
      jsonData:
        default: null
        description: JSON meta data related to type
        type: object
      poorUsers:
        $ref: '#/definitions/Setup_WorkflowType_poorUsersInfo'
  Setup_WorkflowType_workflowStepInfo:
    required:
      - name
      - status
      - formTemplate
      - assignedRole
    type: object
    description: Workflow Step Object definition
    properties:
      id:
        description: The id string (GUID) for the Workflow Step. Required if name parameter is empty for Update. Required for rename of step.
        type: string
      name:
        description: The Name of the Workflow Step. Required for *Create operation* and for rename.
        type: string
      status:
        description: Status name of the Workflow Step. Unique. Can be used as identifier for *Update operations*
        type: string
      formTemplate:
        $ref: '#/definitions/Setup_WorkflowType_idNameVersion'
      assignedRole:
        description: The Name of Assigned Role to Workflow Step.
        type: string
      flags:
        description: Workflow Step flags. Optional.
        default: None
        type: string
        enum:
          - None
          - Recurrent
      isDeleted:
        description: Sign for delete current Workfloww Step. Optional. *Partial Update operations* only.
        type: boolean
      stepActions:
        description: Array of Workflow Step Action structure. Optional.
        type: array
        items:
          $ref: '#/definitions/Setup_WorkflowType_workflowStepActionInfo'
      workflowInitiators:
        description: Array of Workflow Step Initiator structure. Optional.
        type: array
        items:
          $ref: '#/definitions/Setup_WorkflowType_workflowInitiatorInfo'
      order:
        description: Sorting order number.
        type: number
  Setup_WorkflowType_workflowStepActionInfo:
    required:
      - name
      - destinationStep
      - allowedRoles
    type: object
    description: Workflow Step Action Object definition
    properties:
      id:
        description: |-
          The id string (GUID) for the Workflow Step Action. Required for *Update operations* if name
          parameter is empty. *Create operation* ignores this property.
        type: string
      name:
        description: The Name of the Workflow Step Action. Required for *Create operation*, rename or *Update operations* if id property is empty.
        type: string
      destinationStep:
        $ref: '#/definitions/Setup_WorkflowType_idNamePair'
      allowedRoles:
        description: |-
          Array of id string (GUID) or name of allowed Workflow Roles to Workflow Step. Optional for *Partial Update operation*.
          GET operations returns array of id string (GUID).
        type: array
        items:
          type: string
      flags:
        description: Workflow Step Action flags. Optional.
        default: None
        type: string
        enum:
          - None
          - AllowFlowInterrupt
      isDeleted:
        description: Sign for delete current Workflow Step Action. Optional. *Partial Update operations* only.
        type: boolean
      order:
        description: Sorting order number. Returned by GET operations
        type: number
  Setup_WorkflowType_workflowInitiatorInfo:
    required:
      - name
      - workflowType
      - allowedRoles
    type: object
    description: Workflow Initiator Object definition
    properties:
      id:
        description: |-
          The id string (GUID) for the Workflow Initiator. Required for *Update operations* if name
          parameter is empty. *Create operation* ignores this property.
        type: string
      name:
        description: The Name of the Workflow Initiator. Required for *Create operation*, rename or *Update operations* if id property is empty.
        type: string
      workflowType:
        $ref: '#/definitions/Setup_WorkflowType_idNameVersion'
      allowedRoles:
        description: Array of id string (GUID) or name of allowed Workflow Roles to Workflow Step.Optional for *Partial Update operations*
        type: array
        items:
          type: string
      order:
        description: Sorting order number. Returned by GET operations
        type: number
      isDeleted:
        description: Sign for delete current Workflow Initiator. Optional. *Partial Update operations* only.
        type: boolean
  Setup_WorkflowType_roleInfo:
    type: object
    description: Role Info Object definition
    properties:
      id:
        description: The id string (GUID) of Role. Required if Name is empty
        type: string
      name:
        description: The Name of Role. Required if Id is empty
        type: string
      users:
        description: Array of users.
        type: array
        items:
          $ref: '#/definitions/Setup_WorkflowType_userInfo'
      groups:
        description: Array of groups.
        type: array
        items:
          $ref: '#/definitions/Setup_WorkflowType_groupInfo'
      isDeleted:
        description: Sign for deleted record. Optional. *Partial Update operation* only.
        type: boolean
  Setup_WorkflowType_workflowPermissionInfo:
    required:
      - role
    type: object
    description: Workflow Permission Info Object definition
    properties:
      role:
        description: |-
          The id string (GUID) or Name of Workflow permission.
          GET operation returns id string (GUID).
        type: string
      flags:
        description: |-
          Array of Workflow Instance Permissions\
          _AllFormFieldAccess_ = ViewAllFormFields, EditAllFormFields, OverrideAllFormFields\
          _FullAccess_ = all permissions
        type: string
        enum:
          - NoAccess
          - Close
          - Reopen
          - Delete
          - Rename
          - Assign
          - Schedule
          - AssociateObjects
          - AssociateDocuments
          - AddComments
          - ViewComments
          - ViewHistory
          - Open
          - Report
          - SetWorkflowID
          - CompleteUnderlying Task
          - ViewUnderlying Task
          - ViewAllFormFields
          - EditAllFormFields
          - OverrideAllFormFields
          - AllFormFieldAccess
          - FullAccess
  Setup_WorkflowType_stepPermissionsInfo:
    required:
      - role
      - steps
    type: object
    description: Step Permissions Info Object definition
    properties:
      role:
        description: |-
          The id string (GUID) or Name of any Step role, Other role or predefined (Assignee, Creator, "Previous Assignee") role but "Workflow Manager".
          GET operations returns id string (GUID).
        type: string
      isDeleted:
        description: Sign for delete this step permission info. Optional. *Partial Update operation* only.
        type: boolean
      steps:
        description: Array of Workflow Step Permissions. Required if not isDeleted
        type: array
        items:
          $ref: '#/definitions/Setup_WorkflowType_stepPermission'
  Setup_WorkflowType_stepPermission:
    required:
      - step
    type: object
    description: Step Permission definition
    properties:
      step:
        description: The workflow step id string (GUID) or Name.
        type: string
      allGlobal:
        default: NoAccess
        description: All Global Form Fields. Optional. Override includes View & Edit, Edit includes View
        type: string
        enum:
          - NoAccess
          - View
          - Edit
          - Override
          - FullAccess
      allLocal:
        default: NoAccess
        description: All Local Form Fields. Optional. Override includes View & Edit, Edit includes View
        type: string
        enum:
          - NoAccess
          - View
          - Edit
          - Override
          - FullAccess
      formFields:
        $ref: '#/definitions/Setup_WorkflowType_udfIdOrNameMapToWorkflowStepPermission'
  Setup_WorkflowType_poorUsersInfo:
    type: object
    description: Role Users with restrictions. Not required. Returned by *Get operations* only if that users are found.
    properties:
      notFound:
        description: Array of id string (GUID) of Users with not founded login.
        type: array
        items:
          type: string
      deleted:
        description: '''Array of id string (GUID) and name of Users marked as deleted.'''
        type: array
        items:
          $ref: '#/definitions/Setup_WorkflowType_idNamePair'
      expired:
        description: '''Array of id string (GUID) and name of Users are expired.'''
        type: array
        items:
          $ref: '#/definitions/Setup_WorkflowType_idNamePair'
  Setup_WorkflowType_idNamePair:
    type: object
    description: id and Name Pair.
    properties:
      id:
        description: Id string (GUID)
        type: string
      name:
        description: name
        type: string
  Setup_WorkflowType_idNameVersion:
    type: object
    description: id, name and version of object.
    properties:
      id:
        description: Id string (GUID)
        type: string
      name:
        description: name
        type: string
      version:
        description: version
        type: number
  Setup_WorkflowType_userInfo:
    type: object
    description: id, name and login of User.
    properties:
      id:
        description: Id string (GUID) of the User
        type: string
      name:
        description: login of the User
        type: string
      firstName:
        description: First name of the User
        type: string
      lastName:
        description: Last name of the User
        type: string
  Setup_WorkflowType_groupInfo:
    type: object
    description: id, name and users of Group.
    properties:
      id:
        description: Id string (GUID) of the User
        type: string
      name:
        description: login of the User
        type: string
      users:
        description: Array of users
        type: array
        items:
          $ref: '#/definitions/Setup_WorkflowType_userInfo'
  Setup_WorkflowType_workflowTypeGeneralBody:
    type: object
    description: Workflow Type General properties
    properties:
      newName:
        description: 'The new name of workflow type. '
        type: string
      idGenScheme:
        description: |-
          The id string (GUID) for the generating scheme. Optional. If not specified or empty it uses default value.\
          _{Workflow Type}_ - The name of the Workflow Type\
          _{Version}_ - The three digit (000-999) version number of the Workflow Type\
          _{Year}_ - The four digit numeric designation for the current year\
          _{Month}_ - The two digit numeric designation for the current month\
          _{Day}_ - The two digit numeric designation for the current day\
          _{Hour}_ - The two digit (24-hour format) numeric designation for the current hour\
          _{Minute}_ - The two digit (00-59) numeric designation for the current minute within the hour\
          _{AlphaID}_ - The first 12 hexadecimal characters obtained from a Uniqueidentifier value\
          _{NumericID}_ - The 9 digits composed of the next available integer value in a sequence starting at 000000001 and ending at 999999999
        type: string
      description:
        description: The description of workflow type.
        type: string
      forAppConfiguration:
        description: Represent a Workflow Type Used for Configuration.
        type: boolean
  Setup_WorkflowType_workflowTypeCopyBody:
    type: object
    description: Workflow Type Copy parameters
    properties:
      name:
        description: 'The new name of workflow type. '
        type: string
      idGenScheme:
        description: |-
          The id string (GUID) for the generating scheme. Optional. If not specified or empty it uses default value.\
          _{Workflow Type}_ - The name of the Workflow Type\
          _{Version}_ - The three digit (000-999) version number of the Workflow Type\
          _{Year}_ - The four digit numeric designation for the current year\
          _{Month}_ - The two digit numeric designation for the current month\
          _{Day}_ - The two digit numeric designation for the current day\
          _{Hour}_ - The two digit (24-hour format) numeric designation for the current hour\
          _{Minute}_ - The two digit (00-59) numeric designation for the current minute within the hour\
          _{AlphaID}_ - The first 12 hexadecimal characters obtained from a Uniqueidentifier value\
          _{NumericID}_ - The 9 digits composed of the next available integer value in a sequence starting at 000000001 and ending at 999999999
        type: string
  Setup_WorkflowType_udfIdOrNameMapToWorkflowStepPermission:
    description: |-
      Dictionary of Form Field permissions. Optional. Dictionary of "udfIdOrName":"workflowStepPermission".\
      GET operations return id string (GUID) as key "udfIdOrName".
    properties:
      udfIdOrName:
        type: string
        enum:
          - NoAccess
          - View
          - Edit
          - Override
          - FullAccess
    additionalProperties:
      type: string
      enum:
        - NoAccess
        - View
        - Edit
        - Override
        - FullAccess
  Setup_WorkflowType_workflowTypeDeleteResultInfo:
    description: Workflow Type Result Structure
    properties:
      notfound:
        description: Array of id string (GUID) of the workflow type not founded while deleting
        type: array
        items:
          type: string
      deleted:
        description: Array of id string (GUID) of the succesfully deleted workflow types
        type: array
        items:
          type: string
  Setup_WorkflowType_workflowTypesDeleteBody:
    description: Workflow Types parameter Structure
    properties:
      typeIdOrNames:
        description: Array of id string (GUID) or names of the workflow types
        type: array
        items:
          type: string
