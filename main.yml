openapi: 3.0.1
info:
  title: EMS Rest API.
  description: ' https://userdocs.cority.com/articles/#!fordevelopers/tools'
  version: ""
components:
  schemas:
    Authenticate_authenticateInfo:
      type: object
      properties:
        username:
          type: string
          description: The username string.
        password:
          type: string
          description: The password string.
      description: Authenticate info.
    Authenticate_authenticateByCertInfo:
      type: object
      properties:
        encryptedUserName:
          type: string
          description: The encrypted username string.
        certUniqueId:
          type: string
          description: The unique id string for the certification.
      description: Authenticate by Cert info
    Authenticate_sessionInfo:
      type: object
      properties:
        id:
          type: string
          description: The id string (GUID) of the session.
        homeSystemId:
          type: string
          description: The id string of the User Home System.
        currentSystemId:
          type: string
          description: The id string of the User current System.
        systems:
          $ref: '#/components/schemas/Authenticate_sessionSystem'
        sessionTimeout:
          type: string
          description: The minutes remaining in the User session.
        userTimeZone:
          $ref: '#/components/schemas/Authenticate_timeZone'
        appSettings:
          $ref: '#/components/schemas/Authenticate_appSetting'
      description: Represents a User session in the Management System.
    Authenticate_appSetting:
      type: object
      properties:
        key:
          type: object
          properties: {}
          description: App settings key.
    Authenticate_sessionSystem:
      required:
      - default
      type: object
      properties:
        default:
          type: string
      additionalProperties:
        type: string
    Authenticate_timeZone:
      type: object
      properties:
        name:
          type: string
          description: The name of the time zone.
          format: number
        stdOffset:
          type: string
          description: The offset in minutes from UTC during standard time.
          format: number
        dstOffset:
          type: string
          description: The offset in minutes from UTC during daylight savings time
            (DST). This property will be identical to "stdOffset" for time zones that
            do not observe DST.
          format: number
        currentOffset:
          type: string
          description: The current offset in minutes from UTC (which can change upon
            whether the time zone is currently observing DST or not).
          format: number
      description: "Describes a time zone, including its offsets from UTC."
    Command_commandInfo:
      type: object
      properties:
        id:
          type: string
          description: The id string (GUID) of the command.
        description:
          type: string
          description: The system description of the command.
        issued:
          type: string
          description: The date and time the command was issued. The value is in the
            User's time zone.
        startedProcessing:
          type: string
          description: The date and time the command begin processing. The value is
            in the User's time zone. The value is null if processing has not yet begun.
        finishedProcessing:
          type: string
          description: The date and time the command finished processing. The value
            is in the User's time zone. The value is null if processing has not yet
            finished.
        status:
          type: string
          description: "The status of the command; which will be one of: Waiting,\
            \ Processing, Succeeded, Failed, Resubmitted."
        objects:
          type: string
          description: An array of object paths
        reports:
          type: string
          description: An array of Report paths
        user:
          type: string
          description: The user name of the User who submitted the command.
        result:
          type: string
          description: An optional URI pointing to the result of the command.
        errorInfo:
          type: string
          description: An array of JSON object literals with the following properties:error
            The text of the error description.
        details:
          type: string
          description: An array of JSON object literals describing the error details
            for each error. The format depends upon the type of data submitted.
      description: Information about a User-requested asynchronous operation.
    ComplianceModel_locationCreateInfo:
      type: object
      properties:
        locationInfo:
          type: object
          properties: {}
          description: A locationInfo structure
        copyFrom:
          type: string
          description: The full path to an existing Location whose content (child
            Locations and Requirements) will be copied and used as the content of
            the newly created Location.
      description: CreateCopy body
    ComplianceModel_locationInfo:
      type: object
      properties:
        id:
          type: string
          description: "The id string (GUID) for the object. Ignored for: Create Location,\
            \ Update Location"
        name:
          type: string
          description: "Name of the object. Required for: Create Location"
        type:
          type: string
          description: "The type of object. Supported types are: Division, Facility,\
            \ Unit, POI. Ignored for: Update Location"
        parentPath:
          type: string
          description: "The full path for the parent object. When creating an object,\
            \ in order to place it at the top level of the System Model, you may specify\
            \ a path value for the root \\\"/\\\". Updating the parent path serves\
            \ to move an existing object to another parent. Required for: Create Location"
        parentPathLocalized:
          type: string
          description: The full path for the parent object in current user culture
            (read-only)
        timeZone:
          type: object
          description: "A supported time zone structure. Only the name of the time\
            \ zone is used when creating Facility objects.Required for: Create Location\
            \ (when creating a Facility only the name is used). Ignored for: Create\
            \ Location (when not creating a Facility), Update Location"
          allOf:
          - $ref: '#/components/schemas/ComplianceModel_timeZone'
        activeDate:
          type: string
          description: An active date of the Requirement.
          format: date-time
        inactiveDate:
          type: string
          description: An inactive date of the Requirement.
          format: date-time
        responsibleUser:
          type: string
          description: A user name.
        fieldTemplate:
          type: string
          description: "An id string (GUID) or name of a Custom Field Template. Any\
            \ string that matches the pattern of a GUID is interpreted as an id string,\
            \ and not a name."
        fieldValues:
          type: array
          description: An array of Custom Field values.
          items:
            $ref: '#/components/schemas/ComplianceModel_customFieldValue'
        namelocalized:
          type: array
          description: An array of localized name values.
          items:
            $ref: '#/components/schemas/ComplianceModel_localizedValue'
        description:
          type: string
          description: A description of the object.
        address:
          type: object
          description: An instance of the address structure. This property is only
            used for Facility objects.
          allOf:
          - $ref: '#/components/schemas/ComplianceModel_addressInfo'
        documents:
          type: array
          description: "An Array of Document paths, specifying zero or more Documents\
            \ which are or should be attached to the object."
          items:
            $ref: '#/components/schemas/ComplianceModel_docPath'
        geoLocation:
          type: object
          description: A GeoLocation instance. This property is not used for Division
            objects.
          allOf:
          - $ref: '#/components/schemas/ComplianceModel_geoLocation'
        isSensitiveData:
          type: boolean
          description: Indicates that this is sensitive data.
        CorityLink:
          type: boolean
          description: Identifier object from GX2.
        CorityCachedID:
          type: integer
          description: Identifier object from GX2.
      description: Compliance Object definition
    ComplianceModel_addressInfo:
      type: object
      properties:
        street1:
          type: string
          description: The street address.
        street2:
          type: string
          description: A second line for the street address.
        street3:
          type: string
          description: A third line for the street address.
        city:
          type: string
          description: The city.
        county or region:
          type: string
          description: "An optional county, region or district."
        stateOrProvince:
          type: string
          description: The two-character state or province code.
        country:
          type: string
          description: The two-character country code.
        postalCode:
          type: string
          description: The ten-character zip or postal code.
      description: Describes a physical mailing address.
    ComplianceModel_geoLocation:
      type: object
      properties:
        latitude:
          type: string
          description: "The latitude in degrees and minutes, expressed as a decimal.\
            \ For example: 32.71 (defaults to North)"
          format: number
        longitude:
          type: string
          description: "The longitude in degrees and minutes, expressed as a decimal.\
            \ For example: 117.16 (defaults to West)"
          format: number
      description: Describes a location by its geographical coordinates.
    ComplianceModel_localizedValue:
      type: object
      properties:
        value:
          type: string
          description: any text that can pass validation of name
        culture:
          type: string
          description: "language code (like: en-us)"
      description: A set of one or more localized values.
      example:
        application/text: |-
          // Any language code supported by application
          {"value": "Test", "culture": "en-us"}
    ComplianceModel_customFieldValue:
      type: object
      properties:
        name:
          type: string
          description: The name (NOT caption) of the Custom Field.
        values:
          type: array
          description: "An Array with one or more string values, representing the\
            \ values (one or more) for the Custom Field.  Note that even non-string\
            \ simple values are encoded as strings for custom fields, and are parsed\
            \ and validated on the server according to the Custom Field type."
          items:
            minLength: 1
            type: string
      description: "A set of one or more values for a Custom Field, identified by\
        \ name."
      example:
        application/text: "// Scalar value.\n{\"name\": \"Aspect\", \"values\": [\"\
          Air pollution control\"]}\n// Scalar date/time value.\n{\"name\": \"Start\
          \ Date\", \"values\": [\"2012-09-19T20:00\"]}\n// Multi-select values.\n\
          {\"name\": \"Type\", \"values\": [\"Spill\", \"Near Miss\"]}\n// Linked-list\
          \ values.\n{\"name\": \"Category\", \"values\": [\"Cat1\", \"Cat1.1\", \"\
          Cat1.1.1\"]}\n// Hyperlink values.\n{\"name\": \"Google\", \"values\": [{\
          \ \"label\": \"Google\": \"url\": \"http://www.google.com\"]} "
    ComplianceModel_timeZone:
      type: object
      properties:
        name:
          type: string
          description: The name of the time zone.
          format: number
        stdOffset:
          type: string
          description: The offset in minutes from UTC during standard time.
          format: number
        dstOffset:
          type: string
          description: The offset in minutes from UTC during daylight savings time
            (DST). This property will be identical to "stdOffset" for time zones that
            do not observe DST.
          format: number
        currentOffset:
          type: string
          description: The current offset in minutes from UTC (which can change upon
            whether the time zone is currently observing DST or not).
          format: number
      description: "Describes a time zone, including its offsets from UTC."
    ComplianceModel_overridesInfo:
      type: object
      properties:
        roleOverrides:
          type: array
          description: '''Array of pairs of role overrides.'''
          items:
            $ref: '#/components/schemas/ComplianceModel_workflowRoleOverride'
        policiesOverride:
          type: array
          description: '''Array of pairs of policy overrides'''
          items:
            $ref: '#/components/schemas/ComplianceModel_workflowPoliciesOverride'
      description: Role and Policies overrides object.
    ComplianceModel_workflowRoleOverride:
      type: object
      properties:
        role:
          type: object
          description: workflow Role with specified Id or Name. Can be passed by id
            or name if id is missed for Update or Delete operations.
          allOf:
          - $ref: '#/components/schemas/ComplianceModel_idNamePair'
        users:
          type: array
          description: "'Array of pairs of id and/or name of users. Allowed Id only\
            \ for Update operation, Name should be ignored.'"
          items:
            $ref: '#/components/schemas/ComplianceModel_idNamePair'
        groups:
          type: array
          description: '''Array of pairs of id and name of groups. Can be passed by
            id or name if id is missed for Update or operation.'''
          items:
            $ref: '#/components/schemas/ComplianceModel_idNamePair'
      description: Role with overridden membership.
    ComplianceModel_workflowPoliciesOverride:
      type: object
      properties:
        workflowType:
          type: object
          description: workflow Type with specified Id or Name
          allOf:
          - $ref: '#/components/schemas/ComplianceModel_idNamePair'
        policies:
          type: array
          description: '''Array of pairs of id and name of used policies.'''
          items:
            $ref: '#/components/schemas/ComplianceModel_idNamePair'
      description: workflow Type with overridden policies.
    ComplianceModel_idNamePair:
      type: object
      properties:
        id:
          type: string
          description: Id string (GUID)
        name:
          type: string
          description: name
      description: id and Name Pair.
    ComplianceModel_docPath:
      type: string
      description: "The hierarchical path to a document as represented by the system\
        \ model folder structure, beginning with a single forward slash and with elements\
        \ separated by a single forward slash &quot;/&quot;. Does not include the\
        \ container object (Documents) Example: /Folder1/Subfolder1/Sub-subfolder/DocumentName"
    Document_documentCreate:
      type: object
      properties:
        documentInfo:
          type: array
          description: A documentInfo structure
          items:
            $ref: '#/components/schemas/Document_documentInfo'
        copyFrom:
          type: string
          description: The full path to an existing Document whose content will be
            copied and used as the content of the new Document. Specifying this property
            allows you to copy an existing Document to another location in Document
            Manager. This property will be ignored if the "content" property of documentInfo
            has a value.
      description: Creation info for Document
    Document_documentInfo:
      type: object
      properties:
        id:
          type: string
          description: The id string (GUID) of the Document. May be empty for Create
            Document and Update Document
        name:
          type: string
          description: The name of the Document. May be empty or null for Update Document
            and field will not be modified
        mimeType:
          type: string
          description: The mime type of the Document. If left unspecified when creating
            or updating a Document the application will assign a mime type according
            to the file extension.
        fileName:
          type: string
          description: "The original file name of the Document. This is only required\
            \ when the content property is used. It allows the Management System to\
            \ detect the mime type and use it for the Download Document API. May be\
            \ empty or null for Update Document and field will not be modified. Required\
            \ for Create Document, Update Document if content is specified. Ignored\
            \ for Get Document"
        description:
          type: string
          description: The description of the Document.
        folder:
          type: string
          description: "The id string (GUID) or full path of the Document Folder in\
            \ which this Document is placed. Any string that matches the pattern of\
            \ a GUID is interpreted as the id string, and not the path of the Folder."
        content:
          type: string
          description: "The content of the Document, Base64 encoded."
        contentUrl:
          type: string
          description: "The url for the Document content. In the case of Documents\
            \ hosted outside of Document Manager, this url will be the value specified\
            \ for the Document location."
        version:
          type: integer
          description: "The version number of the Document. Currently, only the latest\
            \ version is returned. Ignored for: Create Document, Update Document"
        objects:
          type: string
          description: "An optional array of Compliance Model object id strings (GUIDs)\
            \ or paths, specifying zero or more Objects to which the Document is associated.\
            \ Any string that matches the pattern of a GUID is interpreted as an id\
            \ string, and not a path."
        tasks:
          type: string
          description: "An optional array of Task id strings (GUIDs), specifying zero\
            \ or more Tasks to which the Document is associated."
        workflows:
          type: string
          description: "An optional array of Workflow id strings (GUIDs) or unique\
            \ ids, specifying zero or more Workflows to which the Document is associated.\
            \ Any string that matches the pattern of a GUID is interpreted as an id\
            \ string, and not a unique id."
      description: "Information about a Document in Document Manager. If contentUrl\
        \ is specified during a call to Create Document or Update Document, then the\
        \ latest version of the Document will simply be a URL to the content hosted\
        \ at this location."
    Document_documentFolderInfo:
      type: object
      properties:
        id:
          type: string
          description: "The id string (GUID) of the Folder. Ignored for: Create Document\
            \ Folder, Update Document Folder"
        name:
          type: string
          description: The name of the Folder.
        description:
          type: string
          description: The description of the Folder.
        parentFolderIdOrPath:
          type: string
          description: "The id string (GUID) or full path of the Document Folder in\
            \ which this Folder is placed. Any string that matches the pattern of\
            \ a GUID is interpreted as the id string, and not the path of the parent\
            \ Folder. The path of a Folder should be URL encoded."
        copyFrom:
          type: string
          description: The full path to an existing Document whose content will be
            copied and used as the content of the new Document. Specifying this property
            allows you to copy an existing Document to another location in Document
            Manager. This property will be ignored if the "content" property of documentInfo
            has a value.
      description: Information about a Folder in Document Manager.
    Document21_documentCreate:
      type: object
      properties:
        documentInfo:
          type: array
          description: A documentInfo structure
          items:
            $ref: '#/components/schemas/Document21_documentInfo'
        copyFrom:
          type: string
          description: The full path to an existing Document whose content will be
            copied and used as the content of the new Document. Specifying this property
            allows you to copy an existing Document to another location in Document
            Manager. This property will be ignored if the "content" property of documentInfo
            has a value.
      description: Creation info for Document
    Document21_documentInfo:
      type: object
      properties:
        id:
          type: string
          description: The id string (GUID) of the Document. May be empty for Create
            Document and Update Document
        name:
          type: string
          description: The name of the Document. May be empty or null for Update Document
            and field will not be modified
        mimeType:
          type: string
          description: The mime type of the Document. If left unspecified when creating
            or updating a Document the application will assign a mime type according
            to the file extension.
        fileName:
          type: string
          description: "The original file name of the Document. This is only required\
            \ when the content property is used. It allows the Management System to\
            \ detect the mime type and use it for the Download Document API. May be\
            \ empty or null for Update Document and field will not be modified. Required\
            \ for Create Document, Update Document if content is specified. Ignored\
            \ for Get Document"
        description:
          type: string
          description: The description of the Document.
        folder:
          type: string
          description: "The id string (GUID) or full path of the Document Folder in\
            \ which this Document is placed. Any string that matches the pattern of\
            \ a GUID is interpreted as the id string, and not the path of the Folder."
        content:
          type: string
          description: "The content of the Document, Base64 encoded."
        contentUrl:
          type: string
          description: "The url for the Document content. In the case of Documents\
            \ hosted outside of Document Manager, this url will be the value specified\
            \ for the Document location."
        version:
          type: integer
          description: "The version number of the Document. Currently, only the latest\
            \ version is returned. Ignored for: Create Document, Update Document"
        objects:
          type: string
          description: "An optional array of Compliance Model object id strings (GUIDs)\
            \ or paths, specifying zero or more Objects to which the Document is associated.\
            \ Any string that matches the pattern of a GUID is interpreted as an id\
            \ string, and not a path."
        tasks:
          type: string
          description: "An optional array of Task id strings (GUIDs), specifying zero\
            \ or more Tasks to which the Document is associated."
        workflows:
          type: array
          description: An optional array of objects Workflow id strings (GUIDs) and
            CustomField id strings (GUIDs).
          items:
            $ref: '#/components/schemas/Document21_workflowsInfo'
      description: "Information about a Document in Document Manager. If contentUrl\
        \ is specified during a call to Create Document or Update Document, then the\
        \ latest version of the Document will simply be a URL to the content hosted\
        \ at this location."
    Document21_workflowsInfo:
      type: object
      properties:
        workflowIdOrUniqueId:
          type: string
          description: The id string (GUID) of the Workflow.
        customFieldIdOrName:
          type: string
          description: The id string (GUID) of the CustomField.
      description: description.
    Document21_documentFolderInfo:
      type: object
      properties:
        id:
          type: string
          description: "The id string (GUID) of the Folder. Ignored for: Create Document\
            \ Folder, Update Document Folder"
        name:
          type: string
          description: The name of the Folder.
        description:
          type: string
          description: The description of the Folder.
        parentFolderIdOrPath:
          type: string
          description: "The id string (GUID) or full path of the Document Folder in\
            \ which this Folder is placed. Any string that matches the pattern of\
            \ a GUID is interpreted as the id string, and not the path of the parent\
            \ Folder. The path of a Folder should be URL encoded."
        copyFrom:
          type: string
          description: The full path to an existing Document whose content will be
            copied and used as the content of the new Document. Specifying this property
            allows you to copy an existing Document to another location in Document
            Manager. This property will be ignored if the "content" property of documentInfo
            has a value.
      description: Information about a Folder in Document Manager.
    Setup_EnvianceApp_packageCreateInfo:
      type: object
      properties:
        packageCreateInfo:
          type: array
          description: A packageInfo structure
          items:
            $ref: '#/components/schemas/Setup_EnvianceApp_packageInfo'
        copyFrom:
          type: string
          description: The name of an existing Enviance App whose content is to be
            copied and used as the content of the newly created App.
      description: Create Copy Package Item info
    Setup_EnvianceApp_packageInfoResponse:
      type: object
      description: Response of GET operation
    Setup_EnvianceApp_packageInfo:
      type: object
      properties:
        id:
          type: string
          description: "The id string (GUID) for the Enviance App. Ignored for: Create\
            \ Enviance App, Update Enviance App"
        name:
          type: string
          description: "The name of the Enviance App. Required for: Create Enviance\
            \ App"
        description:
          type: string
          description: The description of the Enviance App.
        content:
          type: string
          description: "The content of the Package in a zip file, Base64 encoded."
        displayPage:
          type: string
          description: "The path, relative to the root of the Enviance App, to an\
            \ Item which can serve as default page to be displayed when loading the\
            \ App. This should be an HTML page."
        iconSrc:
          type: string
          description: "The path, relative to the root of the Enviance App, to an\
            \ Item which can serve as the icon for the Enviance App, typically an\
            \ image file."
        isLocked:
          type: boolean
          description: A Boolean flag indicating whether or not the Enviance App is
            locked.
        created:
          type: string
          description: "The date and time when the Enviance App was first created.\
            \ Ignored for: Create Enviance App, Update Enviance App"
        createdBy:
          type: string
          description: "The User name of the User who first created the Enviance App.\
            \ Ignored for: Create Enviance App, Update Enviance App"
        lastModified:
          type: string
          description: "The date and time when the Enviance App was last modified.\
            \ Ignored for: Create Enviance App, Update Enviance App"
          format: date-time
      description: The properties and metadata for an Enviance App (Package).
    Setup_EnvianceApp_packageItemCreateInfo:
      type: object
      properties:
        packageItemInfo:
          type: array
          description: A packageItemInfo structure
          items:
            $ref: '#/components/schemas/Setup_EnvianceApp_packageItemInfo'
        copyFrom:
          type: string
          description: "The path, relative to the root of the App, of an existing\
            \ Enviance App Item within the same App, whose content is to be copied\
            \ and used as the content of the newly created App Item."
      description: Create Copy Package Item info
    Setup_EnvianceApp_packageItemInfo:
      type: object
      properties:
        id:
          type: string
          description: "The id string (GUID) for the Item. Ignored for: Create Enviance\
            \ App Item, Update Enviance App Item"
        packageIdOrName:
          type: string
          description: "The id string (GUID) or name for the Enviance App to which\
            \ this Item belongs. Any string that matches the pattern of a GUID is\
            \ interpreted as the id string, and not the name. Ignored for: Create\
            \ Enviance App Item, Update Enviance App Item"
        path:
          type: string
          description: "The path to this Item, relative to the root of the Enviance\
            \ App."
        type:
          type: string
          description: "The Type of the Item. See Enviance App Items for a list of\
            \ valid Types. Ignored for: Create Enviance App Item, Update Enviance\
            \ App Item"
        content:
          type: string
          description: "The content of the Item, Base64 encoded."
      description: "The properties, metadata and content for an Enviance App (Package)\
        \ Item."
    Integration_EQL_eqlTable:
      type: object
      properties:
        columns:
          type: array
          description: "An array of column descriptions, including name, data type,\
            \ and maximum size."
          items:
            type: string
        rows:
          type: array
          description: "An array of value arrays, in which the ordinal entries in\
            \ the array correspond with the columns in the columns array."
          items:
            type: string
      description: EQL result table
    Integration_EQL_eqlDataViewInfo:
      type: object
      properties:
        title:
          type: string
          description: Title of data view
        eqlname:
          type: string
          description: Name of data view
        eql:
          type: string
          description: The EQL (string) to save. The EQL must be URL encoded.
        description:
          type: string
          description: description
        metadata:
          type: string
          description: metadata info
      description: Data view info
    Integration_EQL_eqlDataViewFullInfo:
      type: object
      properties:
        id:
          type: string
          description: The id string (GUID) for the DataView.
        title:
          type: string
          description: Title of data view
        eqlname:
          type: string
          description: Name of data view
        eql:
          type: string
          description: The EQL (string) to save. The EQL must be URL encoded.
        description:
          type: string
          description: Description
        metadata:
          type: string
          description: Metadata info
        columns:
          type: array
          description: List of saved columns
          items:
            $ref: '#/components/schemas/Integration_EQL_columnInfo'
      description: Data view info.
    Integration_EQL_columnInfo:
      type: object
      properties:
        name:
          type: string
          description: Name of column
        size:
          type: integer
          description: Column size
        type:
          type: string
          description: Column type
      description: Column info
    Integration_EQL_eqlExecutionInfo:
      type: object
      properties:
        eql:
          type: string
          description: The EQL (string) to save. The EQL must be URL encoded.
        page:
          type: integer
          description: The page number within the entire result set to return. Optional.
        pagesize:
          type: integer
          description: The number of records for each page. Maximum page size is 1000.
            Optional.
        format:
          type: string
          description: format for result. Optional.
          enum:
          - Json
          - Xml
          - Csv
          - Xls
          - Xlsx
          - Xlsm
        filename:
          type: string
          description: Filename for saving result. Optional.
        cachecontrol:
          type: string
          description: Http Header parameter "Cache-Control". Optional.
        excelTemplateIdOrPath:
          type: string
          description: "Either an id string (GUID), or a path string uniquely identifying\
            \ the document where uploaded Excel Template which will be applied to\
            \ eql query result. Optional."
        excelSheetNames:
          type: string
          description: "An Array of excel sheet names, which will be applied for all\
            \ eql results. Optional."
        excelHeaderCells:
          type: array
          description: Structure for specifying additional header lines in the resulting
            Excel file.
          items:
            $ref: '#/components/schemas/Integration_EQL_eqlReportCell'
        additionalSheets:
          type: array
          description: Additional sheet tabs
          items:
            $ref: '#/components/schemas/Integration_EQL_eqlReportSheet'
      description: Eql Execution info
    Integration_EQL_eqlReportSheet:
      type: object
      properties:
        name:
          type: string
          description: Tab name
        cells:
          type: array
          description: Structure for specifying cells on additional tab
          items:
            $ref: '#/components/schemas/Integration_EQL_eqlReportCell'
      description: Structure for additional sheet tabs
    Integration_EQL_eqlReportCell:
      type: object
      properties:
        row:
          type: integer
          description: cell row number
        column:
          type: integer
          description: cell column number
        value:
          type: string
          description: cell value
        type:
          type: string
          description: allowed cell format type
          enum:
          - "n"
          - s
        style:
          $ref: '#/components/schemas/Integration_EQL_eqlReportCellStyle'
      description: Report cell structure
    Integration_EQL_eqlReportCellStyle:
      type: object
      properties:
        font:
          $ref: '#/components/schemas/Integration_EQL_eqlReportCellStyleFont'
        numFmt:
          type: string
          description: numeric format.
        alignment:
          $ref: '#/components/schemas/Integration_EQL_eqlReportCellStyleAlignment'
      description: Cell style structure.
    Integration_EQL_eqlReportCellStyleFont:
      type: object
      properties:
        bold:
          type: boolean
          description: Sign that cell has a bold font style.
        sz:
          type: integer
          description: Size of the font.
      description: Cell style font.
    Integration_EQL_eqlReportCellStyleAlignment:
      type: object
      properties:
        horizontal:
          type: string
          description: Cell style horizontal alignment .
          enum:
          - left
          - right
      description: Cell style alignment.
    Event_eventInfo:
      type: object
      properties:
        id:
          type: string
          description: "The id string (GUID) for the Event. Ignored for: Create Event,\
            \ Update Event"
        name:
          type: string
          description: Name of the Event.
        beginDate:
          type: string
          description: "The begin date for the Event. Required for: Create Event.\
            \ Ignored for: Update Event if the Event is an Automatic Event."
          format: date-time
        endDate:
          type: string
          description: "The end date for the Event. Required for: Create Event. Ignored\
            \ for: Update Event if the Event is an Automatic Event."
          format: date-time
        taskId:
          type: string
          description: "The id string for the Task associated with the Event, if there\
            \ is one. Ignored for: Create Event, Update Event "
        state:
          type: string
          description: One of either "Open" or "Closed".
        complianceType:
          type: string
          description: One of either "Internal" or "Regulatory".
        acceptAsDeviation:
          type: boolean
          description: A Boolean flag indicating whether or not this Event should
            be accepted as a compliance deviation.
        requirementIdOrPath:
          type: string
          description: "A Compliance Model object id string (GUID) or path, specifying\
            \ a Requirement to which the Event is associated. Any string that matches\
            \ the pattern of a GUID is interpreted as an id string, and not a path.\
            \ Ignored for: Update Event if the Event is an Automatic Event."
        fields:
          type: array
          description: "An array of CustomFields, representing the Event Field values\
            \ for the Event."
          items:
            $ref: '#/components/schemas/Event_customFieldValue'
        documents:
          type: array
          description: "An Array of Document paths, specifying zero or more Documents\
            \ which are or should be attached to the object."
          items:
            $ref: '#/components/schemas/Event_docPath'
      description: Represents an Event.
    Event_customFieldValue:
      type: object
      properties:
        name:
          type: string
          description: The name (NOT caption) of the Custom Field.
        values:
          type: string
          description: "An array with one or more string values, representing the\
            \ values (one or more) for the Custom Field.  Note that even non-string\
            \ simple values are encoded as strings for custom fields, and are parsed\
            \ and validated on the server according to the Custom Field type."
      description: "A set of one or more values for a Custom Field, identified by\
        \ name."
    Event_docPath:
      type: string
      description: "The hierarchical path to a document as represented by the system\
        \ model folder structure, beginning with a single forward slash and with elements\
        \ separated by a single forward slash &quot;/&quot;. Does not include the\
        \ container object (Documents) Example: /Folder1/Subfolder1/Sub-subfolder/DocumentName"
    Setup_FormTemplate_FormTemplateRequestInfo:
      type: object
      properties:
        formTemplateInfo:
          $ref: '#/components/schemas/Setup_FormTemplate_FormTemplateReqInfo'
    Setup_FormTemplate_FormTemplateInfo:
      type: object
      properties:
        id:
          type: string
          format: GUID
        name:
          type: string
          format: string
        description:
          type: string
          format: string
        versionId:
          type: string
          format: GUID
        version:
          type: integer
        versionComment:
          type: string
          format: string
        udfs:
          type: array
          items:
            $ref: '#/components/schemas/Setup_FormTemplate_Udfs'
    Setup_FormTemplate_FormTemplateReqInfo:
      type: object
      properties:
        name:
          type: string
          format: string
        description:
          type: string
          format: string
        versionId:
          type: string
          format: GUID
        version:
          type: integer
        versionComment:
          type: string
          format: string
        udfs:
          type: array
          items:
            $ref: '#/components/schemas/Setup_FormTemplate_UdfsReqInfo'
    Setup_FormTemplate_Udfs:
      type: object
      properties:
        id:
          type: string
          format: GUID
        name:
          type: string
          format: string
        type:
          type: string
          format: string
        valueEntryMethod:
          type: string
          format: string
        isSensitiveData:
          type: boolean
        order:
          type: integer
        scripts:
          type: array
          items:
            $ref: '#/components/schemas/Setup_FormTemplate_Scripts'
        validation:
          type: array
          items:
            $ref: '#/components/schemas/Setup_FormTemplate_Validation'
    Setup_FormTemplate_UdfsReqInfo:
      type: object
      properties:
        idOrName:
          type: string
        order:
          type: integer
        scripts:
          type: array
          items:
            $ref: '#/components/schemas/Setup_FormTemplate_ScriptsReqInfo'
        validation:
          type: array
          items:
            $ref: '#/components/schemas/Setup_FormTemplate_Validation'
    Setup_FormTemplate_Scripts:
      type: object
      properties:
        beginDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        script:
          type: string
        exceptions:
          type: array
          items:
            $ref: '#/components/schemas/Setup_FormTemplate_Exceptions'
        udfDependencies:
          type: array
          items:
            $ref: '#/components/schemas/Setup_FormTemplate_UdfDependencies'
    Setup_FormTemplate_ScriptsReqInfo:
      type: object
      properties:
        beginDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        script:
          type: string
        exceptions:
          type: array
          items:
            $ref: '#/components/schemas/Setup_FormTemplate_ExceptionsReqInfo'
        udfDependencies:
          type: array
          items:
            $ref: '#/components/schemas/Setup_FormTemplate_UdfDependencies'
    Setup_FormTemplate_Exceptions:
      type: object
      properties:
        scriptID:
          type: string
        exceptionType:
          type: string
        value:
          type: number
          format: double
    Setup_FormTemplate_ExceptionsReqInfo:
      type: object
      properties:
        exceptionType:
          type: string
        value:
          type: number
          format: double
    Setup_FormTemplate_UdfDependencies:
      type: object
      properties:
        udfID:
          type: string
    Setup_FormTemplate_Validation:
      type: object
      properties:
        regEx:
          type: string
        min:
          type: string
        max:
          type: string
        length:
          type: number
        requiredValidationScope:
          type: string
        lengthValidationScope:
          type: string
        rangeValidationScope:
          type: string
        regExValidationScope:
          type: string
    Setup_FormTemplate_FormTemplateCopyInfo:
      type: object
      properties:
        sourceTemplateIdOrName:
          type: string
        newTemplateName:
          type: string
          description: Name of the form template name
      description: Create/Copy Form Template body
    Setup_FormTemplate_FormTemplateVersions:
      type: object
      properties:
        id:
          type: string
          format: GUID
        name:
          type: string
        description:
          type: string
        templateVersions:
          type: array
          items:
            $ref: '#/components/schemas/Setup_FormTemplate_TemplateVersions'
    Setup_FormTemplate_TemplateVersions:
      type: object
      properties:
        id:
          type: string
          format: GUID
        templateID:
          type: string
          format: GUID
        version:
          type: integer
        comment:
          type: string
        created:
          type: string
          format: date-time
        isCurrent:
          type: boolean
        refCount:
          type: integer
    Messages_messageInfo:
      type: object
      properties:
        id:
          type: string
          description: "The id string (GUID) for the message. Ignored for: Create\
            \ Message "
        recipientIdOrUsername:
          type: string
          description: "The id string (GUID) or username for the User to whom this\
            \ message was delivered. Any string that matches the pattern of a GUID\
            \ is interpreted as the id string, and not the username. Required for:\
            \ Create Message"
        sentByIdOrUsername:
          type: string
          description: "The id string (GUID) or username for the User who sent the\
            \ message. Any string that matches the pattern of a GUID is interpreted\
            \ as the id string, and not the username. Required for: Create Message"
        sentOn:
          type: string
          description: The date and time the message was sent.
          format: date-time
        subject:
          type: string
          description: The subject of the message.
        body:
          type: string
          description: The main text or body of the message.
        type:
          type: string
          description: "The type of message. For messages created with the Create\
            \ Message API, this will always be *EmailNotification*. Other types can\
            \ be generated from the Management System automatically. Ignored for:\
            \ Create Message"
        archived:
          type: string
          description: "The archival status of the message. The recipient may mark\
            \ the message as archived. Ignored for: Create Message"
        read:
          type: string
          description: "The read status of the message. Ignored for: Create Message"
        sendByEmail:
          type: boolean
          description: "A flag to indicate whether or not the message should be sent\
            \ to the user email (in addition to the Enviance Inbox). Default is false.\
            \ Ignored for: Get Message"
      description: The properties and content of an Management System message.
    NonNumericData_enterNonNumericDataPointInfo:
      type: object
      properties:
        nonNumericDataPoints:
          type: array
          description: An array of NonNumericDataPointInfo instances.
          items:
            $ref: '#/components/schemas/NonNumericData_nonNumericDataPointInfo'
        collector:
          type: string
          description: |
            Optional parameter. When collector is specified, then all empty NonNumericDataPointInfo.collector fields will be populated with this default value.
      description: Structure for entering NonNumericDataPointInfo datapoint array
        with optional collector field.
    NonNumericData_nonNumericDataPointInfo:
      type: object
      properties:
        requirementIdOrPath:
          type: string
          description: "The id or path of the Non-Numeric Requirement. Any string\
            \ that matches the pattern of a GUID is interpreted as the id string,\
            \ and not the path."
        completeDate:
          type: string
          description: A date and time value.
          format: date-time
        beginDate:
          type: string
          description: Begin date and time value.
          format: date-time
        endDate:
          type: string
          description: End date and time value.
          format: date-time
        collector:
          type: string
          description: Id or name of Collector
        comments:
          type: string
          description: Comment string.
        comply:
          type: string
          description: "Comply string. Valid values: \"Yes\", \"YesWithComments\"\
            , \"NA\", \"NotDetermined\""
      description: "A non-numeric datapoint description for a single Non-Numeric Requirement,\
        \ tied to a single date and time."
    NonNumericData_deleteNonNumericDataInfo:
      type: object
      properties:
        requirementIdOrPath:
          type: string
          description: "The id or path of the Non-Numeric Requirement. Any string\
            \ that matches the pattern of a GUID is interpreted as the id string,\
            \ and not the path."
        nonNumericDataPoints:
          type: string
          description: An array of Non-Numeric Datapoint Ids.
      description: A non-numeric datapoint delete info
    NumericData_numericDataPointInfo:
      type: object
      properties:
        parameterIdOrTag:
          type: string
          description: "The id or unique tag of the Parameter. Any string that matches\
            \ the pattern of a GUID is interpreted as the id string, and not the tag."
        completeDate:
          type: string
          description: A date and time value.
          format: date-time
        value:
          type: number
          description: A floating point numeric value. Both standard and scientific
            notation are valid formats.
          format: float
        qualityData:
          type: array
          description: "An optional array of CustomFieldValue structures. Only small\
            \ text, numeric, and Boolean data can be specified for quality data, and\
            \ submitting data for any other type of Custom Field will result in an\
            \ error."
          items:
            $ref: '#/components/schemas/NumericData_customFieldValue'
        collector:
          type: string
          description: Id or name of Collector
      description: "A numeric measurement for a single Parameter, tied to a single\
        \ date and time."
    NumericData_numericDataRangeInfo:
      type: object
      properties:
        parameterIdOrTag:
          type: string
          description: "The id or unique tag of the Parameter. Any string that matches\
            \ the pattern of a GUID is interpreted as the id string, and not the tag."
        beginDate:
          type: string
          description: A date and time value. This is the beginning of the date range
            in which all existing Data Points for the Parameter will be deleted.
          format: date-time
        endDate:
          type: string
          description: A date and time value. This is the end of the date range in
            which all existing Data Points for the Parameter will be deleted.
          format: date-time
      description: A time range of measurements for a single Parameter.
    NumericData_customFieldValue:
      type: object
      properties:
        name:
          type: string
          description: The name (not caption) of the Custom Field.
        values:
          type: string
          description: "An array with one or more string values, representing the\
            \ values (one or more) for the Custom Field.  Note that even non-string\
            \ simple values are encoded as strings for custom fields, and are parsed\
            \ and validated on the server according to the Custom Field type."
      description: "A set of one or more values for a Custom Field, identified by\
        \ name.  Multi-select Custom Fields are represented as an array with multiple\
        \ string values, one for each selected option. Linked List Custom Fields are\
        \ represented as an array with multiple string values, where index n of the\
        \ array holds the chosen value for level n+1 of the linked list. For example,\
        \ the values array [\"One\", \"Two\", \"Three\"] for a linked list will map\
        \ to the item \"One\" chosen in level one, \"Two\" in two, etc. Hyperlink\
        \ Fields are represented as an array with a single UrlItem."
    NumericData_rangeParamStart:
      type: object
      properties:
        relativity:
          type: string
          description: "Calculation type - Absolute or relative (Current, Previous,\
            \ Following) to current date"
          enum:
          - Current
          - Previous
          - Following
          - Absolute
        absoluteDate:
          type: string
          description: Used when relativity = Absolute. Ignored in other cases.
        periodType:
          type: string
          description: "Used when relativity = Current, Previous, Following. Calendar\
            \ prefix means shift to start of that period, i.e. \"Previous Calendar\
            \ Year\" means \"start of previous year\", \"Previous Year\" means \"\
            previous year starting from current date\". \"Current\" period allows\
            \ only Calendar types."
          enum:
          - Calendar Day
          - Calendar Month
          - Calendar Quarter
          - Calendar Year
          - Day
          - Weeks
          - Month
          - Quarters
          - Years
        periodCount:
          type: number
          description: "Used when relativity = Previous, Following. Default value\
            \ = 1. Specifies count of periodType, such as 2 Following Years."
      description: "Describes options needed to calculate start date. If calculation\
        \ is not needed, use relativity=Absolute and absoluteDate field."
    NumericData_rangeParamEnd:
      type: object
      properties:
        relativity:
          type: string
          description: "Calculation type - Absolute, Current (relative to current\
            \ date), AfterStart (relative to start date)"
          enum:
          - Current
          - AfterStart
          - Absolute
        absoluteDate:
          type: string
          description: "Used when relativity = Absolute, ignored in other case"
        periodType:
          type: string
          description: "Used when relativity = Current, AfterStart. Calendar prefix\
            \ means shift to end of that period, i.e. \"Calendar Year After Start\"\
            \ means \"end of the same calendar year as start date\", \"Previous Year\"\
            \ means \"year previous to current date\". \"Current\" period allows only\
            \ Calendar types."
          enum:
          - Calendar Day
          - Calendar Month
          - Calendar Quarter
          - Calendar Year
          - Day
          - Weeks
          - Month
          - Quarters
          - Years
        periodCount:
          type: number
          description: "Used when relativity = AfterStart. Default value = 1. Specifies\
            \ count of periodType, such as 2 Years AfterStart."
      description: "Describes options needed to calculate end date. If calculation\
        \ is not needed, use relativity=Absolute and absoluteDate field."
    NumericData_downloadExcelDataOptions:
      type: object
      properties:
        start:
          $ref: '#/components/schemas/NumericData_rangeParamStart'
        end:
          $ref: '#/components/schemas/NumericData_rangeParamEnd'
        intervalType:
          type: string
          description: "Interval that will be used to split date range, starting from\
            \ begin date. TimeBased suffix indicates strict output intervals to be\
            \ compatible with TimeBased calc (HourlyTimeBased starts from each hour\
            \ start, YearlyTimeBased starts on first day of year, etc.)."
          enum:
          - Minutes
          - Hourly
          - HourlyTimeBased
          - Daily
          - DailyTimeBased
          - Weekly
          - WeeklyTimeBased
          - Monthly
          - MonthlyTimeBased
          - Quarterly
          - QuarterlyTimeBased
          - Yearly
          - YearlyTimeBased
        factor:
          type: number
          description: ""
          format: float
        limit:
          type: number
          description: ""
          format: float
        completeDates:
          type: string
          description: "List of ISO dates, used instead of start and end."
        containerIdOrPath:
          type: string
          description: Optional parent of all requirements.
        parameterIdsOrTags:
          type: string
          description: List of requirements
        parameterWildcard:
          type: string
          description: Filter for requirements List
        includeAllChildren:
          type: string
          description: "Flag, allows include all children of containerIdOrPath"
        useFullPath:
          type: string
          description: Document will contain full path of objects
    NumericData_calc_RangeParamStart:
      type: object
      properties:
        relativity:
          type: string
          description: "Calculation type - Absolute or relative to current date (Current,\
            \ Previous, Following)"
          enum:
          - Current
          - Previous
          - Following
          - Absolute
        absoluteDate:
          type: string
          description: Used when relativity = Absolute. Ignored in other cases
        periodType:
          type: string
          description: "Used when relativity = Current, Previous, Following. Calendar\
            \ prefix means shift to start of that period, i.e. \"Previous Calendar\
            \ Year\" means \"start of previous year\", \"Previous Year\" means \"\
            previous year starting from current date\". \"Current\" period allows\
            \ only Calendar types."
          enum:
          - Calendar Day
          - Calendar Month
          - Calendar Quarter
          - Calendar Year
          - Day
          - Weeks
          - Month
          - Quarters
          - Years
        periodCount:
          type: number
          description: "Used when relativity = Previous, Following. Default value\
            \ = 1. Specifies count of periodType, such as 2 Following Years. "
      description: "Describes options needed to calculate start date. If calculation\
        \ is not needed, use relativity=Absolute and absoluteDate field."
    NumericData_calc_RangeParamEnd:
      type: object
      properties:
        relativity:
          type: string
          description: "Calculation type - Absolute, Current (relative to current\
            \ date), AfterStart (relative to start date)"
          enum:
          - Current
          - AfterStart
          - Absolute
        absoluteDate:
          type: string
          description: Used when relativity = Absolute. Ignored in other cases
        periodType:
          type: string
          description: "Used when relativity = Current, AfterStart. Calendar prefix\
            \ means shift to end of that period, i.e. \"Calendar Year After Start\"\
            \ means \"end of the same calendar year as start date\", \"Previous Year\"\
            \ means \"year previous to current date\". \"Current\" period allows only\
            \ Calendar types."
          enum:
          - Calendar Day
          - Calendar Month
          - Calendar Quarter
          - Calendar Year
          - Day
          - Weeks
          - Month
          - Quarters
          - Years
        periodCount:
          type: number
          description: "Used when relativity = AfterStart. Default value = 1. Specifies\
            \ count of periodType, such as 2 Years AfterStart."
      description: "Describes options needed to calculate end date. If calculation\
        \ is not needed, use relativity=Absolute and absoluteDate field."
    NumericData_calc_RangeOptions:
      type: object
      properties:
        start:
          $ref: '#/components/schemas/NumericData_calc_RangeParamStart'
        end:
          $ref: '#/components/schemas/NumericData_calc_RangeParamEnd'
    NumericData_calc_RangeResult:
      type: object
      properties:
        start:
          type: string
          description: Calculated start date in ISO format.
        end:
          type: string
          description: Calculated end date in ISO format.
      description: Calculated start and end dates
    NumericData_calc_PeriodOptions:
      type: object
      properties:
        start:
          $ref: '#/components/schemas/NumericData_calc_RangeParamStart'
        end:
          $ref: '#/components/schemas/NumericData_calc_RangeParamEnd'
        intervalType:
          type: string
          description: "Interval that will be used to split date range, starting from\
            \ begin date. TimeBased suffix indicates strict output intervals to be\
            \ compatible with TimeBased calc (HourlyTimeBased starts from each hour\
            \ start, YearlyTimeBased starts on first date of year, etc.)."
          enum:
          - Minutes
          - Hourly
          - HourlyTimeBased
          - Daily
          - DailyTimeBased
          - Weekly
          - WeeklyTimeBased
          - Monthly
          - MonthlyTimeBased
          - Quarterly
          - QuarterlyTimeBased
          - Yearly
          - YearlyTimeBased
        factor:
          type: number
          description: ""
          format: float
        limit:
          type: number
          description: ""
          format: float
        timezones:
          type: number
          description: "Optional. Does not change an output, just marks those periods\
            \ that do not exist in given timezones."
    NumericData_calc_RangePeriod:
      type: object
      properties:
        beginDate:
          type: string
          description: Date in ISO format.
        endDate:
          type: string
          description: Date in ISO format.
        saveDate:
          type: string
          description: Date in ISO format.
        dontExistInTimeZone:
          type: array
          description: Optional. Shows if current period does not exist for a timezone.
          items:
            type: number
    NumericData_calc_PeriodResults:
      type: array
      items:
        $ref: '#/components/schemas/NumericData_calc_RangePeriod'
    Reports_reportExecutionInfo:
      required:
      - format
      - reportIdOrPath
      type: object
      properties:
        reportIdOrPath:
          type: string
          description: "The id string (GUID) or path of the Report. Any string that\
            \ matches the pattern of a GUID is interpreted as the id string, and not\
            \ the path. A path string should be URL encoded."
        from:
          type: string
          description: "The optional date and time that will be used as the start\
            \ of the report date range filtering. The Time Zone used for this value,\
            \ and the field to which it applies, depends upon the Report being executed."
          format: date-time
        to:
          type: string
          description: "The optional date and time that will be used as the end of\
            \ the report date range filtering. The Time Zone used for this value,\
            \ and the field to which it applies, depends upon the Report being executed."
          format: date-time
        format:
          type: string
          description: Report output format.
          enum:
          - HTML
          - Excel
          - Excel Template
        parameters:
          type: array
          description: "A dictionary of arbitrary JSON values that will be matched\
            \ to available runtime Report parameters, if any."
          items:
            $ref: '#/components/schemas/Reports_reportRuntimeParameters'
      description: "If no filter criteria are specified (values for \"from\", \"to\"\
        , or \"parameters\"), the Report will be executed with its default filter\
        \ criteria (as it has been configured in the Management System), as opposed\
        \ to without any filter criteria at all. However, if any filter value is specified,\
        \ then the default criteria will not be used. All parameters are ignored for\
        \ Reports that do not support them."
    Reports_reportRuntimeParameters:
      type: object
      properties:
        objects:
          type: string
          description: "An optional array of Compliance Model object id strings (GUIDs)\
            \ or paths, specifying zero or more Objects to use for Location filtering\
            \ during Report execution. Any string that matches the pattern of a GUID\
            \ is interpreted as an id string, and not a path. Values specified here\
            \ are used even if the Report does not have the option to \"Include Object\
            \ selector on Run Report page\" enabled."
        filterBy:
          type: string
          description: Used for Workflow Reports only. The valid values are "due date"
            and "creation date".
    Integration_ScimIdentity_user:
      type: object
      properties:
        schemas:
          type: array
          description: SCIM version specific schema as well as any schema extensions.
            Enviance currently supports SCIM 1.1 (i.e. urn:scim:schemas:core:1.0)
            and schema extension urn:scim:schemas:enviance:user
          items:
            type: string
        id:
          type: string
          description: Identifier (Guid) of a user.
        externalId:
          type: string
          description: External identifier that is usually similar to username.
        meta:
          type: object
          properties:
            created:
              type: string
              description: User resource created date.
            lastModified:
              type: string
              description: User resource last updated date.
            location:
              type: string
              description: User resource location.
            version:
              type: string
              description: User resource version.
            attributes:
              type: string
              description: The names of the attributes to remove from the Resource
                during a PATCH operation.
          description: Metadata for a user
        userName:
          type: string
          description: "Unique name of the user, typically used by the user to directly\
            \ authenticate to Enviance system"
        password:
          type: string
          description: The User's clear text password. This attribute is intended
            to be used as a means to specify an initial password when creating a new
            User or to reset an existing User's password
        name:
          type: object
          properties:
            givenName:
              type: string
              description: The first/given name of the user.
            familyName:
              type: string
              description: The last/family name of the user.
            formatted:
              type: string
              description: The formatted name (E.g. Scim User) of the user.
          description: The components of the user's real name.
        title:
          type: string
          description: Title for the User.
        displayname:
          type: string
          description: Display name of a user in Enviance syatem.
        emails:
          type: object
          properties:
            value:
              type: string
              description: Value for the email
            type:
              type: string
              description: "A label indicating the attribute's function; e.g., \"\
                work\" or \"home\". Enviance supports only type \"work\""
            primary:
              type: boolean
              description: A Boolean value indicating the 'primary' or preferred attribute
                value for this attribute
          description: An active date of the Requirement.
        timezone:
          type: string
          description: The User's time zone in the "Olson" timezone database format.
          format: Olson Time zone
        preferredLanguage:
          type: string
          description: "Indicates the User's preferred written or spoken language.\
            \ Generally used for selecting a localized User interface. e.g., 'en_US'"
        active:
          type: boolean
          description: A boolean value indicating status of user.
        groups:
          type: object
          properties:
            value:
              type: string
              description: Id (Guid) of a group.
            display:
              type: string
              description: Name of a group.
          description: A list of groups that the user belongs to.
        usertype:
          type: string
          description: Type of the User. Possible values are Homeuser and Accessuser.
        address:
          type: object
          properties:
            streetAddress:
              type: string
              description: "The full street address component, which may include house\
                \ number, street name, PO BOX, and multi-line extended street address\
                \ information. This attribute MAY contain newlines."
            locality:
              type: string
              description: The city or locality component.
            region:
              type: string
              description: The state or region component.
            postalCode:
              type: string
              description: The zipcode or postal code component.
            country:
              type: string
              description: The country name component.
            primary:
              type: boolean
              description: "A Boolean value indicating the 'primary' or preferred\
                \ attribute value for this attribute, e.g. the preferred or primary\
                \ phisical address. This value MUST set to 'true' for this attribute."
            formatted:
              type: string
              description: "The full mailing address, formatted for display or use\
                \ with a mailing label. This attribute MAY contain newlines."
            type:
              type: string
              description: "A label indicating the attribute's function. Enviance\
                \ system only supports type :  \"work\""
          description: A physical mailing address for the user.
        phoneNumbers:
          type: object
          properties:
            value:
              type: string
              description: Value for the specified type number.
            type:
              type: string
              description: "Type of the phone number. Possible options are :  \"work\"\
                , \"mobile\" and \"fax\""
          description: Phone number(s) for the User.
        urn:scim:schemas:enviance:user:
          type: object
          properties:
            emailDelivery:
              type: string
              description: Email delivery option for the user.
            receiveInformation:
              type: boolean
              description: Receive information option for the user.
            commandFailureNotification:
              type: string
              description: Command failure notification option for user.
            reportCompletionNotification:
              type: string
              description: Report completion notification option for user.
            companyName:
              type: string
              description: Name of the company that user belongs.
            mustChangePasswordAtNextLogin:
              type: boolean
              description: Boolean value indicating whether user must change password
                at first login.
            canNotChangePassword:
              type: boolean
              description: Boolean value indication for ability for user to change
                password in the system.
            NotExpirePassword:
              type: boolean
              description: Boolean value indication for making password non expirable.
            expires:
              type: string
              description: Expiration date for the user.
            comments:
              type: string
              description: Comments added during Create/Update user.
            userRights:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the user rights.
                granted:
                  type: boolean
                  description: Boolean value to grant/revoke the provided right.
              description: User rights within Enviance system.
            properties:
              type: object
              properties:
                propertyName:
                  type: string
                  description: Name of the property.
                type:
                  type: string
                  description: Type of the property. Type must be equal to propertyName.
                propertyValue:
                  type: string
                  description: Value of the property.
                isSensitiveData:
                  type: boolean
                  description: Indicates that this is sensitive data (optional).
              description: Array of Extended properties for User.
          description: Extended schema attribute.
      description: Represents a User definition. Used for all SCIM user operations.
      example:
        schemas:
        - urn:scim:schemas:core:1.0
        - urn:scim:schemas:enviance:user
        userName: scimupdatetest998990444
        password: "1111"
        name:
          givenName: Updated
          familyName: Scim
        emails:
        - type: work
          primary: "true"
          value: scimuser1@enviance.com
        timezone: America/New_York
        preferredLanguage: en_US
        active: true
        urn:scim:schemas:enviance:user:
          emailDelivery: HTML Email
          receiveInformation: true
          commandFailureNotification: Inbox
          companyName: "Enviance, Inc"
          mustChangePasswordAtNextLogin: "false"
          canNotChangePassword: "true"
          NotExpirePassword: "false"
          userRights:
          - name: Manage Groups
            granted: true
          properties:
          - propertyName: supervisorusername
            type: supervisorusername
            propertyValue: someUsername
          - propertyName: name2
            type: name2
            propertyValue: val2
            isSensitiveData: true
          expires: 12/21/2017
          comments: This is a full Scim User
    Integration_ScimIdentity_group:
      type: object
      properties:
        schemas:
          type: array
          description: SCIM version specific schema as well as any schema extensions.
            Enviance currently supports SCIM 1.1 (i.e. urn:scim:schemas:core:1.0)
            and schema extention urn:scim:schemas:enviance:group
          items:
            type: string
        id:
          type: string
          description: Identifier (Guid) of a group.
        externalId:
          type: string
          description: External identifier that is usually similar to groupname.
        meta:
          type: object
          properties:
            created:
              type: string
              description: Group resource created date.
            lastModified:
              type: string
              description: Group resource last updated date.
            location:
              type: string
              description: Group resource location.
            version:
              type: string
              description: Group resource version.
            attributes:
              type: string
              description: The names of the attributes to remove from the Resource
                during a PATCH operation.
          description: Metadata for a group
        displayName:
          type: string
          description: Unique name of the group in Enviance system.
        members:
          type: object
          properties:
            value:
              type: string
              description: The first/given name of the user.
            operation:
              type: string
              description: The last/family name of the user.
          description: A list of members (user) of the Group.
        urn:scim:schemas:enviance:group:
          type: object
          properties:
            rights:
              type: object
              properties:
                name:
                  type: array
                  description: Name of the user rights.
                  items:
                    type: string
              description: Access Rights within Enviance system.
          description: Extended schema attribute.
      description: Represents a Group definition. Used for all SCIM Group operations.
      example:
        urn:scim:schemas:enviance:group:
          rights:
          - Manage Users
        id: 809d56ad-77ef-47a6-9f3c-f8853b118744
        externalId: Enviance SCIM 123 Group
        meta:
          version: "-349702305"
          location: http://api.enviance.com/ver2/ScimIdentityService.svc/scim/v1/Groups/809d56ad-77ef-47a6-9f3c-f8853b118744
        schemas:
        - urn:scim:schemas:core:1.0
        - urn:scim:schemas:enviance:group
        displayName: Enviance SCIM 123 Group
        members:
        - value: 19ycb0g2-df4b-42c5-8s48-04457723cf76
    Setup_Tags_tagInfo:
      type: object
      properties:
        id:
          type: string
          description: "The id string (GUID) for the Tag. Ignored for: Create Tag,\
            \ Update Tag"
        name:
          type: string
          description: "Name of the Tag. Required for: Create Tag"
        description:
          type: string
          description: Description of the Tag.
        tagIdOrSchemeIdAndTagName:
          type: string
          description: "Either an id string (GUID) for the tag or the id string (GUID)\
            \ for the tag scheme id and the tag name. Any string that matches the\
            \ pattern of a GUID is interpreted as an id string and not a name. A name\
            \ string must be URL encoded. Required for: Create Tag"
      description: Represents a Tag definition.
    Setup_TagScheme_tagSchemeCreate:
      type: object
      properties:
        tagSchemeInfo:
          type: array
          description: 'An tagSchemeInfo structure. '
          items:
            $ref: '#/components/schemas/Setup_TagScheme_tagSchemeInfo'
        copyFrom:
          type: string
          description: The id string (GUID) of an existing Tag Scheme to copy.
      description: Tag Scheme Create body parameters
    Setup_TagScheme_tagSchemeInfo:
      type: object
      properties:
        id:
          type: string
          description: "The id string (GUID) for the Tag Scheme. Ignored for: Create\
            \ Tag Scheme, Update Tag Scheme"
        name:
          type: string
          description: "Name of the Tag Scheme. Required for: Create Tag Scheme"
        description:
          type: string
          description: Description of the Tag Scheme.
        enforce uniqueness:
          type: integer
          description: "Numeric value that represents a Tag Scheme uniqueness flag:(0\
            \ = no uniqueness, 1 = uniqueness for object, 2 = uniqueness for parent\
            \ location, 3 = unique for both object and parent location) Required for:\
            \ Create Tag Scheme"
      description: Represents a Tag Scheme definition.
    Task_taskCreateInfo:
      type: object
      properties:
        taskInfo:
          $ref: '#/components/schemas/Task_taskInfo'
        copyFrom:
          type: string
          description: The id string (GUID) of an existing Task whose properties will
            be copied and used as the properties of the newly created Task.
      description: Create/Copy Task info
    Task_taskInfo:
      type: object
      properties:
        id:
          type: string
          description: "The id string (GUID) of the Task. Ignored for: Create Task,\
            \ Update Task"
        name:
          type: string
          description: "Name of the Task. Required for: Create Task"
        description:
          type: string
          description: The description of the Task.
        createdBy:
          type: string
          description: "The User name of the Task creator. Ignored for: Create Task,\
            \ Update Task"
        createdOn:
          type: string
          description: "The date and time the Task was created. Ignored for: Create\
            \ Task, Update Task"
          format: date-time
        dueDate:
          type: string
          description: "The date and time the Task is due. Required for: Create Task"
          format: date-time
        timeZone:
          $ref: '#/components/schemas/Task_timeZoneInfo'
        assignor:
          type: string
          description: The User name of the Task assignor. Default is the current
            User.
        assignees:
          type: string
          description: "An array of User names and/or Group names to which the Task\
            \ is assigned. Required for: Create Task"
        calendars:
          type: string
          description: An array of strings listing the types of Enviance calendars
            on which this Task is shown.
          enum:
          - My
          - Object
          - System
        objects:
          type: string
          description: "An array of Compliance Model object id strings (GUIDs) or\
            \ paths, specifying one or more Compliance Model objects to which the\
            \ Task is associated. Any string that matches the pattern of a GUID is\
            \ interpreted as an id string, and not a path."
        documents:
          type: array
          description: "An array of Document paths, specifying zero or more Documents\
            \ which are or should be attached to the object."
          items:
            $ref: '#/components/schemas/Task_docPath'
        schedules:
          type: array
          description: "An array of the taskScheduleInfo data type, which defines\
            \ the task schedules."
          items:
            $ref: '#/components/schemas/Task_taskScheduleInfo'
        notifications:
          type: array
          description: "A array of the taskNotificationInfo data type, which defines\
            \ the task notifications."
          items:
            $ref: '#/components/schemas/Task_taskNotificationInfo'
        workflowtrigger:
          type: array
          description: "The taskWorkflowInfo data type, which defines the workflow\
            \ trigger options."
          items:
            $ref: '#/components/schemas/Task_taskWorkflowInfo'
        suppressNotificationsBefore:
          type: string
          description: The date and time the Task Notification is not fired before.
          format: date-time
      description: Task info
    Task_taskOccurrenceInfo:
      type: object
      properties:
        statusChangeDate:
          type: string
          description: "An optional date and time at which the Task occurrence status\
            \ was last updated. Default is the current date and time, in the Task\
            \ time zone. Ignored for: Complete/Dismiss Task Occurrence"
          format: date-time
        objectIdOrPath:
          type: string
          description: "An id string (GUID) or path of a Compliance Model object,\
            \ related to the Task, for which this Task occurrence information applies.\
            \ Any string that matches the pattern of a GUID is interpreted as an id\
            \ string, and not a path. If no object property is specified, the Task\
            \ occurrence information relates to all objects associated with the Task.\
            \ Ignored for: Complete/Dismiss Task Occurrence"
        dismissed:
          type: boolean
          description: "An optional Boolean flag indicating whether or not this task\
            \ occurrence should be dismissed (and not completed). If this value is\
            \ True, no update will be made for percentComplete and statusChangeDate.\
            \ Default is False."
        percentComplete:
          type: number
          description: An optional integer between 0 and 100 specifying the percent
            completion of the Task occurrence. Default is 0 percent.
        hoursToComplete:
          type: number
          description: An optional decimal value indicating a whole or partial number
            of hours required to complete the Task occurrence. Default is 0.
        costToComplete:
          type: string
          description: "An optional decimal value indicating the cost to complete\
            \ the task occurrence. Currently, this value is in US dollars. Default\
            \ is 0."
        comment:
          type: string
          description: An optional comment about the completion of the Task occurrence.
        eventInstanceId:
          type: string
          description: An id string (GUID) of an associated event instance.
      description: "Represents a Task occurrence, on a single date and time, for a\
        \ single object related to the Task."
    Task_taskScheduleInfo:
      required:
      - startDate
      - startTime
      type: object
      properties:
        recurrenceType:
          type: string
          description: A string that defines the recurrence pattern of the Schedule.
            Required for any TaskScheduleInfo.
          enum:
          - Hourly
          - Daily
          - Weekly
          - Monthly
          - Yearly
          - AfterLastCompletion
        startDate:
          type: string
          description: The date when the schedule becomes active (time portion of
            the date is ignored). Required for any TaskScheduleInfo
          format: date-time
        endDate:
          type: string
          description: The date when the schedule becomes inactive (time portion of
            the date is ignored). If not specified then the schedule does not have
            an end date.
          format: date-time
        startTime:
          type: string
          description: "The time of a day at which the scheduled event should occur\
            \ (in Hourly recurrence pattern, the time of a day when the schedule becomes\
            \ active). Note that hours must be specified in the 24h format. For minutes\
            \ only four values are allowed: 0, 15, 30, 45. Seconds are ignored."
          format: date-time
        endTime:
          type: string
          description: "The time of a day when the schedule becomes inactive (used\
            \ only by Hourly recurrence pattern). Note that hours must be specified\
            \ in the 24h format. For minutes only four values are allowed: 0, 15,\
            \ 30, 45. Seconds are ignored."
          format: date-time
        recurrenceInterval:
          type: string
          description: "Either an integer value or recurrenceInterval structure which\
            \ defines the frequency of the recurring event. The structure is used\
            \ for AfterLastCompletion recurrence pattern and integer value is used\
            \ for all other patterns. Depending on the pattern the integer value could\
            \ mean days, weeks, months, or years."
        daysOfWeek:
          type: string
          description: "An array of strings which defines the days of a week to use\
            \ in certain recurrence patterns. Recognized day names are: Sunday, Monday,\
            \ Tuesday, Wednesday, Thursday, Friday, Saturday. Shortcut names that\
            \ can also be used are: All, Weekdays, Weekends."
        dayOfMonth:
          type: string
          description: Either an integer value or DayOfMonth structure which defines
            the day of a specific month. Integer value specifies the number of the
            day within a month (possible values are 1 to 31). The structure is used
            for more advanced specification of the day of a month. This property is
            used only for Monthly and Yearly recurrence patterns.
        monthOfYear:
          type: integer
          description: "An integer value which defines the month of a year. Possible\
            \ values are: 1 to 12."
        TalLogicVersion:
          type: integer
          description: "Time After Last Completion Schedule logic version. Ignored\
            \ for: Create Task, Update Task."
      description: "Represents a simple (one time) Task definition. Properties startDate,\
        \ endDate, startTime, endTime are specified in the timezone of the containing\
        \ task (see timeZone property of taskInfo structure)."
    Task_recurrenceInterval:
      type: object
      properties:
        hours:
          type: string
          description: An integer value which defines the number of hours of the recurrence
            interval.
          format: integer
        days:
          type: string
          description: An integer value which defines the number of days of the recurrence
            interval.
          format: integer
        weeks:
          type: string
          description: An integer value which defines the number of weeks of the recurrence
            interval.
          format: integer
        month:
          type: string
          description: An integer value which defines the number of months of the
            recurrence interval.
          format: integer
      description: Represents the advanced specification of a recurring interval.
        Used by *AfterLastCompletion* recurrence pattern only. The purpose of this
        structure is to simplify specification of long intervals. The resulting value
        of the structure can be expressed as a single integer value specifying the
        number of hours of the interval.
    Task_dayOfMonth:
      type: object
      properties:
        dayOccurrence:
          type: string
          description: A string that specifies the occurrence of the day within a
            month.
          enum:
          - First
          - Second
          - Third
          - Fourth
          - Last
        dayOfWeek:
          type: string
          description: A string that specifies the day of a week.
          enum:
          - Day
          - Weekday
          - WeekendDay
          - Sunday
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
      description: "Represents the advanced specification of the day of a month. The\
        \ actual day of a month is uniquely identified by a combination of two properties.\
        \ Using this structure the day of a month can be identified using the following\
        \ rules: first day, last Friday, second weekday etc."
    Task_taskNotificationInfo:
      required:
      - conditions
      - deliveryMethod
      - recipients
      type: object
      properties:
        conditions:
          type: array
          description: A notificationConditions structure which defines a set of conditions
            that would trigger the notification.
          items:
            $ref: '#/components/schemas/Task_notificationConditions'
        recipients:
          type: array
          description: A NotificationRecipients structure which defines the recipients
            of the notification.
          items:
            $ref: '#/components/schemas/Task_notificationRecipients'
        deliveryMethod:
          type: string
          description: A string that defines the delivery method of the notification.
          enum:
          - Inbox
          - Email
          - InboxAndEmail
        comments:
          type: string
          description: Task comments
        templateIdOrName:
          type: string
          description: Notification Template ID or Name
      description: Represents a single instance of a task notification.
    Task_notificationRecipients:
      type: object
      properties:
        toAssignees:
          type: boolean
          description: A boolean value which indicates whether the notification should
            be delivered to the task assignee(s).
        toAssignor:
          type: boolean
          description: A boolean value which indicates whether the notification should
            be delivered to the task assignor.
        users:
          type: string
          description: An array of id strings (GUIDs) which defines specific users
            to receive the notification.
        groups:
          type: string
          description: An array of id strings (GUIDs) which defines specific groups
            to receive the notification.
      description: Represents recipients of the notification. All properties are optional
        but at least one of them must be specified.
    Task_notificationConditions:
      type: object
      properties:
        immediately:
          type: boolean
          description: A boolean value which indicates whether the notification should
            be triggered immediately upon the creation.
        whenDismissed:
          type: boolean
          description: A boolean value which indicates whether the notification should
            be triggered when the task is dismissed.
        byDueDate:
          type: string
          description: A dueDateCondition structure which defines whether the notification
            should be triggered when certain conditions for the task Due Date are
            met.
        byCompletionStatus:
          type: string
          description: A completionStatusCondition structure which defines whether
            the notification should be triggered when certain conditions for the task
            completion status are met.
      description: "Defines a set of conditions that will trigger the notification.\
        \ It corresponds to the \"Time To Notify\" section on the task notification\
        \ UI. All properties are optional, but at least one of them must be specified.\
        \ Additional limitation is that \"byDueDate\" condition cannot be specified\
        \ if \"CompletionStatusCondition.onlyWhenPastDue = true\"."
    Task_dueDateCondition:
      type: object
      properties:
        conditionType:
          type: string
          description: A string that specifies the type of the condition.
          enum:
          - IntervalBefore
          - IntervalAfter
          - PastDue
        intervalValue:
          type: integer
          description: An integer value which defines the interval (ignored for conditionType=PastDue)
        intervalType:
          type: string
          description: A string that defines the type of the interval (ignored for
            conditionType=PastDue).
          enum:
          - QuarterHour
          - Hour
          - Day
          - Week
          - Month
          - Year
      description: Represents a condition related to the task Due Date.
    Task_completionStatusCondition:
      type: object
      properties:
        completionPercent:
          type: integer
          description: "An integer value which defines the percentage of the task\
            \ completion that should trigger the notification. Possible values are\
            \ from 0 to 100, with increments of 10 percent."
        comparisonLogic:
          type: string
          description: A string that defines how the task completion status should
            be compared to the completionPercent property to trigger the notification.
          enum:
          - =
          - <
          - '>'
          - <=
          - '>='
        onlyWhenPastDue:
          type: boolean
          description: A boolean value which indicates that the notification must
            be triggered only if the task is past due. Optional.
      description: Represents a condition related to the task completion status
    Task_taskWorkflowInfo:
      type: object
      properties:
        isautoclosetask:
          type: boolean
          description: Determine if task should be closed when the workflow is closed.
        taskcompletionfields:
          $ref: '#/components/schemas/Task_completionMaskInfo'
        workflows:
          type: array
          description: Array of workflowTriggerInfo which defines a structure for
            trigger options
          items:
            $ref: '#/components/schemas/Task_workflowTriggerInfo'
      description: Represents a single instance of a task workflow triggering.
    Task_completionMaskInfo:
      type: array
      description: An integer value which defines Task Completion Fields mask
      items:
        type: string
        enum:
        - CostToComplete
        - HourToComplete
        - PercentComplete
        - Comments
        - ComplyStatus
        - Dismissed
        - CompliancePeriod
        - CompletionDate
    Task_workflowTriggerInfo:
      required:
      - duedateflags
      - timetocreateoptions
      - workflowtypeidorname
      type: object
      properties:
        workflowtypeidorname:
          type: string
          description: Workflow definition Id or Name
        workflowname:
          type: string
          description: Workflow Name
        isusetaskname:
          type: boolean
          description: Flag to determine if Task Name should be used as Workflow Name
            when workflow is created.
        calendars:
          type: array
          description: An array of strings listing the types of Enviance calendars
            on which the workflow is shown.
          items:
            type: object
        duedateflags:
          type: array
          description: Array of possible duedate options (only one is possible in
            time)
          items:
            type: object
        duedateamount:
          type: string
          description: Value for duedate options
        timetocreateoptions:
          type: string
          description: Value for duedate options
        assignee:
          type: array
          description: A set of assignees (User name or id and/or Group name or id)
            for the Workflow
          items:
            type: object
            properties: {}
      description: A structure that defines the workflow trigger options
    Task_dueDateInfo:
      required:
      - hours
      - period
      - value
      type: object
      properties:
        value:
          type: integer
          description: Integer value for period
        hours:
          type: string
          description: Period type
          enum:
          - QuarterHour
          - Hour
          - Day
          - Week
          - Month
          - Year
        period:
          type: string
          description: Specifies whether due date is before or after period
          enum:
          - Before
          - After
      description: A structure that defines the duedate options for a triggered workflow
    Task_timeToCreateInfo:
      required:
      - category
      type: object
      properties:
        value:
          type: object
          properties: {}
          description: Value for create info
        category:
          type: string
          description: Option for creating immediately or by due date or status
          enum:
          - Immediatly
          - ByDueDate
          - ByCompleteStatus
          - OnDismissActivate
      description: A structure that defines the time to create info for a triggered
        workflow
    Task_timeToCreateValue:
      type: object
      properties:
        value:
          type: integer
          description: Integer value for period
        past:
          type: boolean
          description: Boolean flag indicating if value is in future or in past
        operation:
          type: string
          description: And/Or operator value
          enum:
          - AND
          - OR
        hours:
          type: string
          description: Period type
          enum:
          - QuarterHour
          - Hour
          - Day
          - Week
          - Month
          - Year
        period:
          type: string
          description: Specifies whether create period is before or after
          enum:
          - Before
          - After
        percent:
          type: integer
          description: Integer designating percent value
        compare:
          type: string
          description: Comparison operator
          enum:
          - =
          - <
          - '>'
          - <=
          - '>='
      description: A structure that defines the time to create value for a triggered
        workflow
    Task_timeZoneInfo:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Timezone name
        stdOffset:
          type: integer
          description: The offset in minutes from UTC during standard time.
        dstOffset:
          type: integer
          description: The offset in minutes from UTC during daylight savings time
            (DST). This property will be identical to "stdOffset" for time zones that
            do not observe DST.
        currentOffset:
          type: integer
          description: The current offset in minutes from UTC (which can change upon
            whether the time zone is currently observing DST or not).
      description: "Describes a time zone, including its offset from UTC"
    Task_docPath:
      type: string
      description: "The hierarchical path to a document as represented by the system\
        \ model folder structure, beginning with a single forward slash and with elements\
        \ separated by a single forward slash &quot;/&quot;. Does not include the\
        \ container object (Documents) Example: /Folder1/Subfolder1/Sub-subfolder/DocumentName"
    Setup_UserGroups_groupInfo:
      type: object
      properties:
        id:
          type: string
          description: "The id string (GUID) for the Group. Ignored for: Create Group,\
            \ Update Group"
        name:
          type: string
          description: "Name of the Group. Note: You cannot create a new Group called\
            \ \"Administrators\". Required for: Create Group"
        rights:
          type: string
          description: An array of System Rights granted to the Group.
        members:
          type: string
          description: An array of member User id strings (GUIDs) and/or user names.
      description: Represents a Group of Users in the Management System.
    Workflow_workflowCreateInfo:
      type: object
      properties:
        workflowInfo:
          type: array
          description: A workflowInfo structure.
          items:
            $ref: '#/components/schemas/Workflow_workflowInfo'
        initStepInfo:
          type: array
          description: "An optional WorkflowStepInfo structure, which can be used\
            \ to simultaneously update Form Fields or invoke a Step Action on the\
            \ Init Step of the newly created Workflow."
          items:
            $ref: '#/components/schemas/Workflow_workflowStepInfo'
      description: CreateCopy workflow body
    Workflow_workflowCreateInfos:
      type: object
      properties:
        workflowInfos:
          type: array
          description: A workflowInfo structure.
          items:
            $ref: '#/components/schemas/Workflow_workflowInfo'
      description: CreateCopy workflow body
    Workflow_workflowInfo:
      type: object
      properties:
        id:
          type: string
          description: "The id string (GUID) of the Workflow. Ignored for: Create\
            \ Workflow, Update Workflow, Initiate Child Workflow"
        uniqueId:
          type: string
          description: The unique id of the Workflow.
        name:
          type: string
          description: "Name of the Workflow. Optional, defaults to uniqueId"
        workflowTypeName:
          type: string
          description: "Name of the Workflow Type. Required for: Create Workflow.\
            \ Ignored for: Update Workflow, Initiate Child Workflow"
        parentUniqueId:
          type: string
          description: "If the Workflow has a parent Workflow, the unique id string\
            \ of the parent Workflow, otherwise empty. Ignored for: Create Workflow,\
            \ Update Workflow, Initiate Child Workflow"
        parentWorkflowSourceCustomField:
          type: array
          description: "Optional field that allow a child workflow instance to be\
            \ linked not only to the parent workflow instance ID, but also to a particular\
            \ custom field (GUID) on the parent"
          items:
            $ref: '#/components/schemas/Workflow_customFieldInfo'
        dueDate:
          type: string
          description: The due date of the Workflow.
          format: date-time
        status:
          type: string
          description: "A string representing the current status of the Workflow,\
            \ formatted as \"Primary Status (Custom Status)\". Ignored for: Create\
            \ Workflow, Update Workflow, Initiate Child Workflow"
        creator:
          type: string
          description: "The User name of the person who created the Workflow. Ignored\
            \ for: Create Workflow, Update Workflow, Initiate Child Workflow"
        created:
          type: string
          description: "The date and time the Workflow was created. Ignored for: Update\
            \ Workflow"
          format: date-time
        lastRun:
          type: string
          description: "The date and time the Workflow was last run (saved and/or\
            \ transitioned). Ignored for: Create Workflow, Update Workflow, Initiate\
            \ Child Workflow"
          format: date-time
        assignedBy:
          type: string
          description: "The user name of the person who last assigned the Workflow.\
            \ Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow."
        assignedTo:
          type: string
          description: "A set of assignees (User name or id and/or Group name or id)\
            \ for the Workflow. If at least one assignee is not specified when creating\
            \ a Workflow, the current User is assigned the Workflow. If the assignee(s)\
            \ specified here are not part of the assigned Role for the current Step,\
            \ the assignee(s) will be added to the Role."
        calendars:
          type: string
          description: An array of strings listing the types of Enviance calendars
            on which this Workflow is shown.
          enum:
          - My
          - Object
          - System
        objects:
          type: string
          description: "An array of Compliance Model object id strings (GUIDs) or\
            \ paths, specifying zero or more Compliance Model objects to which the\
            \ Workflow is associated. Any string that matches the pattern of a GUID\
            \ is interpreted as an id string, and not a path."
        documents:
          type: array
          description: "An array of Document paths, specifying zero or more Documents\
            \ which are or should be attached to the object."
          items:
            $ref: '#/components/schemas/Workflow_docPath'
        comment:
          type: string
          description: "A comment. When retrieving information on an existing Workflow,\
            \ this value is the current latest comment on the Workflow."
        closeDate:
          type: string
          description: Date when Workflow was closed. Only for GET request are used
          format: date-time
        jsonData:
          type: object
          properties: {}
          description: JSON meta data related to workflow instance
      description: Represents a single instance of a Workflow.
    Workflow_customFieldInfo:
      type: object
      properties:
        id:
          type: string
          description: The id string (GUID) of the CustomField. Optional
        name:
          type: string
          description: Name of the CustomField. Optional
      description: Represents an instance of a CustomField.
    Workflow_workflowStepInfo:
      type: object
      properties:
        id:
          type: string
          description: "The id string (GUID) of the Workflow Step. Ignored for: UpdateWorkflowStep"
        name:
          type: string
          description: "The name of the Step. Ignored for: UpdateWorkflowStep"
        fields:
          type: array
          description: "An array of CustomFields, representing the Form Field values\
            \ for the Step. The User must have the \"Edit\" Workflow Field permission\
            \ to set a field value."
          items:
            $ref: '#/components/schemas/Workflow_customFieldValue'
        transition:
          type: array
          description: The information about a Workflow Transition to invoke. The
            User must have the ability to execute the named Step Action on the specified
            Step. This value will be unspecified when getting the information for
            a Step.
          items:
            $ref: '#/components/schemas/Workflow_workflowTransitionInfo'
        comment:
          type: string
          description: "A comment on this Step. When updating a Step via UpdateWorkflowStep,\
            \ this value will be used to record a new, latest comment. The User must\
            \ have the \"Add Comment\" Workflow permission to set this value. When\
            \ retrieving information about a Workflow Step, this value will be the\
            \ latest comment currently on the Workflow."
      description: Represents the information for a workflow step.
    Workflow_workflowTransitionInfo:
      type: object
      properties:
        stepActionName:
          type: string
          description: "The name of the Step Action to execute. Required for: Making\
            \ transitions with UpdateWorkflowStep. The pre-defined Step Action name\
            \ \"End Workflow\" can be used for any Workflow to close it. The pre-defined\
            \ Step Action name \"Reopen Workflow\" is used to reopen already closed\
            \ workflows."
        dueDate:
          type: string
          description: The new due date for the Workflow.
          format: date-time
        assignTo:
          type: string
          description: "A list of assignees (User name and/or Group name) to which\
            \ the destination Step of the Workflow should be assigned. If not specified,\
            \ the Step will be assigned to all members of the Assignee Role for the\
            \ Workflow."
        closeDate:
          type: string
          description: Close date for the Workflow.
          format: date-time
      description: Represents a workflow transition
    Workflow_childWorkflowInitiationInfo:
      type: object
      properties:
        parentStepIdOrName:
          type: string
          description: "Either the id string (GUID) of the Step, or its name. Any\
            \ string that matches the pattern of a GUID is interpreted as the id string,\
            \ and not the name of the Step."
        initiatorIdOrName:
          type: string
          description: " Either the id string (GUID) of the Workflow Initiator, or\
            \ its name. Any string that matches the pattern of a GUID is interpreted\
            \ as the id string, and not the name of the Initiator."
        childWorkflowInfo:
          type: array
          description: A workflowInfo structure.
          items:
            $ref: '#/components/schemas/Workflow_workflowInfo'
        childInitStepInfo:
          type: array
          description: "An optional workflowStepInfo structure, which can be used\
            \ to simultaneously update Form Fields or invoke a Step Action on the\
            \ Init Step of the newly created Workflow."
          items:
            $ref: '#/components/schemas/Workflow_workflowStepInfo'
      description: Represents a Child Workflow Initiation as executed by a Workflow
        Initiator. The pre-defined Step Action name "End Workflow" can be used for
        any Workflow to close it.
    Workflow_customFieldValue:
      type: object
      properties:
        name:
          type: string
          description: The name (not caption) of the Custom Field.
        values:
          type: string
          description: "An array with one or more string values, representing the\
            \ values (one or more) for the Custom Field.  Note that even non-string\
            \ simple values are encoded as strings for custom fields, and are parsed\
            \ and validated on the server according to the Custom Field type."
      description: "A set of one or more values for a Custom Field, identified by\
        \ name.  Multi-Select Custom Fields are represented as an array with multiple\
        \ string values, one for each selected option. Linked List Custom Fields are\
        \ represented as an array with multiple string values, where n of the array\
        \ holds the chosen value for level n+1 of the linked list. For example, the\
        \ values array [\"One\", \"Two\", \"Three\"] for a linked list will map to\
        \ the item \"One\" chosen in level one, \"Two\" in two, etc. Hyperlink Fields\
        \ are represented as an array with a single UrlItem."
    Workflow_workflowStepMap:
      type: object
      properties:
        workflowIdOrUniqueId:
          type: string
          description: "Either the of id string (GUID) of the Workflow, or the unique\
            \ id of the Workflow. Any string that matches the pattern of a GUID is\
            \ interpreted as the id string, and not the unique id of the Workflow."
        stepIdsOrNames:
          type: array
          items:
            type: string
      description: Represents a single instance of a WorkflowStepMap.
    Workflow_stringArrayBody:
      type: object
      properties:
        workflowIdsOrUniqueIds:
          type: array
          items:
            type: string
      description: "Either the Array of id string (GUID) of the Workflow, or the unique\
        \ id of the Workflow. Any string that matches the pattern of a GUID is interpreted\
        \ as the id string, and not the unique id of the Workflow. The unique id of\
        \ a Workflow must be URL encoded."
    Workflow_workflowStepMapArrayBody:
      type: object
      properties:
        workflowStepMaps:
          type: array
          items:
            $ref: '#/components/schemas/Workflow_workflowStepMap'
      description: Instance of the Array of WorkflowStepMap.
    Workflow_workflowExecutionResult:
      type: object
      properties:
        WorkflowInstanceId:
          type: string
          description: The id string (GUID) for the newly created Workflow.
        CurrentInstanceStepId:
          type: string
          description: The id string (GUID) for the newly created step.
        TransitionPerformed:
          type: boolean
          description: ""
        AssignedAutomatically:
          type: boolean
          description: ""
      description: ""
    Workflow_docPath:
      type: string
      description: "The hierarchical path to a document as represented by the system\
        \ model folder structure, beginning with a single forward slash and with elements\
        \ separated by a single forward slash &quot;/&quot;. Does not include the\
        \ container object (Documents) Example: /Folder1/Subfolder1/Sub-subfolder/DocumentName"
    Workflow21_workflowCreateInfo:
      type: object
      properties:
        workflowInfo:
          type: array
          description: A workflowInfo structure.
          items:
            $ref: '#/components/schemas/Workflow21_workflowInfo'
        initStepInfo:
          type: array
          description: "An optional WorkflowStepInfo structure, which can be used\
            \ to simultaneously update Form Fields or invoke a Step Action on the\
            \ Init Step of the newly created Workflow."
          items:
            $ref: '#/components/schemas/Workflow21_workflowStepInfo'
      description: CreateCopy workflow body
    Workflow21_workflowCreateInfos:
      type: object
      properties:
        workflowInfos:
          type: array
          description: A workflowInfo structure.
          items:
            $ref: '#/components/schemas/Workflow21_workflowInfo'
      description: CreateCopy workflow body
    Workflow21_workflowInfo:
      type: object
      properties:
        id:
          type: string
          description: "The id string (GUID) of the Workflow. Ignored for: Create\
            \ Workflow, Update Workflow, Initiate Child Workflow"
        uniqueId:
          type: string
          description: The unique id of the Workflow.
        name:
          type: string
          description: "Name of the Workflow. Optional, defaults to uniqueId"
        workflowTypeName:
          type: string
          description: "Name of the Workflow Type. Required for: Create Workflow.\
            \ Ignored for: Update Workflow, Initiate Child Workflow"
        parentUniqueId:
          type: string
          description: "If the Workflow has a parent Workflow, the unique id string\
            \ of the parent Workflow, otherwise empty. Ignored for: Create Workflow,\
            \ Update Workflow, Initiate Child Workflow"
        parentWorkflowSourceCustomField:
          type: array
          description: "Optional field that allow a child workflow instance to be\
            \ linked not only to the parent workflow instance ID, but also to a particular\
            \ custom field (GUID) on the parent"
          items:
            $ref: '#/components/schemas/Workflow21_customFieldInfo'
        dueDate:
          type: string
          description: The due date of the Workflow.
          format: date-time
        status:
          type: string
          description: "A string representing the current status of the Workflow,\
            \ formatted as \"Primary Status (Custom Status)\". Ignored for: Create\
            \ Workflow, Update Workflow, Initiate Child Workflow"
        creator:
          type: string
          description: "The User name of the person who created the Workflow. Ignored\
            \ for: Create Workflow, Update Workflow, Initiate Child Workflow"
        created:
          type: string
          description: "The date and time the Workflow was created. Ignored for: Update\
            \ Workflow"
          format: date-time
        lastRun:
          type: string
          description: "The date and time the Workflow was last run (saved and/or\
            \ transitioned). Ignored for: Create Workflow, Update Workflow, Initiate\
            \ Child Workflow"
          format: date-time
        assignedBy:
          type: string
          description: "The user name of the person who last assigned the Workflow.\
            \ Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow."
        assignedTo:
          type: string
          description: "A set of assignees (User name or id and/or Group name or id)\
            \ for the Workflow. If at least one assignee is not specified when creating\
            \ a Workflow, the current User is assigned the Workflow. If the assignee(s)\
            \ specified here are not part of the assigned Role for the current Step,\
            \ the assignee(s) will be added to the Role."
        calendars:
          type: string
          description: An array of strings listing the types of Enviance calendars
            on which this Workflow is shown.
          enum:
          - My
          - Object
          - System
        objects:
          type: string
          description: "An array of Compliance Model object id strings (GUIDs) or\
            \ paths, specifying zero or more Compliance Model objects to which the\
            \ Workflow is associated. Any string that matches the pattern of a GUID\
            \ is interpreted as an id string, and not a path."
        documents:
          type: array
          description: "An array of Document paths, specifying zero or more Documents\
            \ which are or should be attached to the object."
          items:
            $ref: '#/components/schemas/Workflow21_docPath'
        comment:
          type: string
          description: "A comment. When retrieving information on an existing Workflow,\
            \ this value is the current latest comment on the Workflow."
        closeDate:
          type: string
          description: Date when Workflow was closed. Only for GET request are used
          format: date-time
        jsonData:
          type: object
          properties: {}
          description: JSON meta data related to workflow instance
      description: Represents a single instance of a Workflow.
    Workflow21_customFieldInfo:
      type: object
      properties:
        id:
          type: string
          description: The id string (GUID) of the CustomField. Optional
        name:
          type: string
          description: Name of the CustomField. Optional
      description: Represents an instance of a CustomField.
    Workflow21_workflowStepInfo:
      type: object
      properties:
        id:
          type: string
          description: "The id string (GUID) of the Workflow Step. Ignored for: UpdateWorkflowStep"
        name:
          type: string
          description: "The name of the Step. Ignored for: UpdateWorkflowStep"
        fields:
          type: array
          description: "An array of CustomFields, representing the Form Field values\
            \ for the Step. The User must have the \"Edit\" Workflow Field permission\
            \ to set a field value."
          items:
            $ref: '#/components/schemas/Workflow21_customFieldValue'
        transition:
          type: array
          description: The information about a Workflow Transition to invoke. The
            User must have the ability to execute the named Step Action on the specified
            Step. This value will be unspecified when getting the information for
            a Step.
          items:
            $ref: '#/components/schemas/Workflow21_workflowTransitionInfo'
        comment:
          type: string
          description: "A comment on this Step. When updating a Step via UpdateWorkflowStep,\
            \ this value will be used to record a new, latest comment. The User must\
            \ have the \"Add Comment\" Workflow permission to set this value. When\
            \ retrieving information about a Workflow Step, this value will be the\
            \ latest comment currently on the Workflow."
      description: Represents the information for a workflow step.
    Workflow21_workflowTransitionInfo:
      type: object
      properties:
        stepActionName:
          type: string
          description: "The name of the Step Action to execute. Required for: Making\
            \ transitions with UpdateWorkflowStep. The pre-defined Step Action name\
            \ \"End Workflow\" can be used for any Workflow to close it. The pre-defined\
            \ Step Action name \"Reopen Workflow\" is used to reopen already closed\
            \ workflows."
        dueDate:
          type: string
          description: The new due date for the Workflow.
          format: date-time
        assignTo:
          type: string
          description: "A list of assignees (User name and/or Group name) to which\
            \ the destination Step of the Workflow should be assigned. If not specified,\
            \ the Step will be assigned to all members of the Assignee Role for the\
            \ Workflow."
        closeDate:
          type: string
          description: Close date for the Workflow.
          format: date-time
      description: Represents a workflow transition
    Workflow21_childWorkflowInitiationInfo:
      type: object
      properties:
        parentStepIdOrName:
          type: string
          description: "Either the id string (GUID) of the Step, or its name. Any\
            \ string that matches the pattern of a GUID is interpreted as the id string,\
            \ and not the name of the Step."
        initiatorIdOrName:
          type: string
          description: " Either the id string (GUID) of the Workflow Initiator, or\
            \ its name. Any string that matches the pattern of a GUID is interpreted\
            \ as the id string, and not the name of the Initiator."
        childWorkflowInfo:
          type: array
          description: A workflowInfo structure.
          items:
            $ref: '#/components/schemas/Workflow21_workflowInfo'
        childInitStepInfo:
          type: array
          description: "An optional workflowStepInfo structure, which can be used\
            \ to simultaneously update Form Fields or invoke a Step Action on the\
            \ Init Step of the newly created Workflow."
          items:
            $ref: '#/components/schemas/Workflow21_workflowStepInfo'
      description: Represents a Child Workflow Initiation as executed by a Workflow
        Initiator. The pre-defined Step Action name "End Workflow" can be used for
        any Workflow to close it.
    Workflow21_customFieldValue:
      type: object
      properties:
        name:
          type: string
          description: The name (not caption) of the Custom Field.
        values:
          type: string
          description: "An array with one or more string values, representing the\
            \ values (one or more) for the Custom Field.  Note that even non-string\
            \ simple values are encoded as strings for custom fields, and are parsed\
            \ and validated on the server according to the Custom Field type."
      description: "A set of one or more values for a Custom Field, identified by\
        \ name.  Multi-Select Custom Fields are represented as an array with multiple\
        \ string values, one for each selected option. Linked List Custom Fields are\
        \ represented as an array with multiple string values, where n of the array\
        \ holds the chosen value for level n+1 of the linked list. For example, the\
        \ values array [\"One\", \"Two\", \"Three\"] for a linked list will map to\
        \ the item \"One\" chosen in level one, \"Two\" in two, etc. Hyperlink Fields\
        \ are represented as an array with a single UrlItem."
    Workflow21_workflowStepMap:
      type: object
      properties:
        workflowIdOrUniqueId:
          type: string
          description: "Either the of id string (GUID) of the Workflow, or the unique\
            \ id of the Workflow. Any string that matches the pattern of a GUID is\
            \ interpreted as the id string, and not the unique id of the Workflow."
        stepIdsOrNames:
          type: array
          items:
            type: string
      description: Represents a single instance of a WorkflowStepMap.
    Workflow21_stringArrayBody:
      type: object
      properties:
        workflowIdsOrUniqueIds:
          type: array
          items:
            type: string
      description: "Either the Array of id string (GUID) of the Workflow, or the unique\
        \ id of the Workflow. Any string that matches the pattern of a GUID is interpreted\
        \ as the id string, and not the unique id of the Workflow. The unique id of\
        \ a Workflow must be URL encoded."
    Workflow21_workflowStepMapArrayBody:
      type: object
      properties:
        workflowStepMaps:
          type: array
          items:
            $ref: '#/components/schemas/Workflow21_workflowStepMap'
      description: Instance of the Array of WorkflowStepMap.
    Workflow21_workflowExecutionResult:
      type: object
      properties:
        WorkflowInstanceId:
          type: string
          description: The id string (GUID) for the newly created Workflow.
        CurrentInstanceStepId:
          type: string
          description: The id string (GUID) for the newly created step.
        TransitionPerformed:
          type: boolean
          description: ""
        AssignedAutomatically:
          type: boolean
          description: ""
      description: ""
    Workflow21_docPath:
      type: object
      properties:
        documentIdOrPath:
          type: string
          description: "The hierarchical path to a document as represented by the\
            \ system model folder structure, beginning with a single forward slash\
            \ and with elements separated by a single forward slash &quot;/&quot;.\
            \ Does not include the container object (Documents) Example: /Folder1/Subfolder1/Sub-subfolder/DocumentName."
        udfIdOrName:
          type: string
          description: The id string (GUID) or name of the CustomField.
      description: ""
    workflowPermissions_options:
      type: object
      properties:
        objects:
          type: string
          description: "An array of Compliance Model object id strings (GUIDs) or\
            \ paths, specifying zero or more Compliance Model objects to which the\
            \ Workflow is associated. Any string that matches the pattern of a GUID\
            \ is interpreted as an id string, and not a path."
        version:
          type: string
          description: Version number for the workflow
          format: number
        stepIdOrName:
          type: string
          description: The id or name of specified Workfllow Type. If not specified
            returns info for first Workflow type step
          format: string
      description: Optional info for workflow
    workflowPermissions_workflowInfo:
      type: array
      properties:
        id:
          type: string
          description: "The id string (GUID) of the Workflow. Ignored for: Create\
            \ Workflow, Update Workflow, Initiate Child Workflow"
        uniqueId:
          type: string
          description: The unique id of the Workflow.
        name:
          type: string
          description: "Name of the Workflow. Required for: Create Workflow, Initiate\
            \ Child Workflow"
        workflowTypeName:
          type: string
          description: "The name of the Workflow Type. Required for: Create Workflow.\
            \ Ignored for: Update Workflow, Initiate Child Workflow"
        parentUniqueId:
          type: string
          description: "If the Workflow has a parent Workflow, the unique id string\
            \ of the parent Workflow, otherwise empty. Ignored for: Create Workflow,\
            \ Update Workflow, Initiate Child Workflow"
        dueDate:
          type: string
          description: The due date of the Workflow.
          format: date-time
        status:
          type: string
          description: "A string representing the current status of the Workflow,\
            \ formatted as \"Primary Status (Custom Status)\". Ignored for: Create\
            \ Workflow, Update Workflow, Initiate Child Workflow"
        creator:
          type: string
          description: "The User name of the person who created the Workflow. Ignored\
            \ for: Create Workflow, Update Workflow, Initiate Child Workflow"
        created:
          type: string
          description: "The date and time the Workflow was created. Ignored for: Create\
            \ Workflow, Update Workflow, Initiate Child Workflow"
          format: date-time
        lastRun:
          type: string
          description: "The date and time the Workflow was last run (saved and/or\
            \ transitioned). Ignored for: Create Workflow, Update Workflow, Initiate\
            \ Child Workflow"
          format: date-time
        assignedBy:
          type: string
          description: "The user name of the person who last assigned the Workflow.\
            \ Ignored for: Create Workflow, Update Workflow, Initiate Child Workflow."
        assignedTo:
          type: string
          description: "A set of assignees (User name or id and/or Group name or id)\
            \ for the Workflow. If at least one assignee is not specified when creating\
            \ a Workflow, the current User is assigned the Workflow. If the assignee(s)\
            \ specified here are not part of the assigned Role for the current Step,\
            \ the assignee(s) will be added to the Role."
        calendars:
          type: string
          description: "An array of strings listing the types of Enviance calendars\
            \ on which this Workflow is shown. Valid values are \"My\", \"Object\"\
            , \"System\"."
        objects:
          type: string
          description: "An array of Compliance Model object id strings (GUIDs) or\
            \ paths, specifying zero or more Compliance Model objects to which the\
            \ Workflow is associated. Any string that matches the pattern of a GUID\
            \ is interpreted as an id string, and not a path."
        documents:
          type: string
          description: "An array of Document id strings (GUIDs) or paths, specifying\
            \ zero or more Documents attached to the Workflow. Any string that matches\
            \ the pattern of a GUID is interpreted as an id string, and not a path."
        comments:
          type: string
          description: "A comment. When retrieving information on an existing Workflow,\
            \ this value is the current latest comment on the Workflow."
      description: Represents a single instance of a Workflow.
      items:
        $ref: '#/components/schemas/workflowPermissions_workflowInfo'
    workflowPermissions_simpleIdName:
      type: object
      properties:
        id:
          type: string
          description: The id string (GUID)
        name:
          type: string
          description: string that contain name of object
      description: ""
    workflowPermissions_simpleUserDto:
      type: object
      properties:
        firstName:
          type: string
          description: user first name
        lastName:
          type: string
          description: user last name
        isDeleted:
          type: boolean
          description: indicator that user is deleted
        id:
          type: string
          description: The id string (GUID)
        name:
          type: string
          description: string that contain name
      description: user basic info
    workflowPermissions_userGroup:
      type: object
      properties:
        id:
          type: string
          description: The id string (GUID)
        name:
          type: string
          description: string that contain name of group
        users:
          type: array
          description: user first name
          items:
            $ref: '#/components/schemas/workflowPermissions_simpleUserDto'
      description: group
    workflowPermissions_workflowRoleInfo:
      type: object
      properties:
        id:
          type: string
          description: The id string (GUID)
        name:
          type: string
          description: string that contain name
        groups:
          type: array
          description: array of role groups
          items:
            $ref: '#/components/schemas/workflowPermissions_userGroup'
        users:
          type: array
          description: array of role users
          items:
            $ref: '#/components/schemas/workflowPermissions_simpleUserDto'
      description: information about workflow role
    workflowPermissions_workflowStepPermissionsInfo:
      type: object
      properties:
        readWriteFields:
          type: array
          description: list of udfs
          items:
            $ref: '#/components/schemas/workflowPermissions_simpleIdName'
        readOnlyFields:
          type: array
          description: list of udfs
          items:
            $ref: '#/components/schemas/workflowPermissions_simpleIdName'
        stepActions:
          type: string
          description: string array of step actions
        stepInitiators:
          type: array
          description: list of udfs
          items:
            $ref: '#/components/schemas/workflowPermissions_simpleIdName'
        workflowActions:
          type: string
          description: string array of workflow actions
        assignedRole:
          type: array
          description: list of assigned roles
          items:
            $ref: '#/components/schemas/workflowPermissions_workflowRoleInfo'
      description: ""
    Setup_WorkflowRole_workflowRoleRequestInfo:
      type: object
      properties:
        workflowRoleInfo:
          $ref: '#/components/schemas/Setup_WorkflowRole_workflowRoleInfo'
    Setup_WorkflowRole_workflowRoleInfo:
      type: object
      properties:
        id:
          type: string
          format: GUID
        name:
          type: string
          format: string
        description:
          type: string
          format: string
        defaultMembers:
          $ref: '#/components/schemas/Setup_WorkflowRole_defaultMembers'
    Setup_WorkflowRole_defaultMembers:
      type: object
      properties:
        userIdsOrNames:
          type: array
          items:
            type: string
        groupIdsOrNames:
          type: array
          items:
            type: string
    Setup_WorkflowRole_workflowRoleCopyInfo:
      type: object
      properties:
        sourceId:
          type: string
          format: GUID
        newRoleName:
          type: string
          description: Name of the workflow role name
      description: Create/Copy Parameter Requirement body
    Setup_WorkflowType_workflowTypeIdNameInfo:
      type: object
      properties:
        id:
          type: string
          description: The id string (GUID) for the Workflow Type
        name:
          type: string
          description: Name of the Workflow Type
        version:
          minimum: 1
          type: integer
          description: Version number of the Workflow Type
      description: Workflow Type Result Structure
    Setup_WorkflowType_workflowTypeInfo:
      required:
      - name
      - workflowSteps
      type: object
      properties:
        id:
          type: string
          description: The id string (GUID) of the workflow type. Returned by GET
            operations.
        name:
          type: string
          description: Name of the workflow type. Used for re-name. Optional for *Partial
            Update operation* (PATCH)
          default: "null"
        description:
          type: string
          description: The description of workflow type. Optional.
          default: '""'
        shouldCreateNewVersion:
          type: boolean
          description: "True for create new version of Workflow Type, False or unspecified\
            \ for update the old version. Optional. *Update operations* only"
          default: false
        versionComments:
          type: string
          description: The comments to workflow type version. Optional.
          default: '""'
        idGenScheme:
          type: string
          description: |-
            The id string (GUID) for the generating scheme. Optional. If not specified or empty it uses default value.\
            _{Workflow Type}_ - The name of the Workflow Type\
            _{Version}_ - The three digit (000-999) version number of the Workflow Type\
            _{Year}_ - The four digit numeric designation for the current year\
            _{Month}_ - The two digit numeric designation for the current month\
            _{Day}_ - The two digit numeric designation for the current day\
            _{Hour}_ - The two digit (24-hour format) numeric designation for the current hour\
            _{Minute}_ - The two digit (00-59) numeric designation for the current minute within the hour\
            _{AlphaID}_ - The first 12 hexadecimal characters obtained from a Uniqueidentifier value\
            _{NumericID}_ - The 9 digits composed of the next available integer value in a sequence starting at 000000001 and ending at 999999999
          default: "\"{Year}.{Month}.{Day}.{Hour}.{AlphaID}\""
        isUsedForConfig:
          type: boolean
          description: Represent a Workflow Type Used for Configuration. Optional.
          default: false
        workflowSteps:
          type: array
          description: Workflow Step structure. Optional for *Partial Update operation*
          items:
            $ref: '#/components/schemas/Setup_WorkflowType_workflowStepInfo'
        stepRoles:
          type: array
          description: Roles are used in Steps and predefined role "Workflow Manager".
            Optional
          items:
            $ref: '#/components/schemas/Setup_WorkflowType_roleInfo'
        otherRoles:
          type: array
          description: Any roles are not used in Steps or not any predefined Role.
            Optional
          items:
            $ref: '#/components/schemas/Setup_WorkflowType_roleInfo'
        localFields:
          type: array
          description: |-
            'Array of IdName pair of local UDFields from Form Templates. Optional.
            *All fields are Global by default.*'
          items:
            $ref: '#/components/schemas/Setup_WorkflowType_idNamePair'
        globalFields:
          type: array
          description: Array of IdName pair of UDFields are changed to global. Optional.
            *Partial Update operation* only
          items:
            $ref: '#/components/schemas/Setup_WorkflowType_idNamePair'
        workflowPermissions:
          type: array
          description: Array of Workflow Permissions. Optional
          items:
            $ref: '#/components/schemas/Setup_WorkflowType_workflowPermissionInfo'
        stepPermissions:
          type: array
          description: Array of Workflow Step Permissions. Not required
          items:
            $ref: '#/components/schemas/Setup_WorkflowType_stepPermissionsInfo'
        policies:
          type: array
          description: Array of IdName pair of policies. Not required.
          items:
            $ref: '#/components/schemas/Setup_WorkflowType_idNamePair'
        predefinedRoles:
          type: array
          description: "Array of IdName pair of predefined roles (Assignee, Creator,\
            \ \"Previous Assignee\") used in step permissions. Returned by GET operations."
          items:
            $ref: '#/components/schemas/Setup_WorkflowType_idNamePair'
        jsonData:
          type: object
          properties: {}
          description: JSON meta data related to type
        poorUsers:
          $ref: '#/components/schemas/Setup_WorkflowType_poorUsersInfo'
      description: Workflow Type Object definition for POST requests
    Setup_WorkflowType_workflowStepInfo:
      required:
      - assignedRole
      - formTemplate
      - name
      - status
      type: object
      properties:
        id:
          type: string
          description: The id string (GUID) for the Workflow Step. Required if name
            parameter is empty for Update. Required for rename of step.
        name:
          type: string
          description: The Name of the Workflow Step. Required for *Create operation*
            and for rename.
        status:
          type: string
          description: Status name of the Workflow Step. Unique. Can be used as identifier
            for *Update operations*
        formTemplate:
          $ref: '#/components/schemas/Setup_WorkflowType_idNameVersion'
        assignedRole:
          type: string
          description: The Name of Assigned Role to Workflow Step.
        flags:
          type: string
          description: Workflow Step flags. Optional.
          default: None
          enum:
          - None
          - Recurrent
        isDeleted:
          type: boolean
          description: Sign for delete current Workfloww Step. Optional. *Partial
            Update operations* only.
        stepActions:
          type: array
          description: Array of Workflow Step Action structure. Optional.
          items:
            $ref: '#/components/schemas/Setup_WorkflowType_workflowStepActionInfo'
        workflowInitiators:
          type: array
          description: Array of Workflow Step Initiator structure. Optional.
          items:
            $ref: '#/components/schemas/Setup_WorkflowType_workflowInitiatorInfo'
        order:
          type: number
          description: Sorting order number.
      description: Workflow Step Object definition
    Setup_WorkflowType_workflowStepActionInfo:
      required:
      - allowedRoles
      - destinationStep
      - name
      type: object
      properties:
        id:
          type: string
          description: |-
            The id string (GUID) for the Workflow Step Action. Required for *Update operations* if name
            parameter is empty. *Create operation* ignores this property.
        name:
          type: string
          description: "The Name of the Workflow Step Action. Required for *Create\
            \ operation*, rename or *Update operations* if id property is empty."
        destinationStep:
          $ref: '#/components/schemas/Setup_WorkflowType_idNamePair'
        allowedRoles:
          type: array
          description: |-
            Array of id string (GUID) or name of allowed Workflow Roles to Workflow Step. Optional for *Partial Update operation*.
            GET operations returns array of id string (GUID).
          items:
            type: string
        flags:
          type: string
          description: Workflow Step Action flags. Optional.
          default: None
          enum:
          - None
          - AllowFlowInterrupt
        isDeleted:
          type: boolean
          description: Sign for delete current Workflow Step Action. Optional. *Partial
            Update operations* only.
        order:
          type: number
          description: Sorting order number. Returned by GET operations
      description: Workflow Step Action Object definition
    Setup_WorkflowType_workflowInitiatorInfo:
      required:
      - allowedRoles
      - name
      - workflowType
      type: object
      properties:
        id:
          type: string
          description: |-
            The id string (GUID) for the Workflow Initiator. Required for *Update operations* if name
            parameter is empty. *Create operation* ignores this property.
        name:
          type: string
          description: "The Name of the Workflow Initiator. Required for *Create operation*,\
            \ rename or *Update operations* if id property is empty."
        workflowType:
          $ref: '#/components/schemas/Setup_WorkflowType_idNameVersion'
        allowedRoles:
          type: array
          description: Array of id string (GUID) or name of allowed Workflow Roles
            to Workflow Step.Optional for *Partial Update operations*
          items:
            type: string
        order:
          type: number
          description: Sorting order number. Returned by GET operations
        isDeleted:
          type: boolean
          description: Sign for delete current Workflow Initiator. Optional. *Partial
            Update operations* only.
      description: Workflow Initiator Object definition
    Setup_WorkflowType_roleInfo:
      type: object
      properties:
        id:
          type: string
          description: The id string (GUID) of Role. Required if Name is empty
        name:
          type: string
          description: The Name of Role. Required if Id is empty
        users:
          type: array
          description: Array of users.
          items:
            $ref: '#/components/schemas/Setup_WorkflowType_userInfo'
        groups:
          type: array
          description: Array of groups.
          items:
            $ref: '#/components/schemas/Setup_WorkflowType_groupInfo'
        isDeleted:
          type: boolean
          description: Sign for deleted record. Optional. *Partial Update operation*
            only.
      description: Role Info Object definition
    Setup_WorkflowType_workflowPermissionInfo:
      required:
      - role
      type: object
      properties:
        role:
          type: string
          description: |-
            The id string (GUID) or Name of Workflow permission.
            GET operation returns id string (GUID).
        flags:
          type: string
          description: |-
            Array of Workflow Instance Permissions\
            _AllFormFieldAccess_ = ViewAllFormFields, EditAllFormFields, OverrideAllFormFields\
            _FullAccess_ = all permissions
          enum:
          - NoAccess
          - Close
          - Reopen
          - Delete
          - Rename
          - Assign
          - Schedule
          - AssociateObjects
          - AssociateDocuments
          - AddComments
          - ViewComments
          - ViewHistory
          - Open
          - Report
          - SetWorkflowID
          - CompleteUnderlying Task
          - ViewUnderlying Task
          - ViewAllFormFields
          - EditAllFormFields
          - OverrideAllFormFields
          - AllFormFieldAccess
          - FullAccess
      description: Workflow Permission Info Object definition
    Setup_WorkflowType_stepPermissionsInfo:
      required:
      - role
      - steps
      type: object
      properties:
        role:
          type: string
          description: |-
            The id string (GUID) or Name of any Step role, Other role or predefined (Assignee, Creator, "Previous Assignee") role but "Workflow Manager".
            GET operations returns id string (GUID).
        isDeleted:
          type: boolean
          description: Sign for delete this step permission info. Optional. *Partial
            Update operation* only.
        steps:
          type: array
          description: Array of Workflow Step Permissions. Required if not isDeleted
          items:
            $ref: '#/components/schemas/Setup_WorkflowType_stepPermission'
      description: Step Permissions Info Object definition
    Setup_WorkflowType_stepPermission:
      required:
      - step
      type: object
      properties:
        step:
          type: string
          description: The workflow step id string (GUID) or Name.
        allGlobal:
          type: string
          description: "All Global Form Fields. Optional. Override includes View &\
            \ Edit, Edit includes View"
          default: NoAccess
          enum:
          - NoAccess
          - View
          - Edit
          - Override
          - FullAccess
        allLocal:
          type: string
          description: "All Local Form Fields. Optional. Override includes View &\
            \ Edit, Edit includes View"
          default: NoAccess
          enum:
          - NoAccess
          - View
          - Edit
          - Override
          - FullAccess
        formFields:
          $ref: '#/components/schemas/Setup_WorkflowType_udfIdOrNameMapToWorkflowStepPermission'
      description: Step Permission definition
    Setup_WorkflowType_poorUsersInfo:
      type: object
      properties:
        notFound:
          type: array
          description: Array of id string (GUID) of Users with not founded login.
          items:
            type: string
        deleted:
          type: array
          description: '''Array of id string (GUID) and name of Users marked as deleted.'''
          items:
            $ref: '#/components/schemas/Setup_WorkflowType_idNamePair'
        expired:
          type: array
          description: '''Array of id string (GUID) and name of Users are expired.'''
          items:
            $ref: '#/components/schemas/Setup_WorkflowType_idNamePair'
      description: Role Users with restrictions. Not required. Returned by *Get operations*
        only if that users are found.
    Setup_WorkflowType_idNamePair:
      type: object
      properties:
        id:
          type: string
          description: Id string (GUID)
        name:
          type: string
          description: name
      description: id and Name Pair.
    Setup_WorkflowType_idNameVersion:
      type: object
      properties:
        id:
          type: string
          description: Id string (GUID)
        name:
          type: string
          description: name
        version:
          type: number
          description: version
      description: "id, name and version of object."
    Setup_WorkflowType_userInfo:
      type: object
      properties:
        id:
          type: string
          description: Id string (GUID) of the User
        name:
          type: string
          description: login of the User
        firstName:
          type: string
          description: First name of the User
        lastName:
          type: string
          description: Last name of the User
      description: "id, name and login of User."
    Setup_WorkflowType_groupInfo:
      type: object
      properties:
        id:
          type: string
          description: Id string (GUID) of the User
        name:
          type: string
          description: login of the User
        users:
          type: array
          description: Array of users
          items:
            $ref: '#/components/schemas/Setup_WorkflowType_userInfo'
      description: "id, name and users of Group."
    Setup_WorkflowType_workflowTypeGeneralBody:
      type: object
      properties:
        newName:
          type: string
          description: 'The new name of workflow type. '
        idGenScheme:
          type: string
          description: |-
            The id string (GUID) for the generating scheme. Optional. If not specified or empty it uses default value.\
            _{Workflow Type}_ - The name of the Workflow Type\
            _{Version}_ - The three digit (000-999) version number of the Workflow Type\
            _{Year}_ - The four digit numeric designation for the current year\
            _{Month}_ - The two digit numeric designation for the current month\
            _{Day}_ - The two digit numeric designation for the current day\
            _{Hour}_ - The two digit (24-hour format) numeric designation for the current hour\
            _{Minute}_ - The two digit (00-59) numeric designation for the current minute within the hour\
            _{AlphaID}_ - The first 12 hexadecimal characters obtained from a Uniqueidentifier value\
            _{NumericID}_ - The 9 digits composed of the next available integer value in a sequence starting at 000000001 and ending at 999999999
        description:
          type: string
          description: The description of workflow type.
        forAppConfiguration:
          type: boolean
          description: Represent a Workflow Type Used for Configuration.
      description: Workflow Type General properties
    Setup_WorkflowType_workflowTypeCopyBody:
      type: object
      properties:
        name:
          type: string
          description: 'The new name of workflow type. '
        idGenScheme:
          type: string
          description: |-
            The id string (GUID) for the generating scheme. Optional. If not specified or empty it uses default value.\
            _{Workflow Type}_ - The name of the Workflow Type\
            _{Version}_ - The three digit (000-999) version number of the Workflow Type\
            _{Year}_ - The four digit numeric designation for the current year\
            _{Month}_ - The two digit numeric designation for the current month\
            _{Day}_ - The two digit numeric designation for the current day\
            _{Hour}_ - The two digit (24-hour format) numeric designation for the current hour\
            _{Minute}_ - The two digit (00-59) numeric designation for the current minute within the hour\
            _{AlphaID}_ - The first 12 hexadecimal characters obtained from a Uniqueidentifier value\
            _{NumericID}_ - The 9 digits composed of the next available integer value in a sequence starting at 000000001 and ending at 999999999
      description: Workflow Type Copy parameters
    Setup_WorkflowType_udfIdOrNameMapToWorkflowStepPermission:
      type: object
      properties:
        udfIdOrName:
          type: string
          enum:
          - NoAccess
          - View
          - Edit
          - Override
          - FullAccess
      additionalProperties:
        type: string
        enum:
        - NoAccess
        - View
        - Edit
        - Override
        - FullAccess
      description: |-
        Dictionary of Form Field permissions. Optional. Dictionary of "udfIdOrName":"workflowStepPermission".\
        GET operations return id string (GUID) as key "udfIdOrName".
    Setup_WorkflowType_workflowTypeDeleteResultInfo:
      type: object
      properties:
        notfound:
          type: array
          description: Array of id string (GUID) of the workflow type not founded
            while deleting
          items:
            type: string
        deleted:
          type: array
          description: Array of id string (GUID) of the succesfully deleted workflow
            types
          items:
            type: string
      description: Workflow Type Result Structure
    Setup_WorkflowType_workflowTypesDeleteBody:
      type: object
      properties:
        typeIdOrNames:
          type: array
          description: Array of id string (GUID) or names of the workflow types
          items:
            type: string
      description: Workflow Types parameter Structure
  securitySchemes:
    Bearer:
      type: apiKey
      description: "**Enviance \\<SessionId\\>**. \nObtain SessionId by POST /ver2/AuthenticationService.svc/sessions\
        \ first"
      name: Authorization
      in: header
    Basic:
      type: http
      description: "Supported, but not recommended"
      scheme: basic
x-original-swagger-version: "2.0"
